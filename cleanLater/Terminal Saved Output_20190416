Last login: Tue Apr 16 16:21:36 on ttys000
dhcp-128-83-97-67:~ krh2382$ cd monitain/analysis
dhcp-128-83-97-67:analysis krh2382$ ipython
Python 2.7.14 |Anaconda, Inc.| (default, Dec  7 2017, 11:07:58) 
Type "copyright", "credits" or "license" for more information.

IPython 5.4.1 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: 
In [1]: 
   ...: #Get color values to set palette 
   ...: #pal = (sea.color_palette("Greens", n_colors=2))
   ...: #pal.as_hex()
   ...: 
   ...: my_pal = ['#aedea7', #Green
   ...: ^I^I  '#abd0e6', #Blue 
   ...: ^I^I  '#3787c0', #Blue 
   ...: ^I^I  '#fca082', #Red 
   ...: ^I^I  '#e32f27', #Red
   ...: ^I^I  '#c6c7e1', #Purple
   ...: ^I^I  '#796eb2', #Purple
   ...: ^I^I  '#37a055'  #Green
   ...: ^I^I  ]
   ...: 
   ...: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_d
   ...: f, block6_df, block7_df, block8_df], axis=0)
   ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
   ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=al
   ...: l_df, palette = my_pal, cut = 0)
   ...: plt.xlabel('Subject')
   ...: plt.ylabel('Reaction time (s)')
   ...: sea.despine()
   ...: 

In [2]: plt.legend(title='Block', labels=['1', '1', '2', '1', '2', '1', '2', '2'
   ...: ])
Out[2]: <matplotlib.legend.Legend at 0x1043c0250>

In [3]: plt.legend(title='Block', labels=['Baseline 1', 'Maintain 1', 'Maintain 2', 'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
Out[3]: <matplotlib.legend.Legend at 0x1a217209d0>

In [4]: plt.show(ax)
            


^C---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/backend_bases.pyc in enter_notify_event(self, guiEvent, xy)
   2001         self._lastx, self._lasty = None, None
   2002 
-> 2003     def enter_notify_event(self, guiEvent=None, xy=None):
   2004         """
   2005         Backend derived classes should call this function when entering

KeyboardInterrupt: 

In [5]: ax
Out[5]: <matplotlib.axes._subplots.AxesSubplot at 0x1a1e626c50>

In [6]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
   ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
   ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
   ...: plt.xlabel('Subject')
   ...: plt.ylabel('Reaction time (s)')
   ...: 
Out[6]: Text(0,0.5,u'Reaction time (s)')

In [7]: handles, _ = ax.get_legend_handles_labels()

In [8]: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2', 
   ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
Out[8]: <matplotlib.legend.Legend at 0x1a16122bd0>

In [9]: ax.legend(title = 'Block')
Out[9]: <matplotlib.legend.Legend at 0x1a160a7650>

In [10]: plt.close()

In [11]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2', 
    ...:     ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
  File "<ipython-input-11-8651a279ac75>", line 8
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ^
SyntaxError: invalid syntax


In [12]: 

In [12]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
    ...: 

In [13]: plt.close()

In [14]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: 
Out[14]: <matplotlib.legend.Legend at 0x1a16071490>

In [15]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: ax.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: 
Out[15]: <matplotlib.legend.Legend at 0x1a1e63e610>

In [16]: 

In [16]: plt.close()

In [17]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: ax.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: 
Out[17]: <matplotlib.legend.Legend at 0x1a0c91c790>

In [18]: plt.close()

In [19]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: ax.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8), ncol=1)
    ...: 
    ...: 
Out[19]: <matplotlib.legend.Legend at 0x1a0cd8d210>

In [20]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: ax.legend(title='Block')
    ...: 
    ...: 
    ...: 
Out[20]: <matplotlib.legend.Legend at 0x1a161c7a50>

In [21]: plt.close()

In [22]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: ax.legend(title='Block')
    ...: 
    ...: 
    ...: 
Out[22]: <matplotlib.legend.Legend at 0x1a16071850>

In [23]: plt.close()

In [24]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block')
    ...: 
    ...: 
    ...: 
    ...: 
Out[24]: <matplotlib.legend.Legend at 0x1a16166210>

In [25]: plt.close()

In [26]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: ax.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
    ...: 

In [27]: plt.close()

In [28]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
    ...: 

In [29]: plt.close9)
  File "<ipython-input-29-66bbe953910e>", line 1
    plt.close9)
              ^
SyntaxError: invalid syntax


In [30]: plt.close()

In [31]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
    ...: 
    ...: 

In [32]: plt.close()

In [33]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(title='Block', loc='upper center')
    ...: sea.despine()
    ...: 
    ...: 


In [34]: 

In [34]: plt.close()

In [35]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(title='Block', loc='upper right')
    ...: sea.despine()
    ...: 
    ...: 


In [36]: 

In [36]: subj_df
Out[36]: 
    subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
0    s03      1         70         1            top           NaN  NaN   
1    s03      1        130         1            bot           NaN  NaN   
2    s03      1        140         1            top           NaN  NaN   
3    s03      1        110         1            bot           NaN  NaN   
4    s03      1        160         1            top           NaN  NaN   
5    s03      1        120         1            bot           NaN  NaN   
6    s03      1        160         1            bot           NaN  NaN   
7    s03      1         10         1            top           NaN  NaN   
8    s03      1        110         1            bot           NaN  NaN   
9    s03      1        120         1            bot           NaN  NaN   
10   s03      1         10         1            bot           NaN  NaN   
11   s03      1        140         1            top           NaN  NaN   
12   s03      1         20         1            bot           NaN  NaN   
13   s03      1        170         1            top           NaN  NaN   
14   s03      1        110         1            bot           NaN  NaN   
15   s03      1         30         1            bot           NaN  NaN   
16   s03      1        100         1            top           NaN  NaN   
17   s03      1         60         1            bot           NaN  NaN   
18   s03      1         20         1            bot           NaN  NaN   
19   s03      1        100         1            bot           NaN  NaN   
20   s03      1         50         1            bot           NaN  NaN   
21   s03      1         60         1            bot           NaN  NaN   
22   s03      1        140         1            bot           NaN  NaN   
23   s03      1         60         1            top           NaN  NaN   
24   s03      1        130         1            bot           NaN  NaN   
25   s03      1        170         1            bot           NaN  NaN   
26   s03      1         40         1            top           NaN  NaN   
27   s03      1        170         1            top           NaN  NaN   
28   s03      1        150         1            bot           NaN  NaN   
29   s03      1         20         1            bot           NaN  NaN   
..   ...    ...        ...       ...            ...           ...  ...   
302  s03      8         20         1            bot           NaN  NaN   
303  s03      8        160         1            bot           NaN  NaN   
304  s03      8         20         1            bot           NaN  NaN   
305  s03      8         40         1            top           NaN  NaN   
306  s03      8         30         1            bot           NaN  NaN   
307  s03      8        140         1            bot           NaN  NaN   
308  s03      8         70         1            bot           NaN  NaN   
309  s03      8         10         1            bot           NaN  NaN   
310  s03      8        130         1            top           NaN  NaN   
311  s03      8         20         1            bot           NaN  NaN   
312  s03      8         30         1            bot           NaN  NaN   
313  s03      8         10         1            top           NaN  NaN   
314  s03      8        100         1            top           NaN  NaN   
315  s03      8         10         1            top           NaN  NaN   
316  s03      8        140         1            top           NaN  NaN   
317  s03      8        130         1            top           NaN  NaN   
318  s03      8        150         1            top           NaN  NaN   
319  s03      8        110         1            top           NaN  NaN   
320  s03      8        110         1            top           NaN  NaN   
321  s03      8         70         1            top           NaN  NaN   
322  s03      8        150         1            top           NaN  NaN   
323  s03      8        140         1            top           NaN  NaN   
324  s03      8         30         1            bot           NaN  NaN   
325  s03      8        100         1            bot           NaN  NaN   
326  s03      8         10         1            bot           NaN  NaN   
327  s03      8         50         1            bot           NaN  NaN   
328  s03      8         10         1            top           NaN  NaN   
329  s03      8         50         1            top           NaN  NaN   
330  s03      8         40         1            top           NaN  NaN   
331  s03      8        160         1            bot           NaN  NaN   

      word0 word1 word2  ...  respProbe12 rtProbe12 probe12_acc respProbe13  \
0    skeeks   NaN   NaN  ...          NaN       NaN         NaN         NaN   
1      late   NaN   NaN  ...          NaN       NaN         NaN         NaN   
2      culs   NaN   NaN  ...          NaN       NaN         NaN         NaN   
3      home   NaN   NaN  ...          NaN       NaN         NaN         NaN   
4       som   NaN   NaN  ...          NaN       NaN         NaN         NaN   
5     place   NaN   NaN  ...          NaN       NaN         NaN         NaN   
6     shoot   NaN   NaN  ...          NaN       NaN         NaN         NaN   
7     drink   NaN   NaN  ...          NaN       NaN         NaN         NaN   
8     varse   NaN   NaN  ...          NaN       NaN         NaN         NaN   
9      lead   NaN   NaN  ...          NaN       NaN         NaN         NaN   
10    tight   NaN   NaN  ...          NaN       NaN         NaN         NaN   
11      low   NaN   NaN  ...          NaN       NaN         NaN         NaN   
12    claim   NaN   NaN  ...          NaN       NaN         NaN         NaN   
13     fint   NaN   NaN  ...          NaN       NaN         NaN         NaN   
14    split   NaN   NaN  ...          NaN       NaN         NaN         NaN   
15     cook   NaN   NaN  ...          NaN       NaN         NaN         NaN   
16     need   NaN   NaN  ...          NaN       NaN         NaN         NaN   
17      saz   NaN   NaN  ...          NaN       NaN         NaN         NaN   
18    booth   NaN   NaN  ...          NaN       NaN         NaN         NaN   
19     cent   NaN   NaN  ...          NaN       NaN         NaN         NaN   
20    reach   NaN   NaN  ...          NaN       NaN         NaN         NaN   
21    fight   NaN   NaN  ...          NaN       NaN         NaN         NaN   
22    sheck   NaN   NaN  ...          NaN       NaN         NaN         NaN   
23     tord   NaN   NaN  ...          NaN       NaN         NaN         NaN   
24     wobe   NaN   NaN  ...          NaN       NaN         NaN         NaN   
25     belt   NaN   NaN  ...          NaN       NaN         NaN         NaN   
26   friend   NaN   NaN  ...          NaN       NaN         NaN         NaN   
27   smooth   NaN   NaN  ...          NaN       NaN         NaN         NaN   
28     rule   NaN   NaN  ...          NaN       NaN         NaN         NaN   
29     snan   NaN   NaN  ...          NaN       NaN         NaN         NaN   
..      ...   ...   ...  ...          ...       ...         ...         ...   
302    cock   NaN   NaN  ...          NaN       NaN         NaN         NaN   
303   kreen   NaN   NaN  ...          NaN       NaN         NaN         NaN   
304    fill   NaN   NaN  ...          NaN       NaN         NaN         NaN   
305   kripe   NaN   NaN  ...          NaN       NaN         NaN         NaN   
306    mife   NaN   NaN  ...          NaN       NaN         NaN         NaN   
307    swim   NaN   NaN  ...          NaN       NaN         NaN         NaN   
308    roop   NaN   NaN  ...          NaN       NaN         NaN         NaN   
309     job   NaN   NaN  ...          NaN       NaN         NaN         NaN   
310    zore   NaN   NaN  ...          NaN       NaN         NaN         NaN   
311   forth   NaN   NaN  ...          NaN       NaN         NaN         NaN   
312  school   NaN   NaN  ...          NaN       NaN         NaN         NaN   
313  blonde   NaN   NaN  ...          NaN       NaN         NaN         NaN   
314  kreesh   NaN   NaN  ...          NaN       NaN         NaN         NaN   
315    sove   NaN   NaN  ...          NaN       NaN         NaN         NaN   
316     ter   NaN   NaN  ...          NaN       NaN         NaN         NaN   
317    mile   NaN   NaN  ...          NaN       NaN         NaN         NaN   
318     hep   NaN   NaN  ...          NaN       NaN         NaN         NaN   
319    larn   NaN   NaN  ...          NaN       NaN         NaN         NaN   
320   borne   NaN   NaN  ...          NaN       NaN         NaN         NaN   
321    deal   NaN   NaN  ...          NaN       NaN         NaN         NaN   
322    muvh   NaN   NaN  ...          NaN       NaN         NaN         NaN   
323    lean   NaN   NaN  ...          NaN       NaN         NaN         NaN   
324     nav   NaN   NaN  ...          NaN       NaN         NaN         NaN   
325    test   NaN   NaN  ...          NaN       NaN         NaN         NaN   
326    tape   NaN   NaN  ...          NaN       NaN         NaN         NaN   
327   grade   NaN   NaN  ...          NaN       NaN         NaN         NaN   
328    gret   NaN   NaN  ...          NaN       NaN         NaN         NaN   
329    jole   NaN   NaN  ...          NaN       NaN         NaN         NaN   
330    rush   NaN   NaN  ...          NaN       NaN         NaN         NaN   
331    fail   NaN   NaN  ...          NaN       NaN         NaN         NaN   

    rtProbe13 probe13_acc respProbe14 rtProbe14 probe14_acc trial  
0         NaN         NaN         NaN       NaN         NaN     0  
1         NaN         NaN         NaN       NaN         NaN     1  
2         NaN         NaN         NaN       NaN         NaN     2  
3         NaN         NaN         NaN       NaN         NaN     3  
4         NaN         NaN         NaN       NaN         NaN     4  
5         NaN         NaN         NaN       NaN         NaN     5  
6         NaN         NaN         NaN       NaN         NaN     6  
7         NaN         NaN         NaN       NaN         NaN     7  
8         NaN         NaN         NaN       NaN         NaN     8  
9         NaN         NaN         NaN       NaN         NaN     9  
10        NaN         NaN         NaN       NaN         NaN    10  
11        NaN         NaN         NaN       NaN         NaN    11  
12        NaN         NaN         NaN       NaN         NaN    12  
13        NaN         NaN         NaN       NaN         NaN    13  
14        NaN         NaN         NaN       NaN         NaN    14  
15        NaN         NaN         NaN       NaN         NaN    15  
16        NaN         NaN         NaN       NaN         NaN    16  
17        NaN         NaN         NaN       NaN         NaN    17  
18        NaN         NaN         NaN       NaN         NaN    18  
19        NaN         NaN         NaN       NaN         NaN    19  
20        NaN         NaN         NaN       NaN         NaN    20  
21        NaN         NaN         NaN       NaN         NaN    21  
22        NaN         NaN         NaN       NaN         NaN    22  
23        NaN         NaN         NaN       NaN         NaN    23  
24        NaN         NaN         NaN       NaN         NaN    24  
25        NaN         NaN         NaN       NaN         NaN    25  
26        NaN         NaN         NaN       NaN         NaN    26  
27        NaN         NaN         NaN       NaN         NaN    27  
28        NaN         NaN         NaN       NaN         NaN    28  
29        NaN         NaN         NaN       NaN         NaN    29  
..        ...         ...         ...       ...         ...   ...  
302       NaN         NaN         NaN       NaN         NaN   302  
303       NaN         NaN         NaN       NaN         NaN   303  
304       NaN         NaN         NaN       NaN         NaN   304  
305       NaN         NaN         NaN       NaN         NaN   305  
306       NaN         NaN         NaN       NaN         NaN   306  
307       NaN         NaN         NaN       NaN         NaN   307  
308       NaN         NaN         NaN       NaN         NaN   308  
309       NaN         NaN         NaN       NaN         NaN   309  
310       NaN         NaN         NaN       NaN         NaN   310  
311       NaN         NaN         NaN       NaN         NaN   311  
312       NaN         NaN         NaN       NaN         NaN   312  
313       NaN         NaN         NaN       NaN         NaN   313  
314       NaN         NaN         NaN       NaN         NaN   314  
315       NaN         NaN         NaN       NaN         NaN   315  
316       NaN         NaN         NaN       NaN         NaN   316  
317       NaN         NaN         NaN       NaN         NaN   317  
318       NaN         NaN         NaN       NaN         NaN   318  
319       NaN         NaN         NaN       NaN         NaN   319  
320       NaN         NaN         NaN       NaN         NaN   320  
321       NaN         NaN         NaN       NaN         NaN   321  
322       NaN         NaN         NaN       NaN         NaN   322  
323       NaN         NaN         NaN       NaN         NaN   323  
324       NaN         NaN         NaN       NaN         NaN   324  
325       NaN         NaN         NaN       NaN         NaN   325  
326       NaN         NaN         NaN       NaN         NaN   326  
327       NaN         NaN         NaN       NaN         NaN   327  
328       NaN         NaN         NaN       NaN         NaN   328  
329       NaN         NaN         NaN       NaN         NaN   329  
330       NaN         NaN         NaN       NaN         NaN   330  
331       NaN         NaN         NaN       NaN         NaN   331  

[332 rows x 115 columns]

In [37]: df_main
Out[37]: 
     index subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
0        0  s01      1         10         1            top           NaN  NaN   
1        1  s01      1         20         1            top           NaN  NaN   
2        2  s01      1         70         1            top           NaN  NaN   
3        3  s01      1        120         1            top           NaN  NaN   
4        4  s01      1         20         1            top           NaN  NaN   
5        5  s01      1         20         1            bot           NaN  NaN   
6        6  s01      1         10         1            top           NaN  NaN   
7        7  s01      1         20         1            bot           NaN  NaN   
8        8  s01      1         10         1            bot           NaN  NaN   
9        9  s01      1         50         1            top           NaN  NaN   
10      10  s01      1        130         1            top           NaN  NaN   
11      11  s01      1         80         1            bot           NaN  NaN   
12      12  s01      1        100         1            bot           NaN  NaN   
13      13  s01      1         80         1            bot           NaN  NaN   
14      14  s01      1         50         1            bot           NaN  NaN   
15      15  s01      1        120         1            bot           NaN  NaN   
16      16  s01      1        150         1            top           NaN  NaN   
17      17  s01      1         60         1            bot           NaN  NaN   
18      18  s01      1        170         1            top           NaN  NaN   
19      19  s01      1        140         1            top           NaN  NaN   
20      20  s01      1        170         1            top           NaN  NaN   
21      21  s01      1        150         1            top           NaN  NaN   
22      22  s01      1         40         1            bot           NaN  NaN   
23      23  s01      1         50         1            bot           NaN  NaN   
24      24  s01      1         60         1            top           NaN  NaN   
25      25  s01      1        100         1            bot           NaN  NaN   
26      26  s01      1         10         1            top           NaN  NaN   
27      27  s01      1         60         1            top           NaN  NaN   
28      28  s01      1         70         1            top           NaN  NaN   
29      29  s01      1         10         1            bot           NaN  NaN   
..     ...  ...    ...        ...       ...            ...           ...  ...   
966    302  s03      8         20         1            bot           NaN  NaN   
967    303  s03      8        160         1            bot           NaN  NaN   
968    304  s03      8         20         1            bot           NaN  NaN   
969    305  s03      8         40         1            top           NaN  NaN   
970    306  s03      8         30         1            bot           NaN  NaN   
971    307  s03      8        140         1            bot           NaN  NaN   
972    308  s03      8         70         1            bot           NaN  NaN   
973    309  s03      8         10         1            bot           NaN  NaN   
974    310  s03      8        130         1            top           NaN  NaN   
975    311  s03      8         20         1            bot           NaN  NaN   
976    312  s03      8         30         1            bot           NaN  NaN   
977    313  s03      8         10         1            top           NaN  NaN   
978    314  s03      8        100         1            top           NaN  NaN   
979    315  s03      8         10         1            top           NaN  NaN   
980    316  s03      8        140         1            top           NaN  NaN   
981    317  s03      8        130         1            top           NaN  NaN   
982    318  s03      8        150         1            top           NaN  NaN   
983    319  s03      8        110         1            top           NaN  NaN   
984    320  s03      8        110         1            top           NaN  NaN   
985    321  s03      8         70         1            top           NaN  NaN   
986    322  s03      8        150         1            top           NaN  NaN   
987    323  s03      8        140         1            top           NaN  NaN   
988    324  s03      8         30         1            bot           NaN  NaN   
989    325  s03      8        100         1            bot           NaN  NaN   
990    326  s03      8         10         1            bot           NaN  NaN   
991    327  s03      8         50         1            bot           NaN  NaN   
992    328  s03      8         10         1            top           NaN  NaN   
993    329  s03      8         50         1            top           NaN  NaN   
994    330  s03      8         40         1            top           NaN  NaN   
995    331  s03      8        160         1            bot           NaN  NaN   

       word0 word1  ...  respProbe12 rtProbe12 probe12_acc respProbe13  \
0       plob   NaN  ...          NaN       NaN         NaN         NaN   
1      raise   NaN  ...          NaN       NaN         NaN         NaN   
2       fare   NaN  ...          NaN       NaN         NaN         NaN   
3     battle   NaN  ...          NaN       NaN         NaN         NaN   
4       fore   NaN  ...          NaN       NaN         NaN         NaN   
5      phote   NaN  ...          NaN       NaN         NaN         NaN   
6     skeeks   NaN  ...          NaN       NaN         NaN         NaN   
7       paid   NaN  ...          NaN       NaN         NaN         NaN   
8    sneiled   NaN  ...          NaN       NaN         NaN         NaN   
9       work   NaN  ...          NaN       NaN         NaN         NaN   
10       art   NaN  ...          NaN       NaN         NaN         NaN   
11      doop   NaN  ...          NaN       NaN         NaN         NaN   
12    shoops   NaN  ...          NaN       NaN         NaN         NaN   
13     black   NaN  ...          NaN       NaN         NaN         NaN   
14      vrip   NaN  ...          NaN       NaN         NaN         NaN   
15   bleeced   NaN  ...          NaN       NaN         NaN         NaN   
16    street   NaN  ...          NaN       NaN         NaN         NaN   
17      type   NaN  ...          NaN       NaN         NaN         NaN   
18      dirt   NaN  ...          NaN       NaN         NaN         NaN   
19       tie   NaN  ...          NaN       NaN         NaN         NaN   
20       jum   NaN  ...          NaN       NaN         NaN         NaN   
21      gulk   NaN  ...          NaN       NaN         NaN         NaN   
22      lose   NaN  ...          NaN       NaN         NaN         NaN   
23      teeg   NaN  ...          NaN       NaN         NaN         NaN   
24     stake   NaN  ...          NaN       NaN         NaN         NaN   
25      fuel   NaN  ...          NaN       NaN         NaN         NaN   
26      gwab   NaN  ...          NaN       NaN         NaN         NaN   
27      javs   NaN  ...          NaN       NaN         NaN         NaN   
28       lad   NaN  ...          NaN       NaN         NaN         NaN   
29     clake   NaN  ...          NaN       NaN         NaN         NaN   
..       ...   ...  ...          ...       ...         ...         ...   
966     cock   NaN  ...          NaN       NaN         NaN         NaN   
967    kreen   NaN  ...          NaN       NaN         NaN         NaN   
968     fill   NaN  ...          NaN       NaN         NaN         NaN   
969    kripe   NaN  ...          NaN       NaN         NaN         NaN   
970     mife   NaN  ...          NaN       NaN         NaN         NaN   
971     swim   NaN  ...          NaN       NaN         NaN         NaN   
972     roop   NaN  ...          NaN       NaN         NaN         NaN   
973      job   NaN  ...          NaN       NaN         NaN         NaN   
974     zore   NaN  ...          NaN       NaN         NaN         NaN   
975    forth   NaN  ...          NaN       NaN         NaN         NaN   
976   school   NaN  ...          NaN       NaN         NaN         NaN   
977   blonde   NaN  ...          NaN       NaN         NaN         NaN   
978   kreesh   NaN  ...          NaN       NaN         NaN         NaN   
979     sove   NaN  ...          NaN       NaN         NaN         NaN   
980      ter   NaN  ...          NaN       NaN         NaN         NaN   
981     mile   NaN  ...          NaN       NaN         NaN         NaN   
982      hep   NaN  ...          NaN       NaN         NaN         NaN   
983     larn   NaN  ...          NaN       NaN         NaN         NaN   
984    borne   NaN  ...          NaN       NaN         NaN         NaN   
985     deal   NaN  ...          NaN       NaN         NaN         NaN   
986     muvh   NaN  ...          NaN       NaN         NaN         NaN   
987     lean   NaN  ...          NaN       NaN         NaN         NaN   
988      nav   NaN  ...          NaN       NaN         NaN         NaN   
989     test   NaN  ...          NaN       NaN         NaN         NaN   
990     tape   NaN  ...          NaN       NaN         NaN         NaN   
991    grade   NaN  ...          NaN       NaN         NaN         NaN   
992     gret   NaN  ...          NaN       NaN         NaN         NaN   
993     jole   NaN  ...          NaN       NaN         NaN         NaN   
994     rush   NaN  ...          NaN       NaN         NaN         NaN   
995     fail   NaN  ...          NaN       NaN         NaN         NaN   

    rtProbe13 probe13_acc respProbe14 rtProbe14 probe14_acc trial  
0         NaN         NaN         NaN       NaN         NaN     0  
1         NaN         NaN         NaN       NaN         NaN     1  
2         NaN         NaN         NaN       NaN         NaN     2  
3         NaN         NaN         NaN       NaN         NaN     3  
4         NaN         NaN         NaN       NaN         NaN     4  
5         NaN         NaN         NaN       NaN         NaN     5  
6         NaN         NaN         NaN       NaN         NaN     6  
7         NaN         NaN         NaN       NaN         NaN     7  
8         NaN         NaN         NaN       NaN         NaN     8  
9         NaN         NaN         NaN       NaN         NaN     9  
10        NaN         NaN         NaN       NaN         NaN    10  
11        NaN         NaN         NaN       NaN         NaN    11  
12        NaN         NaN         NaN       NaN         NaN    12  
13        NaN         NaN         NaN       NaN         NaN    13  
14        NaN         NaN         NaN       NaN         NaN    14  
15        NaN         NaN         NaN       NaN         NaN    15  
16        NaN         NaN         NaN       NaN         NaN    16  
17        NaN         NaN         NaN       NaN         NaN    17  
18        NaN         NaN         NaN       NaN         NaN    18  
19        NaN         NaN         NaN       NaN         NaN    19  
20        NaN         NaN         NaN       NaN         NaN    20  
21        NaN         NaN         NaN       NaN         NaN    21  
22        NaN         NaN         NaN       NaN         NaN    22  
23        NaN         NaN         NaN       NaN         NaN    23  
24        NaN         NaN         NaN       NaN         NaN    24  
25        NaN         NaN         NaN       NaN         NaN    25  
26        NaN         NaN         NaN       NaN         NaN    26  
27        NaN         NaN         NaN       NaN         NaN    27  
28        NaN         NaN         NaN       NaN         NaN    28  
29        NaN         NaN         NaN       NaN         NaN    29  
..        ...         ...         ...       ...         ...   ...  
966       NaN         NaN         NaN       NaN         NaN   302  
967       NaN         NaN         NaN       NaN         NaN   303  
968       NaN         NaN         NaN       NaN         NaN   304  
969       NaN         NaN         NaN       NaN         NaN   305  
970       NaN         NaN         NaN       NaN         NaN   306  
971       NaN         NaN         NaN       NaN         NaN   307  
972       NaN         NaN         NaN       NaN         NaN   308  
973       NaN         NaN         NaN       NaN         NaN   309  
974       NaN         NaN         NaN       NaN         NaN   310  
975       NaN         NaN         NaN       NaN         NaN   311  
976       NaN         NaN         NaN       NaN         NaN   312  
977       NaN         NaN         NaN       NaN         NaN   313  
978       NaN         NaN         NaN       NaN         NaN   314  
979       NaN         NaN         NaN       NaN         NaN   315  
980       NaN         NaN         NaN       NaN         NaN   316  
981       NaN         NaN         NaN       NaN         NaN   317  
982       NaN         NaN         NaN       NaN         NaN   318  
983       NaN         NaN         NaN       NaN         NaN   319  
984       NaN         NaN         NaN       NaN         NaN   320  
985       NaN         NaN         NaN       NaN         NaN   321  
986       NaN         NaN         NaN       NaN         NaN   322  
987       NaN         NaN         NaN       NaN         NaN   323  
988       NaN         NaN         NaN       NaN         NaN   324  
989       NaN         NaN         NaN       NaN         NaN   325  
990       NaN         NaN         NaN       NaN         NaN   326  
991       NaN         NaN         NaN       NaN         NaN   327  
992       NaN         NaN         NaN       NaN         NaN   328  
993       NaN         NaN         NaN       NaN         NaN   329  
994       NaN         NaN         NaN       NaN         NaN   330  
995       NaN         NaN         NaN       NaN         NaN   331  

[996 rows x 116 columns]

In [38]: subj_df['subj']
Out[38]: 
0      s03
1      s03
2      s03
3      s03
4      s03
5      s03
6      s03
7      s03
8      s03
9      s03
10     s03
11     s03
12     s03
13     s03
14     s03
15     s03
16     s03
17     s03
18     s03
19     s03
20     s03
21     s03
22     s03
23     s03
24     s03
25     s03
26     s03
27     s03
28     s03
29     s03
      ... 
302    s03
303    s03
304    s03
305    s03
306    s03
307    s03
308    s03
309    s03
310    s03
311    s03
312    s03
313    s03
314    s03
315    s03
316    s03
317    s03
318    s03
319    s03
320    s03
321    s03
322    s03
323    s03
324    s03
325    s03
326    s03
327    s03
328    s03
329    s03
330    s03
331    s03
Name: subj, Length: 332, dtype: object

In [39]: df_main['subj']
Out[39]: 
0      s01
1      s01
2      s01
3      s01
4      s01
5      s01
6      s01
7      s01
8      s01
9      s01
10     s01
11     s01
12     s01
13     s01
14     s01
15     s01
16     s01
17     s01
18     s01
19     s01
20     s01
21     s01
22     s01
23     s01
24     s01
25     s01
26     s01
27     s01
28     s01
29     s01
      ... 
966    s03
967    s03
968    s03
969    s03
970    s03
971    s03
972    s03
973    s03
974    s03
975    s03
976    s03
977    s03
978    s03
979    s03
980    s03
981    s03
982    s03
983    s03
984    s03
985    s03
986    s03
987    s03
988    s03
989    s03
990    s03
991    s03
992    s03
993    s03
994    s03
995    s03
Name: subj, Length: 996, dtype: object

In [40]: plt.close()

In [41]: allTogether_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: allTogether_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: 
Out[41]: Text(0,0.5,u'Reaction time (s)')

In [42]: plt.close()

In [43]: allTogether_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: allTogether_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Block')
    ...: plt.ylabel('Reaction time (s)')
    ...: 
Out[43]: Text(0,0.5,u'Reaction time (s)')

In [44]: plt.close()

In [45]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block', loc='upper center', bbox_to_anchor=(1.45, 0.8))
    ...: sea.despine()
    ...: plt.savefig(FIGURE_PATH + 'allBySubj_compare.png', dpi = 600)
    ...: plt.close()
    ...: 
    ...: 
    ...: 
    ...: allTogether_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: allTogether_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Block')
    ...: plt.ylabel('Reaction time (s)')
    ...: sea.despine()
    ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dpi = 600)
    ...: plt.close()
    ...: 

In [46]: plt.close()

In [47]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: 
Out[47]: Text(0,0.5,u'Reaction time (s)')

In [48]: sea.despine()
    ...: plt.savefig(FIGURE_PATH + 'allBySubj_compare.png', dpi = 600)
    ...: plt.close()
    ...: 

In [49]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: 
Out[49]: <matplotlib.legend.Legend at 0x1a166fb210>

In [50]: plt.legend(title='Block')
Out[50]: <matplotlib.legend.Legend at 0x1a177c1390>

In [51]: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title='Block')
    ...: 
Out[51]: <matplotlib.legend.Legend at 0x1a1ba30f90>

In [52]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(title = 'Blocks', handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: 
    ...: 
  File "<ipython-input-52-74edbf5b5c7c>", line 7
    plt.legend(title = 'Blocks', handles, ['Baseline 1', 'Maintain 1', 'Maintain 2',
SyntaxError: non-keyword arg after keyword arg


In [53]: plt.close()

In [54]: 
    ...: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
    ...: 
Out[54]: <matplotlib.legend.Legend at 0x1a170f0610>

In [55]: 
    ...: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(bbox_to_anchor=(1, 1), loc=2, borderaxespad=0.)
    ...: 
    ...: 
Out[55]: <matplotlib.legend.Legend at 0x1a17eb6090>

In [56]: 
    ...: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
    ...: 
Out[56]: <matplotlib.legend.Legend at 0x1a16a3c810>

In [57]: plt.close()

In [58]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(title = 'block', handles = ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'], 
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-58-58ec4c03d54d> in <module>()
      6 plt.legend(title = 'block', handles = ['Baseline 1', 'Maintain 1', 'Maintain 2',
      7 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'], 
----> 8 	bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    495                 [self],
    496                 *args,
--> 497                 **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _parse_legend_args(axs, *args, **kwargs)
   1364 
   1365     elif handles is not None and labels is None:
-> 1366         labels = [handle.get_label() for handle in handles]
   1367 
   1368     elif labels is not None and handles is None:

AttributeError: 'str' object has no attribute 'get_label'

In [59]: plt.close()

In [60]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(handles = ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'], 
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-60-e9833b762e01> in <module>()
      4 plt.legend(handles = ['Baseline 1', 'Maintain 1', 'Maintain 2',
      5 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'], 
----> 6 	bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    495                 [self],
    496                 *args,
--> 497                 **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _parse_legend_args(axs, *args, **kwargs)
   1364 
   1365     elif handles is not None and labels is None:
-> 1366         labels = [handle.get_label() for handle in handles]
   1367 
   1368     elif labels is not None and handles is None:

AttributeError: 'str' object has no attribute 'get_label'

In [61]: plt.close()

In [62]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
Out[62]: <matplotlib.legend.Legend at 0x1a18be1ad0>

In [63]: plt.close()

In [64]: ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
  File "<ipython-input-64-72a452e95442>", line 2
    'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
                                                             ^
SyntaxError: invalid syntax


In [65]: 

In [65]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.legend(['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
Out[65]: <matplotlib.legend.Legend at 0x1a18d2cc50>

In [66]: plt.close()

In [67]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
    ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
    ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.get_legend_handles_labels(['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-67-070fdb85d8b9> in <module>()
      4 plt.xlabel('Subject')
      5 plt.ylabel('Reaction time (s)')
----> 6 plt.get_legend_handles_labels(['Baseline 1', 'Maintain 1', 'Maintain 2',
      7 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
      8 plt.legend(title = 'Blocks',  

AttributeError: 'module' object has no attribute 'get_legend_handles_labels'

In [68]: from matplotlib.legend_handler import HandlerLine2D

In [69]: plt.legend(handler_map = ['Baseline 1', 'Maintain 1', 'Maintain 2','Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-69-1226dea474d7> in <module>()
----> 1 plt.legend(handler_map = ['Baseline 1', 'Maintain 1', 'Maintain 2','Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    495                 [self],
    496                 *args,
--> 497                 **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _parse_legend_args(axs, *args, **kwargs)
   1373     # No arguments - automatically detect labels and handles.
   1374     elif len(args) == 0:
-> 1375         handles, labels = _get_legend_handles_labels(axs, handlers)
   1376         if not handles:
   1377             log.warning('No handles with labels found to put in legend.')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _get_legend_handles_labels(axs, legend_handler_map)
   1329     labels = []
   1330 
-> 1331     for handle in _get_legend_handles(axs, legend_handler_map):
   1332         label = handle.get_label()
   1333         if (label and not label.startswith('_')):

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _get_legend_handles(axs, legend_handler_map)
   1311     if legend_handler_map is not None:
   1312         handler_map = handler_map.copy()
-> 1313         handler_map.update(legend_handler_map)
   1314 
   1315     has_handler = Legend.get_legend_handler

ValueError: dictionary update sequence element #0 has length 10; 2 is required

In [70]: plt.legend(label= ['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-70-79d0d8f33520> in <module>()
      1 plt.legend(label= ['Baseline 1', 'Maintain 1', 'Maintain 2',
----> 2 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')
--> 500         self.legend_ = mlegend.Legend(self, handles, labels, **kwargs)
    501         self.legend_._remove_method = lambda h: setattr(self, 'legend_', None)
    502         return self.legend_

TypeError: __init__() got an unexpected keyword argument 'label'

In [71]: 

In [71]: ax.legend(['lalala'])
Out[71]: <matplotlib.legend.Legend at 0x1a16e5c390>

In [72]: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: #handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend(['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: 
Out[72]: <matplotlib.legend.Legend at 0x1a18c0b9d0>

In [73]: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: #handles, _ = ax.get_legend_handles_labels()  
    ...: plt.legend((),(['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2']))
    ...: 
    ...: 
    ...: 
Out[73]: <matplotlib.legend.Legend at 0x1a19028a50>

In [74]: plt.close()

In [75]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: plt.get_legend_handles_labels(['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-75-b6273ecb2152> in <module>()
      2 plt.xlabel('Subject')
      3 plt.ylabel('Reaction time (s)')
----> 4 plt.get_legend_handles_labels(['Baseline 1', 'Maintain 1', 'Maintain 2',
      5 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
      6 plt.legend(title = 'Blocks',  

AttributeError: 'module' object has no attribute 'get_legend_handles_labels'

In [76]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: legend_labels = (['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(handles = legend_labels, title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-76-3070e82a3036> in <module>()
      5 	'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
      6 plt.legend(handles = legend_labels, title = 'Blocks',  
----> 7 	bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    495                 [self],
    496                 *args,
--> 497                 **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _parse_legend_args(axs, *args, **kwargs)
   1364 
   1365     elif handles is not None and labels is None:
-> 1366         labels = [handle.get_label() for handle in handles]
   1367 
   1368     elif labels is not None and handles is None:

AttributeError: 'str' object has no attribute 'get_label'

In [77]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: legend_labels = (['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: 

In [78]: legend_labels
Out[78]: 
['Baseline 1',
 'Maintain 1',
 'Maintain 2',
 'Monitor 1',
 'Monitor 2',
 'M&M 1',
 'M&M 2',
 'Baseline 2']

In [79]: plt.legend(handles = legend_labels, title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)

---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-79-0af25813fb81> in <module>()
      1 plt.legend(handles = legend_labels, title = 'Blocks',  
----> 2 	bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in legend(*args, **kwargs)
   3742 @docstring.copy_dedent(Axes.legend)
   3743 def legend(*args, **kwargs):
-> 3744     ret = gca().legend(*args, **kwargs)
   3745     return ret
   3746 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc in legend(self, *args, **kwargs)
    495                 [self],
    496                 *args,
--> 497                 **kwargs)
    498         if len(extra_args):
    499             raise TypeError('legend only accepts two non-keyword arguments')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/legend.pyc in _parse_legend_args(axs, *args, **kwargs)
   1364 
   1365     elif handles is not None and labels is None:
-> 1366         labels = [handle.get_label() for handle in handles]
   1367 
   1368     elif labels is not None and handles is None:

AttributeError: 'str' object has no attribute 'get_label'

In [80]: 

In [80]: plt.close()

In [81]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: legend_labels = (['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend( title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
Out[81]: <matplotlib.legend.Legend at 0x1a15707c90>

In [82]: plt.close()

In [83]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: legend_labels = (['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend( labels = legend_labels, title = 'Blocks',  
    ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    ...: 
Out[83]: <matplotlib.legend.Legend at 0x1a1a663fd0>

In [84]: plt.close()

In [85]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0, label = legend_labels)
    ...: 

In [86]: legend_labels
Out[86]: 
['Baseline 1',
 'Maintain 1',
 'Maintain 2',
 'Monitor 1',
 'Monitor 2',
 'M&M 1',
 'M&M 2',
 'Baseline 2']

In [87]: plt.close()

In [88]: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0, label = legend_labels)
    ...: plt.xlabel('Subject')
    ...: plt.ylabel('Reaction time (s)')
    ...: legend_labels = (['Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ...: plt.legend(('Baseline 1', 'Maintain 1', 'Maintain 2',
    ...: ^I'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'))
    ...: 
Out[88]: <matplotlib.legend.Legend at 0x1a189fef50>

In [89]: allTogether_df
Out[89]: 
    subj  meanTrial_rt  block
0    s01           NaN      1
1    s01      0.578673      1
2    s01      1.530600      1
3    s01      0.938485      1
4    s01      1.261371      1
5    s01      1.170780      1
6    s01      1.695363      1
7    s01      0.696463      1
8    s01      0.833418      1
9    s01      0.859703      1
10   s01      0.701690      1
11   s01      0.734399      1
12   s01      0.799249      1
13   s01      0.680767      1
14   s01      0.601541      1
15   s01      0.865457      1
16   s01      0.619765      1
17   s01      0.907578      1
18   s01      0.454754      1
19   s01      1.021407      1
20   s01      0.985144      1
21   s01      1.204743      1
22   s01      0.953433      1
23   s01      0.748170      1
24   s01      1.789645      1
25   s01      0.815478      1
26   s01      0.784769      1
27   s01      1.626155      1
28   s01           NaN      1
29   s01      1.430273      1
..   ...           ...    ...
966  s03      0.774844      8
967  s03      0.560298      8
968  s03      0.582982      8
969  s03      0.550393      8
970  s03      0.645242      8
971  s03           NaN      8
972  s03      1.067824      8
973  s03      0.512443      8
974  s03      0.542875      8
975  s03      0.517449      8
976  s03      0.604332      8
977  s03      0.643829      8
978  s03      0.555282      8
979  s03      0.898563      8
980  s03      0.636528      8
981  s03      0.708917      8
982  s03      0.589029      8
983  s03      0.684363      8
984  s03      1.052643      8
985  s03      0.591856      8
986  s03      0.535443      8
987  s03      0.565851      8
988  s03      0.893359      8
989  s03      0.599485      8
990  s03      0.695128      8
991  s03      0.559185      8
992  s03      0.542678      8
993  s03      0.869150      8
994  s03      0.471247      8
995  s03      0.589082      8

[996 rows x 3 columns]

In [90]: allTogether_df['block']
Out[90]: 
0      1
1      1
2      1
3      1
4      1
5      1
6      1
7      1
8      1
9      1
10     1
11     1
12     1
13     1
14     1
15     1
16     1
17     1
18     1
19     1
20     1
21     1
22     1
23     1
24     1
25     1
26     1
27     1
28     1
29     1
      ..
966    8
967    8
968    8
969    8
970    8
971    8
972    8
973    8
974    8
975    8
976    8
977    8
978    8
979    8
980    8
981    8
982    8
983    8
984    8
985    8
986    8
987    8
988    8
989    8
990    8
991    8
992    8
993    8
994    8
995    8
Name: block, Length: 996, dtype: int64

In [91]: for i in allTogether_df.index: 
    ...: ^Iif (allTogether_df['block'] == 1) or (allTogether_df['block'] == 8): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Baseline'
    ...: ^Ielif (allTogether_df['block'] == 2) or (allTogether_df['block'] == 3): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Maintain'
    ...: ^Ielif (allTogether_df['block'] == 4) or (allTogether_df['block'] == 5): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Monitor'
    ...: ^Ielif (allTogether_df['block'] == 6) or (allTogether_df['block'] == 7): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'M&M'
    ...:   
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-91-d5f18289e8b9> in <module>()
      1 for i in allTogether_df.index:
----> 2         if (allTogether_df['block'] == 1) or (allTogether_df['block'] == 8):
      3                 allTogether.loc[i, 'block'] == 'Baseline'
      4         elif (allTogether_df['block'] == 2) or (allTogether_df['block'] == 3):
      5                 allTogether.loc[i, 'block'] == 'Maintain'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in __nonzero__(self)
   1119         raise ValueError("The truth value of a {0} is ambiguous. "
   1120                          "Use a.empty, a.bool(), a.item(), a.any() or a.all()."
-> 1121                          .format(self.__class__.__name__))
   1122 
   1123     __bool__ = __nonzero__

ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().

In [92]: i
Out[92]: 0

In [93]: allTogether_df.loc[i, 'block']
Out[93]: 1

In [94]: for i in allTogether_df.index: 
    ...: ^Iif (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Baseline'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Maintain'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'Monitor'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
    ...: ^I^IallTogether.loc[i, 'block'] == 'M&M'
    ...:   
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-94-945c7be19f63> in <module>()
      1 for i in allTogether_df.index:
      2         if (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8):
----> 3                 allTogether.loc[i, 'block'] == 'Baseline'
      4         elif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3):
      5                 allTogether.loc[i, 'block'] == 'Maintain'

NameError: name 'allTogether' is not defined

In [95]: for i in allTogether_df.index: 
    ...: ^Iif (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
    ...: ^I^IallTogether_df.loc[i, 'block'] == 'Baseline'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
    ...: ^I^IallTogether_df.loc[i, 'block'] == 'Maintain'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
    ...: ^I^IallTogether_df.loc[i, 'block'] == 'Monitor'
    ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
    ...: ^I^IallTogether_df.loc[i, 'block'] == 'M&M'
    ...:   

In [96]: allTogether_df
Out[96]: 
    subj  meanTrial_rt  block
0    s01           NaN      1
1    s01      0.578673      1
2    s01      1.530600      1
3    s01      0.938485      1
4    s01      1.261371      1
5    s01      1.170780      1
6    s01      1.695363      1
7    s01      0.696463      1
8    s01      0.833418      1
9    s01      0.859703      1
10   s01      0.701690      1
11   s01      0.734399      1
12   s01      0.799249      1
13   s01      0.680767      1
14   s01      0.601541      1
15   s01      0.865457      1
16   s01      0.619765      1
17   s01      0.907578      1
18   s01      0.454754      1
19   s01      1.021407      1
20   s01      0.985144      1
21   s01      1.204743      1
22   s01      0.953433      1
23   s01      0.748170      1
24   s01      1.789645      1
25   s01      0.815478      1
26   s01      0.784769      1
27   s01      1.626155      1
28   s01           NaN      1
29   s01      1.430273      1
..   ...           ...    ...
966  s03      0.774844      8
967  s03      0.560298      8
968  s03      0.582982      8
969  s03      0.550393      8
970  s03      0.645242      8
971  s03           NaN      8
972  s03      1.067824      8
973  s03      0.512443      8
974  s03      0.542875      8
975  s03      0.517449      8
976  s03      0.604332      8
977  s03      0.643829      8
978  s03      0.555282      8
979  s03      0.898563      8
980  s03      0.636528      8
981  s03      0.708917      8
982  s03      0.589029      8
983  s03      0.684363      8
984  s03      1.052643      8
985  s03      0.591856      8
986  s03      0.535443      8
987  s03      0.565851      8
988  s03      0.893359      8
989  s03      0.599485      8
990  s03      0.695128      8
991  s03      0.559185      8
992  s03      0.542678      8
993  s03      0.869150      8
994  s03      0.471247      8
995  s03      0.589082      8

[996 rows x 3 columns]

In [97]: i
Out[97]: 995

In [98]: allTogether_df.loc[i, 'block'] 
Out[98]: 8

In [99]: if (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
    ...: ^I^IallTogether_df.loc[i, 'block'] == 'Baseline'
    ...:   

In [100]: allTogether_df.loc[i, 'block'] 
Out[100]: 8

In [101]: if (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
     ...:     print 'yay'
     ...:     
yay

In [102]: allTogether_df.loc[i, 'block'] = 'Baseline'

In [103]: allTogether_df.loc[i, 'block'] 
Out[103]: 'Baseline'

In [104]: for i in allTogether_df.index: 
     ...:     print i
     ...:     
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995

In [105]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.loc[i, 'block'] == 'Baseline'
     ...:   

In [106]: allTogether_df
Out[106]: 
    subj  meanTrial_rt     block
0    s01           NaN         1
1    s01      0.578673         1
2    s01      1.530600         1
3    s01      0.938485         1
4    s01      1.261371         1
5    s01      1.170780         1
6    s01      1.695363         1
7    s01      0.696463         1
8    s01      0.833418         1
9    s01      0.859703         1
10   s01      0.701690         1
11   s01      0.734399         1
12   s01      0.799249         1
13   s01      0.680767         1
14   s01      0.601541         1
15   s01      0.865457         1
16   s01      0.619765         1
17   s01      0.907578         1
18   s01      0.454754         1
19   s01      1.021407         1
20   s01      0.985144         1
21   s01      1.204743         1
22   s01      0.953433         1
23   s01      0.748170         1
24   s01      1.789645         1
25   s01      0.815478         1
26   s01      0.784769         1
27   s01      1.626155         1
28   s01           NaN         1
29   s01      1.430273         1
..   ...           ...       ...
966  s03      0.774844         8
967  s03      0.560298         8
968  s03      0.582982         8
969  s03      0.550393         8
970  s03      0.645242         8
971  s03           NaN         8
972  s03      1.067824         8
973  s03      0.512443         8
974  s03      0.542875         8
975  s03      0.517449         8
976  s03      0.604332         8
977  s03      0.643829         8
978  s03      0.555282         8
979  s03      0.898563         8
980  s03      0.636528         8
981  s03      0.708917         8
982  s03      0.589029         8
983  s03      0.684363         8
984  s03      1.052643         8
985  s03      0.591856         8
986  s03      0.535443         8
987  s03      0.565851         8
988  s03      0.893359         8
989  s03      0.599485         8
990  s03      0.695128         8
991  s03      0.559185         8
992  s03      0.542678         8
993  s03      0.869150         8
994  s03      0.471247         8
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [107]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Baseline'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Maintain'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Monitor'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'M&M'
     ...:   

In [108]: allTogether_df
Out[108]: 
    subj  meanTrial_rt     block
0    s01           NaN         1
1    s01      0.578673         1
2    s01      1.530600         1
3    s01      0.938485         1
4    s01      1.261371         1
5    s01      1.170780         1
6    s01      1.695363         1
7    s01      0.696463         1
8    s01      0.833418         1
9    s01      0.859703         1
10   s01      0.701690         1
11   s01      0.734399         1
12   s01      0.799249         1
13   s01      0.680767         1
14   s01      0.601541         1
15   s01      0.865457         1
16   s01      0.619765         1
17   s01      0.907578         1
18   s01      0.454754         1
19   s01      1.021407         1
20   s01      0.985144         1
21   s01      1.204743         1
22   s01      0.953433         1
23   s01      0.748170         1
24   s01      1.789645         1
25   s01      0.815478         1
26   s01      0.784769         1
27   s01      1.626155         1
28   s01           NaN         1
29   s01      1.430273         1
..   ...           ...       ...
966  s03      0.774844         8
967  s03      0.560298         8
968  s03      0.582982         8
969  s03      0.550393         8
970  s03      0.645242         8
971  s03           NaN         8
972  s03      1.067824         8
973  s03      0.512443         8
974  s03      0.542875         8
975  s03      0.517449         8
976  s03      0.604332         8
977  s03      0.643829         8
978  s03      0.555282         8
979  s03      0.898563         8
980  s03      0.636528         8
981  s03      0.708917         8
982  s03      0.589029         8
983  s03      0.684363         8
984  s03      1.052643         8
985  s03      0.591856         8
986  s03      0.535443         8
987  s03      0.565851         8
988  s03      0.893359         8
989  s03      0.599485         8
990  s03      0.695128         8
991  s03      0.559185         8
992  s03      0.542678         8
993  s03      0.869150         8
994  s03      0.471247         8
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [109]: i
Out[109]: 995

In [110]: allTogether_df.at[i, 'block']
Out[110]: 'Baseline'

In [111]: i = 994

In [112]: allTogether_df.at[i, 'block']
Out[112]: 8

In [113]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1): # or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Baseline'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Maintain'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'Monitor'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 'M&M'
     ...:   

In [114]: allTogether_df
Out[114]: 
    subj  meanTrial_rt     block
0    s01           NaN         1
1    s01      0.578673         1
2    s01      1.530600         1
3    s01      0.938485         1
4    s01      1.261371         1
5    s01      1.170780         1
6    s01      1.695363         1
7    s01      0.696463         1
8    s01      0.833418         1
9    s01      0.859703         1
10   s01      0.701690         1
11   s01      0.734399         1
12   s01      0.799249         1
13   s01      0.680767         1
14   s01      0.601541         1
15   s01      0.865457         1
16   s01      0.619765         1
17   s01      0.907578         1
18   s01      0.454754         1
19   s01      1.021407         1
20   s01      0.985144         1
21   s01      1.204743         1
22   s01      0.953433         1
23   s01      0.748170         1
24   s01      1.789645         1
25   s01      0.815478         1
26   s01      0.784769         1
27   s01      1.626155         1
28   s01           NaN         1
29   s01      1.430273         1
..   ...           ...       ...
966  s03      0.774844         8
967  s03      0.560298         8
968  s03      0.582982         8
969  s03      0.550393         8
970  s03      0.645242         8
971  s03           NaN         8
972  s03      1.067824         8
973  s03      0.512443         8
974  s03      0.542875         8
975  s03      0.517449         8
976  s03      0.604332         8
977  s03      0.643829         8
978  s03      0.555282         8
979  s03      0.898563         8
980  s03      0.636528         8
981  s03      0.708917         8
982  s03      0.589029         8
983  s03      0.684363         8
984  s03      1.052643         8
985  s03      0.591856         8
986  s03      0.535443         8
987  s03      0.565851         8
988  s03      0.893359         8
989  s03      0.599485         8
990  s03      0.695128         8
991  s03      0.559185         8
992  s03      0.542678         8
993  s03      0.869150         8
994  s03      0.471247         8
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [115]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1): # or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.at[i, 'block'] == 100
     ...:   

In [116]: allTogether_df
Out[116]: 
    subj  meanTrial_rt     block
0    s01           NaN         1
1    s01      0.578673         1
2    s01      1.530600         1
3    s01      0.938485         1
4    s01      1.261371         1
5    s01      1.170780         1
6    s01      1.695363         1
7    s01      0.696463         1
8    s01      0.833418         1
9    s01      0.859703         1
10   s01      0.701690         1
11   s01      0.734399         1
12   s01      0.799249         1
13   s01      0.680767         1
14   s01      0.601541         1
15   s01      0.865457         1
16   s01      0.619765         1
17   s01      0.907578         1
18   s01      0.454754         1
19   s01      1.021407         1
20   s01      0.985144         1
21   s01      1.204743         1
22   s01      0.953433         1
23   s01      0.748170         1
24   s01      1.789645         1
25   s01      0.815478         1
26   s01      0.784769         1
27   s01      1.626155         1
28   s01           NaN         1
29   s01      1.430273         1
..   ...           ...       ...
966  s03      0.774844         8
967  s03      0.560298         8
968  s03      0.582982         8
969  s03      0.550393         8
970  s03      0.645242         8
971  s03           NaN         8
972  s03      1.067824         8
973  s03      0.512443         8
974  s03      0.542875         8
975  s03      0.517449         8
976  s03      0.604332         8
977  s03      0.643829         8
978  s03      0.555282         8
979  s03      0.898563         8
980  s03      0.636528         8
981  s03      0.708917         8
982  s03      0.589029         8
983  s03      0.684363         8
984  s03      1.052643         8
985  s03      0.591856         8
986  s03      0.535443         8
987  s03      0.565851         8
988  s03      0.893359         8
989  s03      0.599485         8
990  s03      0.695128         8
991  s03      0.559185         8
992  s03      0.542678         8
993  s03      0.869150         8
994  s03      0.471247         8
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [117]: allTogether_df.at[i, 'block'] == 100
Out[117]: False

In [118]: 

In [118]: allTogether_df.loc[i, 'block'] == 100
Out[118]: False

In [119]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1): # or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Baseline'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Maintain'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Monitor'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'M&M'
     ...:   

In [120]: allTogether_df
Out[120]: 
    subj  meanTrial_rt     block
0    s01           NaN  Baseline
1    s01      0.578673  Baseline
2    s01      1.530600  Baseline
3    s01      0.938485  Baseline
4    s01      1.261371  Baseline
5    s01      1.170780  Baseline
6    s01      1.695363  Baseline
7    s01      0.696463  Baseline
8    s01      0.833418  Baseline
9    s01      0.859703  Baseline
10   s01      0.701690  Baseline
11   s01      0.734399  Baseline
12   s01      0.799249  Baseline
13   s01      0.680767  Baseline
14   s01      0.601541  Baseline
15   s01      0.865457  Baseline
16   s01      0.619765  Baseline
17   s01      0.907578  Baseline
18   s01      0.454754  Baseline
19   s01      1.021407  Baseline
20   s01      0.985144  Baseline
21   s01      1.204743  Baseline
22   s01      0.953433  Baseline
23   s01      0.748170  Baseline
24   s01      1.789645  Baseline
25   s01      0.815478  Baseline
26   s01      0.784769  Baseline
27   s01      1.626155  Baseline
28   s01           NaN  Baseline
29   s01      1.430273  Baseline
..   ...           ...       ...
966  s03      0.774844         8
967  s03      0.560298         8
968  s03      0.582982         8
969  s03      0.550393         8
970  s03      0.645242         8
971  s03           NaN         8
972  s03      1.067824         8
973  s03      0.512443         8
974  s03      0.542875         8
975  s03      0.517449         8
976  s03      0.604332         8
977  s03      0.643829         8
978  s03      0.555282         8
979  s03      0.898563         8
980  s03      0.636528         8
981  s03      0.708917         8
982  s03      0.589029         8
983  s03      0.684363         8
984  s03      1.052643         8
985  s03      0.591856         8
986  s03      0.535443         8
987  s03      0.565851         8
988  s03      0.893359         8
989  s03      0.599485         8
990  s03      0.695128         8
991  s03      0.559185         8
992  s03      0.542678         8
993  s03      0.869150         8
994  s03      0.471247         8
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [121]: for i in allTogether_df.index: 
     ...: ^Iif (allTogether_df.loc[i, 'block'] == 1) or (allTogether_df.loc[i,'block'] == 8): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Baseline'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 2) or (allTogether_df.loc[i,'block'] == 3): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Maintain'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 4) or (allTogether_df.loc[i,'block'] == 5): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'Monitor'
     ...: ^Ielif (allTogether_df.loc[i,'block'] == 6) or (allTogether_df.loc[i,'block'] == 7): 
     ...: ^I^IallTogether_df.at[i, 'block'] = 'M&M'
     ...: 


In [122]: 

In [122]: allTogether_df
Out[122]: 
    subj  meanTrial_rt     block
0    s01           NaN  Baseline
1    s01      0.578673  Baseline
2    s01      1.530600  Baseline
3    s01      0.938485  Baseline
4    s01      1.261371  Baseline
5    s01      1.170780  Baseline
6    s01      1.695363  Baseline
7    s01      0.696463  Baseline
8    s01      0.833418  Baseline
9    s01      0.859703  Baseline
10   s01      0.701690  Baseline
11   s01      0.734399  Baseline
12   s01      0.799249  Baseline
13   s01      0.680767  Baseline
14   s01      0.601541  Baseline
15   s01      0.865457  Baseline
16   s01      0.619765  Baseline
17   s01      0.907578  Baseline
18   s01      0.454754  Baseline
19   s01      1.021407  Baseline
20   s01      0.985144  Baseline
21   s01      1.204743  Baseline
22   s01      0.953433  Baseline
23   s01      0.748170  Baseline
24   s01      1.789645  Baseline
25   s01      0.815478  Baseline
26   s01      0.784769  Baseline
27   s01      1.626155  Baseline
28   s01           NaN  Baseline
29   s01      1.430273  Baseline
..   ...           ...       ...
966  s03      0.774844  Baseline
967  s03      0.560298  Baseline
968  s03      0.582982  Baseline
969  s03      0.550393  Baseline
970  s03      0.645242  Baseline
971  s03           NaN  Baseline
972  s03      1.067824  Baseline
973  s03      0.512443  Baseline
974  s03      0.542875  Baseline
975  s03      0.517449  Baseline
976  s03      0.604332  Baseline
977  s03      0.643829  Baseline
978  s03      0.555282  Baseline
979  s03      0.898563  Baseline
980  s03      0.636528  Baseline
981  s03      0.708917  Baseline
982  s03      0.589029  Baseline
983  s03      0.684363  Baseline
984  s03      1.052643  Baseline
985  s03      0.591856  Baseline
986  s03      0.535443  Baseline
987  s03      0.565851  Baseline
988  s03      0.893359  Baseline
989  s03      0.599485  Baseline
990  s03      0.695128  Baseline
991  s03      0.559185  Baseline
992  s03      0.542678  Baseline
993  s03      0.869150  Baseline
994  s03      0.471247  Baseline
995  s03      0.589082  Baseline

[996 rows x 3 columns]

In [123]: allTogether_df.columns = ['subj', 'meanTrial_rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: 

In [124]: plt.close()

In [125]: allTogether_df.columns = ['subj', 'meanTrial_rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: 

In [126]: plt.close()

In [127]: ^I^I  '#e32f27', #Red
     ...: ^I^I  '#c6c7e1', #Purple
     ...: ^I^I  '#796eb2', #Purple
     ...: ^I^I  '#37a055'  #Green
     ...: ^I^I  ]
     ...: 
     ...: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
     ...: 
     ...: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Baseline'
     ...: ^Ielif (all_df.loc[i,'block'] == 2) or (all_df.loc[i,'block'] == 3): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Maintain'
     ...: ^Ielif (all_df.loc[i,'block'] == 4) or (all_df.loc[i,'block'] == 5): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Monitor'
     ...: ^Ielif (all_df.loc[i,'block'] == 6) or (all_df.loc[i,'block'] == 7): 
     ...: ^I^Iall_df.at[i, 'block'] = 'M&M'
     ...: 
     ...: 
     ...: all_df.columns = ['subj', 'meanTrial_rt', 'block']
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0, label = legend_labels)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: 
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-127-09cd781aee9e> in <module>()
     14 for i in all_df.index:
     15         if (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8):
---> 16                 all_df.at[i, 'block'] = 'Baseline'
     17         elif (all_df.loc[i,'block'] == 2) or (all_df.loc[i,'block'] == 3):
     18                 all_df.at[i, 'block'] = 'Maintain'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __setitem__(self, key, value)
   1884         key = list(self._convert_key(key, is_setter=True))
   1885         key.append(value)
-> 1886         self.obj._set_value(*key, takeable=self._takeable)
   1887 
   1888 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _set_value(self, index, col, value, takeable)
   2028             series = self._get_item_cache(col)
   2029             engine = self.index._engine
-> 2030             engine.set_value(series._values, index, value)
   2031             return self
   2032         except (KeyError, TypeError):

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/src/util.pxd in util.set_value_at()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()

ValueError: invalid literal for long() with base 10: 'Baseline'

In [128]: all_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df, block7_df, block8_df], axis=0)
     ...: 
     ...: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Baseline'
     ...: ^Ielif (all_df.loc[i,'block'] == 2) or (all_df.loc[i,'block'] == 3): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Maintain'
     ...: ^Ielif (all_df.loc[i,'block'] == 4) or (all_df.loc[i,'block'] == 5): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Monitor'
     ...: ^Ielif (all_df.loc[i,'block'] == 6) or (all_df.loc[i,'block'] == 7): 
     ...: ^I^Iall_df.at[i, 'block'] = 'M&M'
     ...: 
     ...: 
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-128-f2d61b27480d> in <module>()
      3 for i in all_df.index:
      4         if (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8):
----> 5                 all_df.at[i, 'block'] = 'Baseline'
      6         elif (all_df.loc[i,'block'] == 2) or (all_df.loc[i,'block'] == 3):
      7                 all_df.at[i, 'block'] = 'Maintain'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __setitem__(self, key, value)
   1884         key = list(self._convert_key(key, is_setter=True))
   1885         key.append(value)
-> 1886         self.obj._set_value(*key, takeable=self._takeable)
   1887 
   1888 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _set_value(self, index, col, value, takeable)
   2028             series = self._get_item_cache(col)
   2029             engine = self.index._engine
-> 2030             engine.set_value(series._values, index, value)
   2031             return self
   2032         except (KeyError, TypeError):

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/src/util.pxd in util.set_value_at()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()

ValueError: invalid literal for long() with base 10: 'Baseline'

In [129]: 

In [129]: all_df
Out[129]: 
    subj         0  block
0    s01       NaN      1
1    s01  0.578673      1
2    s01  1.530600      1
3    s01  0.938485      1
4    s01  1.261371      1
5    s01  1.170780      1
6    s01  1.695363      1
7    s01  0.696463      1
8    s01  0.833418      1
9    s01  0.859703      1
10   s01  0.701690      1
11   s01  0.734399      1
12   s01  0.799249      1
13   s01  0.680767      1
14   s01  0.601541      1
15   s01  0.865457      1
16   s01  0.619765      1
17   s01  0.907578      1
18   s01  0.454754      1
19   s01  1.021407      1
20   s01  0.985144      1
21   s01  1.204743      1
22   s01  0.953433      1
23   s01  0.748170      1
24   s01  1.789645      1
25   s01  0.815478      1
26   s01  0.784769      1
27   s01  1.626155      1
28   s01       NaN      1
29   s01  1.430273      1
..   ...       ...    ...
966  s03  0.774844      8
967  s03  0.560298      8
968  s03  0.582982      8
969  s03  0.550393      8
970  s03  0.645242      8
971  s03       NaN      8
972  s03  1.067824      8
973  s03  0.512443      8
974  s03  0.542875      8
975  s03  0.517449      8
976  s03  0.604332      8
977  s03  0.643829      8
978  s03  0.555282      8
979  s03  0.898563      8
980  s03  0.636528      8
981  s03  0.708917      8
982  s03  0.589029      8
983  s03  0.684363      8
984  s03  1.052643      8
985  s03  0.591856      8
986  s03  0.535443      8
987  s03  0.565851      8
988  s03  0.893359      8
989  s03  0.599485      8
990  s03  0.695128      8
991  s03  0.559185      8
992  s03  0.542678      8
993  s03  0.869150      8
994  s03  0.471247      8
995  s03  0.589082      8

[996 rows x 3 columns]

In [130]: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...: ^I^Iall_df.at[i, 'block'] = 'Baseline'
     ...:   
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-130-d0b7ff35cfed> in <module>()
      1 for i in all_df.index:
      2         if (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8):
----> 3                 all_df.at[i, 'block'] = 'Baseline'
      4 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __setitem__(self, key, value)
   1884         key = list(self._convert_key(key, is_setter=True))
   1885         key.append(value)
-> 1886         self.obj._set_value(*key, takeable=self._takeable)
   1887 
   1888 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _set_value(self, index, col, value, takeable)
   2028             series = self._get_item_cache(col)
   2029             engine = self.index._engine
-> 2030             engine.set_value(series._values, index, value)
   2031             return self
   2032         except (KeyError, TypeError):

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/src/util.pxd in util.set_value_at()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()

ValueError: invalid literal for long() with base 10: 'Baseline'

In [131]: all_df
Out[131]: 
    subj         0  block
0    s01       NaN      1
1    s01  0.578673      1
2    s01  1.530600      1
3    s01  0.938485      1
4    s01  1.261371      1
5    s01  1.170780      1
6    s01  1.695363      1
7    s01  0.696463      1
8    s01  0.833418      1
9    s01  0.859703      1
10   s01  0.701690      1
11   s01  0.734399      1
12   s01  0.799249      1
13   s01  0.680767      1
14   s01  0.601541      1
15   s01  0.865457      1
16   s01  0.619765      1
17   s01  0.907578      1
18   s01  0.454754      1
19   s01  1.021407      1
20   s01  0.985144      1
21   s01  1.204743      1
22   s01  0.953433      1
23   s01  0.748170      1
24   s01  1.789645      1
25   s01  0.815478      1
26   s01  0.784769      1
27   s01  1.626155      1
28   s01       NaN      1
29   s01  1.430273      1
..   ...       ...    ...
966  s03  0.774844      8
967  s03  0.560298      8
968  s03  0.582982      8
969  s03  0.550393      8
970  s03  0.645242      8
971  s03       NaN      8
972  s03  1.067824      8
973  s03  0.512443      8
974  s03  0.542875      8
975  s03  0.517449      8
976  s03  0.604332      8
977  s03  0.643829      8
978  s03  0.555282      8
979  s03  0.898563      8
980  s03  0.636528      8
981  s03  0.708917      8
982  s03  0.589029      8
983  s03  0.684363      8
984  s03  1.052643      8
985  s03  0.591856      8
986  s03  0.535443      8
987  s03  0.565851      8
988  s03  0.893359      8
989  s03  0.599485      8
990  s03  0.695128      8
991  s03  0.559185      8
992  s03  0.542678      8
993  s03  0.869150      8
994  s03  0.471247      8
995  s03  0.589082      8

[996 rows x 3 columns]

In [132]: for i in all_df.index: 
     ...:     print i
     ...:     
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995

In [133]: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...:      
     ...:      print 'yay'
  File "<ipython-input-133-7ff5e3871c4e>", line 4
    print 'yay'
               ^
IndentationError: unindent does not match any outer indentation level


In [134]: 

In [134]: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...:      print 'yay'
  File "<ipython-input-134-c1ec473d7afe>", line 3
    print 'yay'
               ^
IndentationError: unindent does not match any outer indentation level


In [135]: 

In [135]: for i in all_df.index: 
     ...: ^Iif (all_df.loc[i, 'block'] == 1) or (all_df.loc[i,'block'] == 8): 
     ...: ^I^Iprint 'yay'
     ...:   
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay
yay

In [136]: i
Out[136]: 995

In [137]: all_df.at[i, 'block'] = 'Baseline'
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-137-0b72a75c7aec> in <module>()
----> 1 all_df.at[i, 'block'] = 'Baseline'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __setitem__(self, key, value)
   1884         key = list(self._convert_key(key, is_setter=True))
   1885         key.append(value)
-> 1886         self.obj._set_value(*key, takeable=self._takeable)
   1887 
   1888 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _set_value(self, index, col, value, takeable)
   2028             series = self._get_item_cache(col)
   2029             engine = self.index._engine
-> 2030             engine.set_value(series._values, index, value)
   2031             return self
   2032         except (KeyError, TypeError):

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/src/util.pxd in util.set_value_at()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()

ValueError: invalid literal for long() with base 10: 'Baseline'

In [138]: all_df.at[i, 'block'] = str('Baseline')
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-138-8636436af6b4> in <module>()
----> 1 all_df.at[i, 'block'] = str('Baseline')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __setitem__(self, key, value)
   1884         key = list(self._convert_key(key, is_setter=True))
   1885         key.append(value)
-> 1886         self.obj._set_value(*key, takeable=self._takeable)
   1887 
   1888 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _set_value(self, index, col, value, takeable)
   2028             series = self._get_item_cache(col)
   2029             engine = self.index._engine
-> 2030             engine.set_value(series._values, index, value)
   2031             return self
   2032         except (KeyError, TypeError):

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.set_value()

pandas/_libs/src/util.pxd in util.set_value_at()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()

ValueError: invalid literal for long() with base 10: 'Baseline'

In [139]: type(all_df)
Out[139]: pandas.core.frame.DataFrame

In [140]: df_main['acc']
Out[140]: 
0     NaN
1     NaN
2     NaN
3     NaN
4     NaN
5     NaN
6     NaN
7     NaN
8     NaN
9     NaN
10    NaN
11    NaN
12    NaN
13    NaN
14    NaN
15    NaN
16    NaN
17    NaN
18    NaN
19    NaN
20    NaN
21    NaN
22    NaN
23    NaN
24    NaN
25    NaN
26    NaN
27    NaN
28    NaN
29    NaN
       ..
966   NaN
967   NaN
968   NaN
969   NaN
970   NaN
971   NaN
972   NaN
973   NaN
974   NaN
975   NaN
976   NaN
977   NaN
978   NaN
979   NaN
980   NaN
981   NaN
982   NaN
983   NaN
984   NaN
985   NaN
986   NaN
987   NaN
988   NaN
989   NaN
990   NaN
991   NaN
992   NaN
993   NaN
994   NaN
995   NaN
Name: acc, Length: 996, dtype: float64

In [141]: i
Out[141]: 995

In [142]: probeNum = df_main.loc[i, 'n_probes']

In [143]: probeNum
Out[143]: 1

In [144]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif df_main.loc[trial, 'probe{:d}_acc'.format(probeNum
     ...: -1) == 1]: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...:   
-----------------------------------------------------------------
KeyError                        Traceback (most recent call last)
<ipython-input-144-5390174eca1f> in <module>()
      1 for trial in df_main.index:
      2         probeNum = df_main.loc[trial, 'n_probes']
----> 3         if df_main.loc[trial, 'probe{:d}_acc'.format(probeNum-1) == 1]: #correct PM resp
      4                 df_main.loc[trial, 'acc'] = 1
      5         else:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __getitem__(self, key)
   1365             except (KeyError, IndexError):
   1366                 pass
-> 1367             return self._getitem_tuple(key)
   1368         else:
   1369             # we by definition only have the 0th axis

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in _getitem_tuple(self, tup)
    856     def _getitem_tuple(self, tup):
    857         try:
--> 858             return self._getitem_lowerdim(tup)
    859         except IndexingError:
    860             pass

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in _getitem_lowerdim(self, tup)
   1018                     return section
   1019                 # This is an elided recursive call to iloc/loc/etc'
-> 1020                 return getattr(section, self.name)[new_key]
   1021 
   1022         raise IndexingError('not applicable')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in __getitem__(self, key)
   1371 
   1372             maybe_callable = com._apply_if_callable(key, self.obj)
-> 1373             return self._getitem_axis(maybe_callable, axis=axis)
   1374 
   1375     def _is_scalar_access(self, key):

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in _getitem_axis(self, key, axis)
   1624 
   1625         # fall thru to straight lookup
-> 1626         self._has_valid_type(key, axis)
   1627         return self._get_label(key, axis=axis)
   1628 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in _has_valid_type(self, key, axis)
   1512                 raise
   1513             except:
-> 1514                 error()
   1515 
   1516         return True

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.pyc in error()
   1499                 raise KeyError(u"the label [{key}] is not in the [{axis}]"
   1500                                .format(key=key,
-> 1501                                        axis=self.obj._get_axis_name(axis)))
   1502 
   1503             try:

KeyError: u'the label [False] is not in the [index]'

In [145]: df_main.loc[trial, 'probe{:d}_acc'.format(probeNum-1)]
Out[145]: nan

In [146]: probeNum
Out[146]: 1

In [147]: df_main.loc[i, 'probe{:d}_acc'.format(probeNum-1)]
Out[147]: 1.0

In [148]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif df_main.loc[trial, 'probe{:d}_acc'.format(probeNum
     ...: -1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...:   

In [149]: df_main['acc']
Out[149]: 
0      0.0
1      1.0
2      1.0
3      1.0
4      1.0
5      1.0
6      1.0
7      1.0
8      1.0
9      1.0
10     1.0
11     1.0
12     1.0
13     1.0
14     1.0
15     1.0
16     1.0
17     1.0
18     1.0
19     1.0
20     1.0
21     1.0
22     1.0
23     1.0
24     1.0
25     1.0
26     1.0
27     1.0
28     0.0
29     1.0
      ... 
966    1.0
967    1.0
968    1.0
969    1.0
970    1.0
971    0.0
972    1.0
973    1.0
974    1.0
975    1.0
976    1.0
977    1.0
978    1.0
979    1.0
980    1.0
981    1.0
982    1.0
983    1.0
984    1.0
985    1.0
986    1.0
987    1.0
988    1.0
989    1.0
990    1.0
991    1.0
992    1.0
993    1.0
994    1.0
995    1.0
Name: acc, Length: 996, dtype: float64

In [150]: df_main['acc'].mean()
Out[150]: 0.7991967871485943

In [151]: block1
Out[151]: 
     index subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
1        1  s01      1         20         1            top           NaN  NaN   
2        2  s01      1         70         1            top           NaN  NaN   
3        3  s01      1        120         1            top           NaN  NaN   
4        4  s01      1         20         1            top           NaN  NaN   
5        5  s01      1         20         1            bot           NaN  NaN   
6        6  s01      1         10         1            top           NaN  NaN   
7        7  s01      1         20         1            bot           NaN  NaN   
8        8  s01      1         10         1            bot           NaN  NaN   
9        9  s01      1         50         1            top           NaN  NaN   
10      10  s01      1        130         1            top           NaN  NaN   
11      11  s01      1         80         1            bot           NaN  NaN   
12      12  s01      1        100         1            bot           NaN  NaN   
13      13  s01      1         80         1            bot           NaN  NaN   
14      14  s01      1         50         1            bot           NaN  NaN   
15      15  s01      1        120         1            bot           NaN  NaN   
16      16  s01      1        150         1            top           NaN  NaN   
17      17  s01      1         60         1            bot           NaN  NaN   
18      18  s01      1        170         1            top           NaN  NaN   
19      19  s01      1        140         1            top           NaN  NaN   
20      20  s01      1        170         1            top           NaN  NaN   
21      21  s01      1        150         1            top           NaN  NaN   
22      22  s01      1         40         1            bot           NaN  NaN   
23      23  s01      1         50         1            bot           NaN  NaN   
24      24  s01      1         60         1            top           NaN  NaN   
25      25  s01      1        100         1            bot           NaN  NaN   
26      26  s01      1         10         1            top           NaN  NaN   
27      27  s01      1         60         1            top           NaN  NaN   
29      29  s01      1         10         1            bot           NaN  NaN   
30      30  s01      1         40         1            top           NaN  NaN   
33      33  s01      1        140         1            top           NaN  NaN   
..     ...  ...    ...        ...       ...            ...           ...  ...   
740     76  s03      1         70         1            top           NaN  NaN   
741     77  s03      1         70         1            bot           NaN  NaN   
742     78  s03      1         10         1            bot           NaN  NaN   
743     79  s03      1         50         1            top           NaN  NaN   
744     80  s03      1        130         1            top           NaN  NaN   
745     81  s03      1         20         1            top           NaN  NaN   
746     82  s03      1        120         1            bot           NaN  NaN   
747     83  s03      1        130         1            top           NaN  NaN   
748     84  s03      1         20         1            bot           NaN  NaN   
749     85  s03      1        130         1            top           NaN  NaN   
750     86  s03      1        130         1            bot           NaN  NaN   
751     87  s03      1        170         1            top           NaN  NaN   
752     88  s03      1        160         1            top           NaN  NaN   
753     89  s03      1         30         1            bot           NaN  NaN   
754     90  s03      1        120         1            bot           NaN  NaN   
755     91  s03      1         10         1            bot           NaN  NaN   
756     92  s03      1        110         1            bot           NaN  NaN   
757     93  s03      1        110         1            bot           NaN  NaN   
758     94  s03      1         20         1            top           NaN  NaN   
759     95  s03      1         40         1            top           NaN  NaN   
760     96  s03      1         20         1            bot           NaN  NaN   
761     97  s03      1         80         1            bot           NaN  NaN   
762     98  s03      1        160         1            bot           NaN  NaN   
763     99  s03      1        130         1            bot           NaN  NaN   
764    100  s03      1         60         1            top           NaN  NaN   
765    101  s03      1         80         1            bot           NaN  NaN   
766    102  s03      1        150         1            top           NaN  NaN   
767    103  s03      1        120         1            top           NaN  NaN   
768    104  s03      1         30         1            top           NaN  NaN   
769    105  s03      1        140         1            top           NaN  NaN   

       word0 word1  ...  respProbe12 rtProbe12 probe12_acc respProbe13  \
1      raise   NaN  ...          NaN       NaN         NaN         NaN   
2       fare   NaN  ...          NaN       NaN         NaN         NaN   
3     battle   NaN  ...          NaN       NaN         NaN         NaN   
4       fore   NaN  ...          NaN       NaN         NaN         NaN   
5      phote   NaN  ...          NaN       NaN         NaN         NaN   
6     skeeks   NaN  ...          NaN       NaN         NaN         NaN   
7       paid   NaN  ...          NaN       NaN         NaN         NaN   
8    sneiled   NaN  ...          NaN       NaN         NaN         NaN   
9       work   NaN  ...          NaN       NaN         NaN         NaN   
10       art   NaN  ...          NaN       NaN         NaN         NaN   
11      doop   NaN  ...          NaN       NaN         NaN         NaN   
12    shoops   NaN  ...          NaN       NaN         NaN         NaN   
13     black   NaN  ...          NaN       NaN         NaN         NaN   
14      vrip   NaN  ...          NaN       NaN         NaN         NaN   
15   bleeced   NaN  ...          NaN       NaN         NaN         NaN   
16    street   NaN  ...          NaN       NaN         NaN         NaN   
17      type   NaN  ...          NaN       NaN         NaN         NaN   
18      dirt   NaN  ...          NaN       NaN         NaN         NaN   
19       tie   NaN  ...          NaN       NaN         NaN         NaN   
20       jum   NaN  ...          NaN       NaN         NaN         NaN   
21      gulk   NaN  ...          NaN       NaN         NaN         NaN   
22      lose   NaN  ...          NaN       NaN         NaN         NaN   
23      teeg   NaN  ...          NaN       NaN         NaN         NaN   
24     stake   NaN  ...          NaN       NaN         NaN         NaN   
25      fuel   NaN  ...          NaN       NaN         NaN         NaN   
26      gwab   NaN  ...          NaN       NaN         NaN         NaN   
27      javs   NaN  ...          NaN       NaN         NaN         NaN   
29     clake   NaN  ...          NaN       NaN         NaN         NaN   
30      zish   NaN  ...          NaN       NaN         NaN         NaN   
33      lish   NaN  ...          NaN       NaN         NaN         NaN   
..       ...   ...  ...          ...       ...         ...         ...   
740    froof   NaN  ...          NaN       NaN         NaN         NaN   
741  psounts   NaN  ...          NaN       NaN         NaN         NaN   
742   slipes   NaN  ...          NaN       NaN         NaN         NaN   
743     gift   NaN  ...          NaN       NaN         NaN         NaN   
744    thark   NaN  ...          NaN       NaN         NaN         NaN   
745     move   NaN  ...          NaN       NaN         NaN         NaN   
746     migs   NaN  ...          NaN       NaN         NaN         NaN   
747     baze   NaN  ...          NaN       NaN         NaN         NaN   
748      map   NaN  ...          NaN       NaN         NaN         NaN   
749     dirt   NaN  ...          NaN       NaN         NaN         NaN   
750     west   NaN  ...          NaN       NaN         NaN         NaN   
751    knebe   NaN  ...          NaN       NaN         NaN         NaN   
752     felt   NaN  ...          NaN       NaN         NaN         NaN   
753    frime   NaN  ...          NaN       NaN         NaN         NaN   
754    grafe   NaN  ...          NaN       NaN         NaN         NaN   
755     pilk   NaN  ...          NaN       NaN         NaN         NaN   
756     sent   NaN  ...          NaN       NaN         NaN         NaN   
757     done   NaN  ...          NaN       NaN         NaN         NaN   
758     voon   NaN  ...          NaN       NaN         NaN         NaN   
759      hix   NaN  ...          NaN       NaN         NaN         NaN   
760    fault   NaN  ...          NaN       NaN         NaN         NaN   
761     foop   NaN  ...          NaN       NaN         NaN         NaN   
762     hook   NaN  ...          NaN       NaN         NaN         NaN   
763     dwim   NaN  ...          NaN       NaN         NaN         NaN   
764     form   NaN  ...          NaN       NaN         NaN         NaN   
765     lung   NaN  ...          NaN       NaN         NaN         NaN   
766     naff   NaN  ...          NaN       NaN         NaN         NaN   
767    scoon   NaN  ...          NaN       NaN         NaN         NaN   
768     tell   NaN  ...          NaN       NaN         NaN         NaN   
769     leap   NaN  ...          NaN       NaN         NaN         NaN   

    rtProbe13 probe13_acc respProbe14 rtProbe14 probe14_acc trial  
1         NaN         NaN         NaN       NaN         NaN     1  
2         NaN         NaN         NaN       NaN         NaN     2  
3         NaN         NaN         NaN       NaN         NaN     3  
4         NaN         NaN         NaN       NaN         NaN     4  
5         NaN         NaN         NaN       NaN         NaN     5  
6         NaN         NaN         NaN       NaN         NaN     6  
7         NaN         NaN         NaN       NaN         NaN     7  
8         NaN         NaN         NaN       NaN         NaN     8  
9         NaN         NaN         NaN       NaN         NaN     9  
10        NaN         NaN         NaN       NaN         NaN    10  
11        NaN         NaN         NaN       NaN         NaN    11  
12        NaN         NaN         NaN       NaN         NaN    12  
13        NaN         NaN         NaN       NaN         NaN    13  
14        NaN         NaN         NaN       NaN         NaN    14  
15        NaN         NaN         NaN       NaN         NaN    15  
16        NaN         NaN         NaN       NaN         NaN    16  
17        NaN         NaN         NaN       NaN         NaN    17  
18        NaN         NaN         NaN       NaN         NaN    18  
19        NaN         NaN         NaN       NaN         NaN    19  
20        NaN         NaN         NaN       NaN         NaN    20  
21        NaN         NaN         NaN       NaN         NaN    21  
22        NaN         NaN         NaN       NaN         NaN    22  
23        NaN         NaN         NaN       NaN         NaN    23  
24        NaN         NaN         NaN       NaN         NaN    24  
25        NaN         NaN         NaN       NaN         NaN    25  
26        NaN         NaN         NaN       NaN         NaN    26  
27        NaN         NaN         NaN       NaN         NaN    27  
29        NaN         NaN         NaN       NaN         NaN    29  
30        NaN         NaN         NaN       NaN         NaN    30  
33        NaN         NaN         NaN       NaN         NaN    33  
..        ...         ...         ...       ...         ...   ...  
740       NaN         NaN         NaN       NaN         NaN    76  
741       NaN         NaN         NaN       NaN         NaN    77  
742       NaN         NaN         NaN       NaN         NaN    78  
743       NaN         NaN         NaN       NaN         NaN    79  
744       NaN         NaN         NaN       NaN         NaN    80  
745       NaN         NaN         NaN       NaN         NaN    81  
746       NaN         NaN         NaN       NaN         NaN    82  
747       NaN         NaN         NaN       NaN         NaN    83  
748       NaN         NaN         NaN       NaN         NaN    84  
749       NaN         NaN         NaN       NaN         NaN    85  
750       NaN         NaN         NaN       NaN         NaN    86  
751       NaN         NaN         NaN       NaN         NaN    87  
752       NaN         NaN         NaN       NaN         NaN    88  
753       NaN         NaN         NaN       NaN         NaN    89  
754       NaN         NaN         NaN       NaN         NaN    90  
755       NaN         NaN         NaN       NaN         NaN    91  
756       NaN         NaN         NaN       NaN         NaN    92  
757       NaN         NaN         NaN       NaN         NaN    93  
758       NaN         NaN         NaN       NaN         NaN    94  
759       NaN         NaN         NaN       NaN         NaN    95  
760       NaN         NaN         NaN       NaN         NaN    96  
761       NaN         NaN         NaN       NaN         NaN    97  
762       NaN         NaN         NaN       NaN         NaN    98  
763       NaN         NaN         NaN       NaN         NaN    99  
764       NaN         NaN         NaN       NaN         NaN   100  
765       NaN         NaN         NaN       NaN         NaN   101  
766       NaN         NaN         NaN       NaN         NaN   102  
767       NaN         NaN         NaN       NaN         NaN   103  
768       NaN         NaN         NaN       NaN         NaN   104  
769       NaN         NaN         NaN       NaN         NaN   105  

[295 rows x 116 columns]

In [152]: block1_df
Out[152]: 
    subj         0  block
0    s01       NaN      1
1    s01  0.578673      1
2    s01  1.530600      1
3    s01  0.938485      1
4    s01  1.261371      1
5    s01  1.170780      1
6    s01  1.695363      1
7    s01  0.696463      1
8    s01  0.833418      1
9    s01  0.859703      1
10   s01  0.701690      1
11   s01  0.734399      1
12   s01  0.799249      1
13   s01  0.680767      1
14   s01  0.601541      1
15   s01  0.865457      1
16   s01  0.619765      1
17   s01  0.907578      1
18   s01  0.454754      1
19   s01  1.021407      1
20   s01  0.985144      1
21   s01  1.204743      1
22   s01  0.953433      1
23   s01  0.748170      1
24   s01  1.789645      1
25   s01  0.815478      1
26   s01  0.784769      1
27   s01  1.626155      1
28   s01       NaN      1
29   s01  1.430273      1
..   ...       ...    ...
740  s03  0.763318      1
741  s03  0.548060      1
742  s03  1.122578      1
743  s03  0.519714      1
744  s03  0.646362      1
745  s03  0.510455      1
746  s03  0.541207      1
747  s03  0.635570      1
748  s03  0.636090      1
749  s03  0.796140      1
750  s03  0.629582      1
751  s03  0.557628      1
752  s03  0.676330      1
753  s03  0.956633      1
754  s03  0.711121      1
755  s03  0.807502      1
756  s03  0.641067      1
757  s03  0.561135      1
758  s03  0.776435      1
759  s03  0.553930      1
760  s03  0.616908      1
761  s03  0.593337      1
762  s03  0.536614      1
763  s03  0.567889      1
764  s03  0.695524      1
765  s03  0.599858      1
766  s03  0.534956      1
767  s03  0.597388      1
768  s03  0.485272      1
769  s03  0.571674      1

[318 rows x 3 columns]

In [153]: block1['acc']
Out[153]: 
1     NaN
2     NaN
3     NaN
4     NaN
5     NaN
6     NaN
7     NaN
8     NaN
9     NaN
10    NaN
11    NaN
12    NaN
13    NaN
14    NaN
15    NaN
16    NaN
17    NaN
18    NaN
19    NaN
20    NaN
21    NaN
22    NaN
23    NaN
24    NaN
25    NaN
26    NaN
27    NaN
29    NaN
30    NaN
33    NaN
       ..
740   NaN
741   NaN
742   NaN
743   NaN
744   NaN
745   NaN
746   NaN
747   NaN
748   NaN
749   NaN
750   NaN
751   NaN
752   NaN
753   NaN
754   NaN
755   NaN
756   NaN
757   NaN
758   NaN
759   NaN
760   NaN
761   NaN
762   NaN
763   NaN
764   NaN
765   NaN
766   NaN
767   NaN
768   NaN
769   NaN
Name: acc, Length: 295, dtype: float64

In [154]: block1 = df_main[(df_main['block'] == 1)]

In [155]: block1['acc']
Out[155]: 
0      0.0
1      1.0
2      1.0
3      1.0
4      1.0
5      1.0
6      1.0
7      1.0
8      1.0
9      1.0
10     1.0
11     1.0
12     1.0
13     1.0
14     1.0
15     1.0
16     1.0
17     1.0
18     1.0
19     1.0
20     1.0
21     1.0
22     1.0
23     1.0
24     1.0
25     1.0
26     1.0
27     1.0
28     0.0
29     1.0
      ... 
740    1.0
741    1.0
742    1.0
743    1.0
744    1.0
745    1.0
746    1.0
747    1.0
748    1.0
749    1.0
750    1.0
751    1.0
752    1.0
753    1.0
754    1.0
755    1.0
756    1.0
757    1.0
758    1.0
759    1.0
760    1.0
761    1.0
762    1.0
763    1.0
764    1.0
765    1.0
766    1.0
767    1.0
768    1.0
769    1.0
Name: acc, Length: 318, dtype: float64

In [156]: block1['acc'].mean()
Out[156]: 0.9276729559748428

In [157]: block1_df = pd.concat([ block1['subj'], block1['acc'],b
     ...: lock1[rtProbes].mean(axis=1)], axis=1)

In [158]: block1_df
Out[158]: 
    subj  acc         0
0    s01  0.0       NaN
1    s01  1.0  0.578673
2    s01  1.0  1.530600
3    s01  1.0  0.938485
4    s01  1.0  1.261371
5    s01  1.0  1.170780
6    s01  1.0  1.695363
7    s01  1.0  0.696463
8    s01  1.0  0.833418
9    s01  1.0  0.859703
10   s01  1.0  0.701690
11   s01  1.0  0.734399
12   s01  1.0  0.799249
13   s01  1.0  0.680767
14   s01  1.0  0.601541
15   s01  1.0  0.865457
16   s01  1.0  0.619765
17   s01  1.0  0.907578
18   s01  1.0  0.454754
19   s01  1.0  1.021407
20   s01  1.0  0.985144
21   s01  1.0  1.204743
22   s01  1.0  0.953433
23   s01  1.0  0.748170
24   s01  1.0  1.789645
25   s01  1.0  0.815478
26   s01  1.0  0.784769
27   s01  1.0  1.626155
28   s01  0.0       NaN
29   s01  1.0  1.430273
..   ...  ...       ...
740  s03  1.0  0.763318
741  s03  1.0  0.548060
742  s03  1.0  1.122578
743  s03  1.0  0.519714
744  s03  1.0  0.646362
745  s03  1.0  0.510455
746  s03  1.0  0.541207
747  s03  1.0  0.635570
748  s03  1.0  0.636090
749  s03  1.0  0.796140
750  s03  1.0  0.629582
751  s03  1.0  0.557628
752  s03  1.0  0.676330
753  s03  1.0  0.956633
754  s03  1.0  0.711121
755  s03  1.0  0.807502
756  s03  1.0  0.641067
757  s03  1.0  0.561135
758  s03  1.0  0.776435
759  s03  1.0  0.553930
760  s03  1.0  0.616908
761  s03  1.0  0.593337
762  s03  1.0  0.536614
763  s03  1.0  0.567889
764  s03  1.0  0.695524
765  s03  1.0  0.599858
766  s03  1.0  0.534956
767  s03  1.0  0.597388
768  s03  1.0  0.485272
769  s03  1.0  0.571674

[318 rows x 3 columns]

In [159]: block1_df
Out[159]: 
    subj  acc         0
0    s01  0.0       NaN
1    s01  1.0  0.578673
2    s01  1.0  1.530600
3    s01  1.0  0.938485
4    s01  1.0  1.261371
5    s01  1.0  1.170780
6    s01  1.0  1.695363
7    s01  1.0  0.696463
8    s01  1.0  0.833418
9    s01  1.0  0.859703
10   s01  1.0  0.701690
11   s01  1.0  0.734399
12   s01  1.0  0.799249
13   s01  1.0  0.680767
14   s01  1.0  0.601541
15   s01  1.0  0.865457
16   s01  1.0  0.619765
17   s01  1.0  0.907578
18   s01  1.0  0.454754
19   s01  1.0  1.021407
20   s01  1.0  0.985144
21   s01  1.0  1.204743
22   s01  1.0  0.953433
23   s01  1.0  0.748170
24   s01  1.0  1.789645
25   s01  1.0  0.815478
26   s01  1.0  0.784769
27   s01  1.0  1.626155
28   s01  0.0       NaN
29   s01  1.0  1.430273
..   ...  ...       ...
740  s03  1.0  0.763318
741  s03  1.0  0.548060
742  s03  1.0  1.122578
743  s03  1.0  0.519714
744  s03  1.0  0.646362
745  s03  1.0  0.510455
746  s03  1.0  0.541207
747  s03  1.0  0.635570
748  s03  1.0  0.636090
749  s03  1.0  0.796140
750  s03  1.0  0.629582
751  s03  1.0  0.557628
752  s03  1.0  0.676330
753  s03  1.0  0.956633
754  s03  1.0  0.711121
755  s03  1.0  0.807502
756  s03  1.0  0.641067
757  s03  1.0  0.561135
758  s03  1.0  0.776435
759  s03  1.0  0.553930
760  s03  1.0  0.616908
761  s03  1.0  0.593337
762  s03  1.0  0.536614
763  s03  1.0  0.567889
764  s03  1.0  0.695524
765  s03  1.0  0.599858
766  s03  1.0  0.534956
767  s03  1.0  0.597388
768  s03  1.0  0.485272
769  s03  1.0  0.571674

[318 rows x 3 columns]

In [160]: for trial in df_main.index:
     ...:     print trial
     ...:     
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995

In [161]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif trial = 1: 
     ...: ^I^Ireturn 
     ...: ^Ielif df_main.loc[trial, 'probe{:d}_acc'.format(probeN
     ...: um-1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
  File "<ipython-input-161-4d63e251a7c2>", line 3
    if trial = 1:
             ^
SyntaxError: invalid syntax


In [162]: 

In [162]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif trial == 0: 
     ...: ^I^Ireturn 
     ...: ^Ielif df_main.loc[trial, 'probe{:d}_acc'.format(probeN
     ...: um-1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
  File "<ipython-input-162-46d43c89b480>", line 4
    return
SyntaxError: 'return' outside function


In [163]: 

In [163]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif trial == 0: 
     ...: ^I^Ipass
     ...: ^Ielif df_main.loc[trial, 'probe{:d}_acc'.format(probeN
     ...: um-1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...:   

In [164]: df_main
Out[164]: 
     index subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
0        0  s01      1         10         1            top           NaN  0.0   
1        1  s01      1         20         1            top           NaN  1.0   
2        2  s01      1         70         1            top           NaN  1.0   
3        3  s01      1        120         1            top           NaN  1.0   
4        4  s01      1         20         1            top           NaN  1.0   
5        5  s01      1         20         1            bot           NaN  1.0   
6        6  s01      1         10         1            top           NaN  1.0   
7        7  s01      1         20         1            bot           NaN  1.0   
8        8  s01      1         10         1            bot           NaN  1.0   
9        9  s01      1         50         1            top           NaN  1.0   
10      10  s01      1        130         1            top           NaN  1.0   
11      11  s01      1         80         1            bot           NaN  1.0   
12      12  s01      1        100         1            bot           NaN  1.0   
13      13  s01      1         80         1            bot           NaN  1.0   
14      14  s01      1         50         1            bot           NaN  1.0   
15      15  s01      1        120         1            bot           NaN  1.0   
16      16  s01      1        150         1            top           NaN  1.0   
17      17  s01      1         60         1            bot           NaN  1.0   
18      18  s01      1        170         1            top           NaN  1.0   
19      19  s01      1        140         1            top           NaN  1.0   
20      20  s01      1        170         1            top           NaN  1.0   
21      21  s01      1        150         1            top           NaN  1.0   
22      22  s01      1         40         1            bot           NaN  1.0   
23      23  s01      1         50         1            bot           NaN  1.0   
24      24  s01      1         60         1            top           NaN  1.0   
25      25  s01      1        100         1            bot           NaN  1.0   
26      26  s01      1         10         1            top           NaN  1.0   
27      27  s01      1         60         1            top           NaN  1.0   
28      28  s01      1         70         1            top           NaN  0.0   
29      29  s01      1         10         1            bot           NaN  1.0   
..     ...  ...    ...        ...       ...            ...           ...  ...   
966    302  s03      8         20         1            bot           NaN  1.0   
967    303  s03      8        160         1            bot           NaN  1.0   
968    304  s03      8         20         1            bot           NaN  1.0   
969    305  s03      8         40         1            top           NaN  1.0   
970    306  s03      8         30         1            bot           NaN  1.0   
971    307  s03      8        140         1            bot           NaN  0.0   
972    308  s03      8         70         1            bot           NaN  1.0   
973    309  s03      8         10         1            bot           NaN  1.0   
974    310  s03      8        130         1            top           NaN  1.0   
975    311  s03      8         20         1            bot           NaN  1.0   
976    312  s03      8         30         1            bot           NaN  1.0   
977    313  s03      8         10         1            top           NaN  1.0   
978    314  s03      8        100         1            top           NaN  1.0   
979    315  s03      8         10         1            top           NaN  1.0   
980    316  s03      8        140         1            top           NaN  1.0   
981    317  s03      8        130         1            top           NaN  1.0   
982    318  s03      8        150         1            top           NaN  1.0   
983    319  s03      8        110         1            top           NaN  1.0   
984    320  s03      8        110         1            top           NaN  1.0   
985    321  s03      8         70         1            top           NaN  1.0   
986    322  s03      8        150         1            top           NaN  1.0   
987    323  s03      8        140         1            top           NaN  1.0   
988    324  s03      8         30         1            bot           NaN  1.0   
989    325  s03      8        100         1            bot           NaN  1.0   
990    326  s03      8         10         1            bot           NaN  1.0   
991    327  s03      8         50         1            bot           NaN  1.0   
992    328  s03      8         10         1            top           NaN  1.0   
993    329  s03      8         50         1            top           NaN  1.0   
994    330  s03      8         40         1            top           NaN  1.0   
995    331  s03      8        160         1            bot           NaN  1.0   

       word0 word1  ...  respProbe12 rtProbe12 probe12_acc respProbe13  \
0       plob   NaN  ...          NaN       NaN         NaN         NaN   
1      raise   NaN  ...          NaN       NaN         NaN         NaN   
2       fare   NaN  ...          NaN       NaN         NaN         NaN   
3     battle   NaN  ...          NaN       NaN         NaN         NaN   
4       fore   NaN  ...          NaN       NaN         NaN         NaN   
5      phote   NaN  ...          NaN       NaN         NaN         NaN   
6     skeeks   NaN  ...          NaN       NaN         NaN         NaN   
7       paid   NaN  ...          NaN       NaN         NaN         NaN   
8    sneiled   NaN  ...          NaN       NaN         NaN         NaN   
9       work   NaN  ...          NaN       NaN         NaN         NaN   
10       art   NaN  ...          NaN       NaN         NaN         NaN   
11      doop   NaN  ...          NaN       NaN         NaN         NaN   
12    shoops   NaN  ...          NaN       NaN         NaN         NaN   
13     black   NaN  ...          NaN       NaN         NaN         NaN   
14      vrip   NaN  ...          NaN       NaN         NaN         NaN   
15   bleeced   NaN  ...          NaN       NaN         NaN         NaN   
16    street   NaN  ...          NaN       NaN         NaN         NaN   
17      type   NaN  ...          NaN       NaN         NaN         NaN   
18      dirt   NaN  ...          NaN       NaN         NaN         NaN   
19       tie   NaN  ...          NaN       NaN         NaN         NaN   
20       jum   NaN  ...          NaN       NaN         NaN         NaN   
21      gulk   NaN  ...          NaN       NaN         NaN         NaN   
22      lose   NaN  ...          NaN       NaN         NaN         NaN   
23      teeg   NaN  ...          NaN       NaN         NaN         NaN   
24     stake   NaN  ...          NaN       NaN         NaN         NaN   
25      fuel   NaN  ...          NaN       NaN         NaN         NaN   
26      gwab   NaN  ...          NaN       NaN         NaN         NaN   
27      javs   NaN  ...          NaN       NaN         NaN         NaN   
28       lad   NaN  ...          NaN       NaN         NaN         NaN   
29     clake   NaN  ...          NaN       NaN         NaN         NaN   
..       ...   ...  ...          ...       ...         ...         ...   
966     cock   NaN  ...          NaN       NaN         NaN         NaN   
967    kreen   NaN  ...          NaN       NaN         NaN         NaN   
968     fill   NaN  ...          NaN       NaN         NaN         NaN   
969    kripe   NaN  ...          NaN       NaN         NaN         NaN   
970     mife   NaN  ...          NaN       NaN         NaN         NaN   
971     swim   NaN  ...          NaN       NaN         NaN         NaN   
972     roop   NaN  ...          NaN       NaN         NaN         NaN   
973      job   NaN  ...          NaN       NaN         NaN         NaN   
974     zore   NaN  ...          NaN       NaN         NaN         NaN   
975    forth   NaN  ...          NaN       NaN         NaN         NaN   
976   school   NaN  ...          NaN       NaN         NaN         NaN   
977   blonde   NaN  ...          NaN       NaN         NaN         NaN   
978   kreesh   NaN  ...          NaN       NaN         NaN         NaN   
979     sove   NaN  ...          NaN       NaN         NaN         NaN   
980      ter   NaN  ...          NaN       NaN         NaN         NaN   
981     mile   NaN  ...          NaN       NaN         NaN         NaN   
982      hep   NaN  ...          NaN       NaN         NaN         NaN   
983     larn   NaN  ...          NaN       NaN         NaN         NaN   
984    borne   NaN  ...          NaN       NaN         NaN         NaN   
985     deal   NaN  ...          NaN       NaN         NaN         NaN   
986     muvh   NaN  ...          NaN       NaN         NaN         NaN   
987     lean   NaN  ...          NaN       NaN         NaN         NaN   
988      nav   NaN  ...          NaN       NaN         NaN         NaN   
989     test   NaN  ...          NaN       NaN         NaN         NaN   
990     tape   NaN  ...          NaN       NaN         NaN         NaN   
991    grade   NaN  ...          NaN       NaN         NaN         NaN   
992     gret   NaN  ...          NaN       NaN         NaN         NaN   
993     jole   NaN  ...          NaN       NaN         NaN         NaN   
994     rush   NaN  ...          NaN       NaN         NaN         NaN   
995     fail   NaN  ...          NaN       NaN         NaN         NaN   

    rtProbe13 probe13_acc respProbe14 rtProbe14 probe14_acc trial  
0         NaN         NaN         NaN       NaN         NaN     0  
1         NaN         NaN         NaN       NaN         NaN     1  
2         NaN         NaN         NaN       NaN         NaN     2  
3         NaN         NaN         NaN       NaN         NaN     3  
4         NaN         NaN         NaN       NaN         NaN     4  
5         NaN         NaN         NaN       NaN         NaN     5  
6         NaN         NaN         NaN       NaN         NaN     6  
7         NaN         NaN         NaN       NaN         NaN     7  
8         NaN         NaN         NaN       NaN         NaN     8  
9         NaN         NaN         NaN       NaN         NaN     9  
10        NaN         NaN         NaN       NaN         NaN    10  
11        NaN         NaN         NaN       NaN         NaN    11  
12        NaN         NaN         NaN       NaN         NaN    12  
13        NaN         NaN         NaN       NaN         NaN    13  
14        NaN         NaN         NaN       NaN         NaN    14  
15        NaN         NaN         NaN       NaN         NaN    15  
16        NaN         NaN         NaN       NaN         NaN    16  
17        NaN         NaN         NaN       NaN         NaN    17  
18        NaN         NaN         NaN       NaN         NaN    18  
19        NaN         NaN         NaN       NaN         NaN    19  
20        NaN         NaN         NaN       NaN         NaN    20  
21        NaN         NaN         NaN       NaN         NaN    21  
22        NaN         NaN         NaN       NaN         NaN    22  
23        NaN         NaN         NaN       NaN         NaN    23  
24        NaN         NaN         NaN       NaN         NaN    24  
25        NaN         NaN         NaN       NaN         NaN    25  
26        NaN         NaN         NaN       NaN         NaN    26  
27        NaN         NaN         NaN       NaN         NaN    27  
28        NaN         NaN         NaN       NaN         NaN    28  
29        NaN         NaN         NaN       NaN         NaN    29  
..        ...         ...         ...       ...         ...   ...  
966       NaN         NaN         NaN       NaN         NaN   302  
967       NaN         NaN         NaN       NaN         NaN   303  
968       NaN         NaN         NaN       NaN         NaN   304  
969       NaN         NaN         NaN       NaN         NaN   305  
970       NaN         NaN         NaN       NaN         NaN   306  
971       NaN         NaN         NaN       NaN         NaN   307  
972       NaN         NaN         NaN       NaN         NaN   308  
973       NaN         NaN         NaN       NaN         NaN   309  
974       NaN         NaN         NaN       NaN         NaN   310  
975       NaN         NaN         NaN       NaN         NaN   311  
976       NaN         NaN         NaN       NaN         NaN   312  
977       NaN         NaN         NaN       NaN         NaN   313  
978       NaN         NaN         NaN       NaN         NaN   314  
979       NaN         NaN         NaN       NaN         NaN   315  
980       NaN         NaN         NaN       NaN         NaN   316  
981       NaN         NaN         NaN       NaN         NaN   317  
982       NaN         NaN         NaN       NaN         NaN   318  
983       NaN         NaN         NaN       NaN         NaN   319  
984       NaN         NaN         NaN       NaN         NaN   320  
985       NaN         NaN         NaN       NaN         NaN   321  
986       NaN         NaN         NaN       NaN         NaN   322  
987       NaN         NaN         NaN       NaN         NaN   323  
988       NaN         NaN         NaN       NaN         NaN   324  
989       NaN         NaN         NaN       NaN         NaN   325  
990       NaN         NaN         NaN       NaN         NaN   326  
991       NaN         NaN         NaN       NaN         NaN   327  
992       NaN         NaN         NaN       NaN         NaN   328  
993       NaN         NaN         NaN       NaN         NaN   329  
994       NaN         NaN         NaN       NaN         NaN   330  
995       NaN         NaN         NaN       NaN         NaN   331  

[996 rows x 116 columns]

In [165]: df_main['acc']
Out[165]: 
0      0.0
1      1.0
2      1.0
3      1.0
4      1.0
5      1.0
6      1.0
7      1.0
8      1.0
9      1.0
10     1.0
11     1.0
12     1.0
13     1.0
14     1.0
15     1.0
16     1.0
17     1.0
18     1.0
19     1.0
20     1.0
21     1.0
22     1.0
23     1.0
24     1.0
25     1.0
26     1.0
27     1.0
28     0.0
29     1.0
      ... 
966    1.0
967    1.0
968    1.0
969    1.0
970    1.0
971    0.0
972    1.0
973    1.0
974    1.0
975    1.0
976    1.0
977    1.0
978    1.0
979    1.0
980    1.0
981    1.0
982    1.0
983    1.0
984    1.0
985    1.0
986    1.0
987    1.0
988    1.0
989    1.0
990    1.0
991    1.0
992    1.0
993    1.0
994    1.0
995    1.0
Name: acc, Length: 996, dtype: float64

In [166]: 996/3
Out[166]: 332

In [167]: df_main.loc[332]
Out[167]: 
index                   0
subj                  s02
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                     0
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object

In [168]: df_main.loc[331]
Out[168]: 
index              331
subj               s01
block                8
targTheta           70
n_probes             1
probeTheta_loc     bot
targOrNoTarg       NaN
acc                  1
word0             soft
word1              NaN
word2              NaN
word3              NaN
word4              NaN
word5              NaN
word6              NaN
word7              NaN
word8              NaN
word9              NaN
word10             NaN
word11             NaN
word12             NaN
word13             NaN
word14             NaN
word0_cond        word
word1_cond         NaN
word2_cond         NaN
word3_cond         NaN
word4_cond         NaN
word5_cond         NaN
word6_cond         NaN
                  ... 
rtProbe5           NaN
probe5_acc         NaN
respProbe6         NaN
rtProbe6           NaN
probe6_acc         NaN
respProbe7         NaN
rtProbe7           NaN
probe7_acc         NaN
respProbe8         NaN
rtProbe8           NaN
probe8_acc         NaN
respProbe9         NaN
rtProbe9           NaN
probe9_acc         NaN
respProbe10        NaN
rtProbe10          NaN
probe10_acc        NaN
respProbe11        NaN
rtProbe11          NaN
probe11_acc        NaN
respProbe12        NaN
rtProbe12          NaN
probe12_acc        NaN
respProbe13        NaN
rtProbe13          NaN
probe13_acc        NaN
respProbe14        NaN
rtProbe14          NaN
probe14_acc        NaN
trial              331
Name: 331, Length: 116, dtype: object

In [169]: 332/332
Out[169]: 1

In [170]: 332//332
Out[170]: 1

In [171]: 332%332
Out[171]: 0

In [172]: 331%332
Out[172]: 331

In [173]: 0%332
Out[173]: 0

In [174]: df_main = pd.concat(df_list,ignore_index=False)
     ...: df_main = df_main.reset_index()
     ...: 

In [175]: df_main.head()
Out[175]: 
   index subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
0      0  s01      1         10         1            top           NaN  NaN   
1      1  s01      1         20         1            top           NaN  NaN   
2      2  s01      1         70         1            top           NaN  NaN   
3      3  s01      1        120         1            top           NaN  NaN   
4      4  s01      1         20         1            top           NaN  NaN   

    word0 word1  ...  respProbe12 rtProbe12 probe12_acc respProbe13 rtProbe13  \
0    plob   NaN  ...          NaN       NaN         NaN         NaN       NaN   
1   raise   NaN  ...          NaN       NaN         NaN         NaN       NaN   
2    fare   NaN  ...          NaN       NaN         NaN         NaN       NaN   
3  battle   NaN  ...          NaN       NaN         NaN         NaN       NaN   
4    fore   NaN  ...          NaN       NaN         NaN         NaN       NaN   

  probe13_acc respProbe14 rtProbe14 probe14_acc trial  
0         NaN         NaN       NaN         NaN     0  
1         NaN         NaN       NaN         NaN     1  
2         NaN         NaN       NaN         NaN     2  
3         NaN         NaN       NaN         NaN     3  
4         NaN         NaN       NaN         NaN     4  

[5 rows x 116 columns]

In [176]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif trial % 332 == 0: 
     ...: ^I^Iprint df_main.loc[trial]
     ...: ^Ielif df_main.loc[trial, 'probe{:d}_acc'.format(probeN
     ...: um-1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...:   
index                   0
subj                  s01
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object
index                   0
subj                  s02
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object

In [177]: trial
Out[177]: 995

In [178]: df_main.loc[trial, 'index']
Out[178]: 331

In [179]: df_main.columns
Out[179]: 
Index([u'index', u'subj', u'block', u'targTheta', u'n_probes',
       u'probeTheta_loc', u'targOrNoTarg', u'acc', u'word0', u'word1',
       ...
       u'respProbe12', u'rtProbe12', u'probe12_acc', u'respProbe13',
       u'rtProbe13', u'probe13_acc', u'respProbe14', u'rtProbe14',
       u'probe14_acc', u'trial'],
      dtype='object', length=116)

In [180]: for trial in df_main.index: 
     ...: ^IprobeNum = df_main.loc[trial, 'n_probes']
     ...: ^Iif df_main.loc[trial, 'index'] == 0: #something wrong
     ...:  with first trial 
     ...: ^I^Iprint df_main.loc[trial]
     ...: ^Ielif df_main.loc[trial, 'probe{:d}_acc'.format(probeN
     ...: um-1)] == 1: #correct PM resp
     ...: ^I^Idf_main.loc[trial, 'acc'] = 1
     ...: ^Ielse:
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...:   
index                   0
subj                  s01
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object
index                   0
subj                  s02
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object

In [181]: df_main
Out[181]: 
     index subj  block  targTheta  n_probes probeTheta_loc  targOrNoTarg  acc  \
0        0  s01      1         10         1            top           NaN  NaN   
1        1  s01      1         20         1            top           NaN  1.0   
2        2  s01      1         70         1            top           NaN  1.0   
3        3  s01      1        120         1            top           NaN  1.0   
4        4  s01      1         20         1            top           NaN  1.0   
5        5  s01      1         20         1            bot           NaN  1.0   
6        6  s01      1         10         1            top           NaN  1.0   
7        7  s01      1         20         1            bot           NaN  1.0   
8        8  s01      1         10         1            bot           NaN  1.0   
9        9  s01      1         50         1            top           NaN  1.0   
10      10  s01      1        130         1            top           NaN  1.0   
11      11  s01      1         80         1            bot           NaN  1.0   
12      12  s01      1        100         1            bot           NaN  1.0   
13      13  s01      1         80         1            bot           NaN  1.0   
14      14  s01      1         50         1            bot           NaN  1.0   
15      15  s01      1        120         1            bot           NaN  1.0   
16      16  s01      1        150         1            top           NaN  1.0   
17      17  s01      1         60         1            bot           NaN  1.0   
18      18  s01      1        170         1            top           NaN  1.0   
19      19  s01      1        140         1            top           NaN  1.0   
20      20  s01      1        170         1            top           NaN  1.0   
21      21  s01      1        150         1            top           NaN  1.0   
22      22  s01      1         40         1            bot           NaN  1.0   
23      23  s01      1         50         1            bot           NaN  1.0   
24      24  s01      1         60         1            top           NaN  1.0   
25      25  s01      1        100         1            bot           NaN  1.0   
26      26  s01      1         10         1            top           NaN  1.0   
27      27  s01      1         60         1            top           NaN  1.0   
28      28  s01      1         70         1            top           NaN  0.0   
29      29  s01      1         10         1            bot           NaN  1.0   
..     ...  ...    ...        ...       ...            ...           ...  ...   
966    302  s03      8         20         1            bot           NaN  1.0   
967    303  s03      8        160         1            bot           NaN  1.0   
968    304  s03      8         20         1            bot           NaN  1.0   
969    305  s03      8         40         1            top           NaN  1.0   
970    306  s03      8         30         1            bot           NaN  1.0   
971    307  s03      8        140         1            bot           NaN  0.0   
972    308  s03      8         70         1            bot           NaN  1.0   
973    309  s03      8         10         1            bot           NaN  1.0   
974    310  s03      8        130         1            top           NaN  1.0   
975    311  s03      8         20         1            bot           NaN  1.0   
976    312  s03      8         30         1            bot           NaN  1.0   
977    313  s03      8         10         1            top           NaN  1.0   
978    314  s03      8        100         1            top           NaN  1.0   
979    315  s03      8         10         1            top           NaN  1.0   
980    316  s03      8        140         1            top           NaN  1.0   
981    317  s03      8        130         1            top           NaN  1.0   
982    318  s03      8        150         1            top           NaN  1.0   
983    319  s03      8        110         1            top           NaN  1.0   
984    320  s03      8        110         1            top           NaN  1.0   
985    321  s03      8         70         1            top           NaN  1.0   
986    322  s03      8        150         1            top           NaN  1.0   
987    323  s03      8        140         1            top           NaN  1.0   
988    324  s03      8         30         1            bot           NaN  1.0   
989    325  s03      8        100         1            bot           NaN  1.0   
990    326  s03      8         10         1            bot           NaN  1.0   
991    327  s03      8         50         1            bot           NaN  1.0   
992    328  s03      8         10         1            top           NaN  1.0   
993    329  s03      8         50         1            top           NaN  1.0   
994    330  s03      8         40         1            top           NaN  1.0   
995    331  s03      8        160         1            bot           NaN  1.0   

       word0 word1  ...  respProbe12 rtProbe12 probe12_acc respProbe13  \
0       plob   NaN  ...          NaN       NaN         NaN         NaN   
1      raise   NaN  ...          NaN       NaN         NaN         NaN   
2       fare   NaN  ...          NaN       NaN         NaN         NaN   
3     battle   NaN  ...          NaN       NaN         NaN         NaN   
4       fore   NaN  ...          NaN       NaN         NaN         NaN   
5      phote   NaN  ...          NaN       NaN         NaN         NaN   
6     skeeks   NaN  ...          NaN       NaN         NaN         NaN   
7       paid   NaN  ...          NaN       NaN         NaN         NaN   
8    sneiled   NaN  ...          NaN       NaN         NaN         NaN   
9       work   NaN  ...          NaN       NaN         NaN         NaN   
10       art   NaN  ...          NaN       NaN         NaN         NaN   
11      doop   NaN  ...          NaN       NaN         NaN         NaN   
12    shoops   NaN  ...          NaN       NaN         NaN         NaN   
13     black   NaN  ...          NaN       NaN         NaN         NaN   
14      vrip   NaN  ...          NaN       NaN         NaN         NaN   
15   bleeced   NaN  ...          NaN       NaN         NaN         NaN   
16    street   NaN  ...          NaN       NaN         NaN         NaN   
17      type   NaN  ...          NaN       NaN         NaN         NaN   
18      dirt   NaN  ...          NaN       NaN         NaN         NaN   
19       tie   NaN  ...          NaN       NaN         NaN         NaN   
20       jum   NaN  ...          NaN       NaN         NaN         NaN   
21      gulk   NaN  ...          NaN       NaN         NaN         NaN   
22      lose   NaN  ...          NaN       NaN         NaN         NaN   
23      teeg   NaN  ...          NaN       NaN         NaN         NaN   
24     stake   NaN  ...          NaN       NaN         NaN         NaN   
25      fuel   NaN  ...          NaN       NaN         NaN         NaN   
26      gwab   NaN  ...          NaN       NaN         NaN         NaN   
27      javs   NaN  ...          NaN       NaN         NaN         NaN   
28       lad   NaN  ...          NaN       NaN         NaN         NaN   
29     clake   NaN  ...          NaN       NaN         NaN         NaN   
..       ...   ...  ...          ...       ...         ...         ...   
966     cock   NaN  ...          NaN       NaN         NaN         NaN   
967    kreen   NaN  ...          NaN       NaN         NaN         NaN   
968     fill   NaN  ...          NaN       NaN         NaN         NaN   
969    kripe   NaN  ...          NaN       NaN         NaN         NaN   
970     mife   NaN  ...          NaN       NaN         NaN         NaN   
971     swim   NaN  ...          NaN       NaN         NaN         NaN   
972     roop   NaN  ...          NaN       NaN         NaN         NaN   
973      job   NaN  ...          NaN       NaN         NaN         NaN   
974     zore   NaN  ...          NaN       NaN         NaN         NaN   
975    forth   NaN  ...          NaN       NaN         NaN         NaN   
976   school   NaN  ...          NaN       NaN         NaN         NaN   
977   blonde   NaN  ...          NaN       NaN         NaN         NaN   
978   kreesh   NaN  ...          NaN       NaN         NaN         NaN   
979     sove   NaN  ...          NaN       NaN         NaN         NaN   
980      ter   NaN  ...          NaN       NaN         NaN         NaN   
981     mile   NaN  ...          NaN       NaN         NaN         NaN   
982      hep   NaN  ...          NaN       NaN         NaN         NaN   
983     larn   NaN  ...          NaN       NaN         NaN         NaN   
984    borne   NaN  ...          NaN       NaN         NaN         NaN   
985     deal   NaN  ...          NaN       NaN         NaN         NaN   
986     muvh   NaN  ...          NaN       NaN         NaN         NaN   
987     lean   NaN  ...          NaN       NaN         NaN         NaN   
988      nav   NaN  ...          NaN       NaN         NaN         NaN   
989     test   NaN  ...          NaN       NaN         NaN         NaN   
990     tape   NaN  ...          NaN       NaN         NaN         NaN   
991    grade   NaN  ...          NaN       NaN         NaN         NaN   
992     gret   NaN  ...          NaN       NaN         NaN         NaN   
993     jole   NaN  ...          NaN       NaN         NaN         NaN   
994     rush   NaN  ...          NaN       NaN         NaN         NaN   
995     fail   NaN  ...          NaN       NaN         NaN         NaN   

    rtProbe13 probe13_acc respProbe14 rtProbe14 probe14_acc trial  
0         NaN         NaN         NaN       NaN         NaN     0  
1         NaN         NaN         NaN       NaN         NaN     1  
2         NaN         NaN         NaN       NaN         NaN     2  
3         NaN         NaN         NaN       NaN         NaN     3  
4         NaN         NaN         NaN       NaN         NaN     4  
5         NaN         NaN         NaN       NaN         NaN     5  
6         NaN         NaN         NaN       NaN         NaN     6  
7         NaN         NaN         NaN       NaN         NaN     7  
8         NaN         NaN         NaN       NaN         NaN     8  
9         NaN         NaN         NaN       NaN         NaN     9  
10        NaN         NaN         NaN       NaN         NaN    10  
11        NaN         NaN         NaN       NaN         NaN    11  
12        NaN         NaN         NaN       NaN         NaN    12  
13        NaN         NaN         NaN       NaN         NaN    13  
14        NaN         NaN         NaN       NaN         NaN    14  
15        NaN         NaN         NaN       NaN         NaN    15  
16        NaN         NaN         NaN       NaN         NaN    16  
17        NaN         NaN         NaN       NaN         NaN    17  
18        NaN         NaN         NaN       NaN         NaN    18  
19        NaN         NaN         NaN       NaN         NaN    19  
20        NaN         NaN         NaN       NaN         NaN    20  
21        NaN         NaN         NaN       NaN         NaN    21  
22        NaN         NaN         NaN       NaN         NaN    22  
23        NaN         NaN         NaN       NaN         NaN    23  
24        NaN         NaN         NaN       NaN         NaN    24  
25        NaN         NaN         NaN       NaN         NaN    25  
26        NaN         NaN         NaN       NaN         NaN    26  
27        NaN         NaN         NaN       NaN         NaN    27  
28        NaN         NaN         NaN       NaN         NaN    28  
29        NaN         NaN         NaN       NaN         NaN    29  
..        ...         ...         ...       ...         ...   ...  
966       NaN         NaN         NaN       NaN         NaN   302  
967       NaN         NaN         NaN       NaN         NaN   303  
968       NaN         NaN         NaN       NaN         NaN   304  
969       NaN         NaN         NaN       NaN         NaN   305  
970       NaN         NaN         NaN       NaN         NaN   306  
971       NaN         NaN         NaN       NaN         NaN   307  
972       NaN         NaN         NaN       NaN         NaN   308  
973       NaN         NaN         NaN       NaN         NaN   309  
974       NaN         NaN         NaN       NaN         NaN   310  
975       NaN         NaN         NaN       NaN         NaN   311  
976       NaN         NaN         NaN       NaN         NaN   312  
977       NaN         NaN         NaN       NaN         NaN   313  
978       NaN         NaN         NaN       NaN         NaN   314  
979       NaN         NaN         NaN       NaN         NaN   315  
980       NaN         NaN         NaN       NaN         NaN   316  
981       NaN         NaN         NaN       NaN         NaN   317  
982       NaN         NaN         NaN       NaN         NaN   318  
983       NaN         NaN         NaN       NaN         NaN   319  
984       NaN         NaN         NaN       NaN         NaN   320  
985       NaN         NaN         NaN       NaN         NaN   321  
986       NaN         NaN         NaN       NaN         NaN   322  
987       NaN         NaN         NaN       NaN         NaN   323  
988       NaN         NaN         NaN       NaN         NaN   324  
989       NaN         NaN         NaN       NaN         NaN   325  
990       NaN         NaN         NaN       NaN         NaN   326  
991       NaN         NaN         NaN       NaN         NaN   327  
992       NaN         NaN         NaN       NaN         NaN   328  
993       NaN         NaN         NaN       NaN         NaN   329  
994       NaN         NaN         NaN       NaN         NaN   330  
995       NaN         NaN         NaN       NaN         NaN   331  

[996 rows x 116 columns]

In [182]: df_main['acc']
Out[182]: 
0      NaN
1      1.0
2      1.0
3      1.0
4      1.0
5      1.0
6      1.0
7      1.0
8      1.0
9      1.0
10     1.0
11     1.0
12     1.0
13     1.0
14     1.0
15     1.0
16     1.0
17     1.0
18     1.0
19     1.0
20     1.0
21     1.0
22     1.0
23     1.0
24     1.0
25     1.0
26     1.0
27     1.0
28     0.0
29     1.0
      ... 
966    1.0
967    1.0
968    1.0
969    1.0
970    1.0
971    0.0
972    1.0
973    1.0
974    1.0
975    1.0
976    1.0
977    1.0
978    1.0
979    1.0
980    1.0
981    1.0
982    1.0
983    1.0
984    1.0
985    1.0
986    1.0
987    1.0
988    1.0
989    1.0
990    1.0
991    1.0
992    1.0
993    1.0
994    1.0
995    1.0
Name: acc, Length: 996, dtype: float64

In [183]: df_main['acc'].mean()
Out[183]: 0.8016112789526687

In [184]: block1 = df_main[(df_main['block'] == 1)]
     ...: block8 = df_main[(df_main['block'] == 8)]
     ...: 

In [185]: block1_df = pd.concat([ block1['subj'], block1['acc'],b
     ...: lock1[rtProbes].mean(axis=1)], axis=1)
     ...: block1_df['block'] = 1
     ...: 

In [186]: block1_df
Out[186]: 
    subj  acc         0  block
0    s01  NaN       NaN      1
1    s01  1.0  0.578673      1
2    s01  1.0  1.530600      1
3    s01  1.0  0.938485      1
4    s01  1.0  1.261371      1
5    s01  1.0  1.170780      1
6    s01  1.0  1.695363      1
7    s01  1.0  0.696463      1
8    s01  1.0  0.833418      1
9    s01  1.0  0.859703      1
10   s01  1.0  0.701690      1
11   s01  1.0  0.734399      1
12   s01  1.0  0.799249      1
13   s01  1.0  0.680767      1
14   s01  1.0  0.601541      1
15   s01  1.0  0.865457      1
16   s01  1.0  0.619765      1
17   s01  1.0  0.907578      1
18   s01  1.0  0.454754      1
19   s01  1.0  1.021407      1
20   s01  1.0  0.985144      1
21   s01  1.0  1.204743      1
22   s01  1.0  0.953433      1
23   s01  1.0  0.748170      1
24   s01  1.0  1.789645      1
25   s01  1.0  0.815478      1
26   s01  1.0  0.784769      1
27   s01  1.0  1.626155      1
28   s01  0.0       NaN      1
29   s01  1.0  1.430273      1
..   ...  ...       ...    ...
740  s03  1.0  0.763318      1
741  s03  1.0  0.548060      1
742  s03  1.0  1.122578      1
743  s03  1.0  0.519714      1
744  s03  1.0  0.646362      1
745  s03  1.0  0.510455      1
746  s03  1.0  0.541207      1
747  s03  1.0  0.635570      1
748  s03  1.0  0.636090      1
749  s03  1.0  0.796140      1
750  s03  1.0  0.629582      1
751  s03  1.0  0.557628      1
752  s03  1.0  0.676330      1
753  s03  1.0  0.956633      1
754  s03  1.0  0.711121      1
755  s03  1.0  0.807502      1
756  s03  1.0  0.641067      1
757  s03  1.0  0.561135      1
758  s03  1.0  0.776435      1
759  s03  1.0  0.553930      1
760  s03  1.0  0.616908      1
761  s03  1.0  0.593337      1
762  s03  1.0  0.536614      1
763  s03  1.0  0.567889      1
764  s03  1.0  0.695524      1
765  s03  1.0  0.599858      1
766  s03  1.0  0.534956      1
767  s03  1.0  0.597388      1
768  s03  1.0  0.485272      1
769  s03  1.0  0.571674      1

[318 rows x 4 columns]

In [187]: 
     ...: 
     ...: allTogether_df = pd.concat([block1_df, block2_df, block
     ...: 3_df, block4_df, block5_df, block6_df, block7_df, block
     ...: 8_df], axis=0)
     ...: 
     ...: for i in df_main.index: 
     ...: ^Ifor probe in range(0,15): 
     ...: ^I^Iif df_main.loc[i, 'probe{:d}_acc'.format(probe)] ==
     ...:  0: 
     ...: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'meanTrial_rt', 'bloc
     ...: k']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
  File "<ipython-input-187-e78bca0a78ee>", line 228
    'Monitor 1', 'Monitor 2', 'M&M 1', 'M&M 2', 'Baseline 2'])
    ^
IndentationError: unexpected indent


In [188]: 

In [188]: 
     ...: allTogether_df = pd.concat([block1_df, block2_df, block
     ...: 3_df, block4_df, block5_df, block6_df, block7_df, block
     ...: 8_df], axis=0)
     ...: 
     ...: for i in df_main.index: 
     ...: ^Ifor probe in range(0,15): 
     ...: ^I^Iif df_main.loc[i, 'probe{:d}_acc'.format(probe)] ==
     ...:  0: 
     ...: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'meanTrial_rt', 'bloc
     ...: k']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 
index                   0
subj                  s01
block                   1
targTheta             170
n_probes                1
probeTheta_loc        bot
targOrNoTarg          NaN
acc                   NaN
word0                reex
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object
index                   0
subj                  s02
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object
index                   0
subj                  s04
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 996, Length: 116, dtype: object
-----------------------------------------------------------------
ValueError                      Traceback (most recent call last)
<ipython-input-188-b9a634f34033> in <module>()
    110 
    111 # Compare baseline 1 to baseline 8
--> 112 ax = sea.violinplot(x='subj', y = 'rtProbe0', hue = 'block', data=baseline_df, palette = "Greens", cut = 0)
    113 # Cut = 0 so range is limited to observed data
    114 plt.xlabel('Subject')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in violinplot(x, y, hue, data, order, hue_order, bw, cut, scale, scale_hue, gridsize, width, inner, split, dodge, orient, linewidth, color, palette, saturation, ax, **kwargs)
   2362                              bw, cut, scale, scale_hue, gridsize,
   2363                              width, inner, split, dodge, orient, linewidth,
-> 2364                              color, palette, saturation)
   2365 
   2366     if ax is None:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in __init__(self, x, y, hue, data, order, hue_order, bw, cut, scale, scale_hue, gridsize, width, inner, split, dodge, orient, linewidth, color, palette, saturation)
    555                  color, palette, saturation):
    556 
--> 557         self.establish_variables(x, y, hue, data, orient, order, hue_order)
    558         self.establish_colors(color, palette, saturation)
    559         self.estimate_densities(bw, cut, scale, scale_hue, gridsize)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in establish_variables(self, x, y, hue, data, orient, order, hue_order, units)
    149                 if isinstance(input, string_types):
    150                     err = "Could not interpret input '{}'".format(input)
--> 151                     raise ValueError(err)
    152 
    153             # Figure out the plotting orientation

ValueError: Could not interpret input 'rtProbe0'

In [189]: baseline_df
Out[189]: 
     index subj  acc         0  block
0        0  s01  NaN       NaN      1
1        1  s01  1.0  0.740545      1
2        2  s01  1.0  0.645820      1
3        3  s01  1.0  0.478978      1
4        4  s01  1.0  0.942406      1
5        5  s01  1.0  0.857848      1
6        6  s01  1.0  0.820647      1
7        7  s01  1.0  0.678682      1
8        8  s01  1.0  0.736166      1
9        9  s01  1.0  0.562488      1
10      10  s01  1.0  0.547181      1
11      11  s01  1.0  0.651102      1
12      12  s01  1.0  0.973096      1
13      13  s01  1.0  0.664126      1
14      14  s01  1.0  0.800906      1
15      15  s01  1.0  1.090712      1
16      16  s01  1.0  0.671739      1
17      17  s01  1.0  0.928950      1
18      18  s01  1.0  0.668482      1
19      19  s01  0.0       NaN      1
20      20  s01  1.0  1.016827      1
21      21  s01  1.0  0.644921      1
22      22  s01  1.0  0.853739      1
23      23  s01  1.0  1.024423      1
24      24  s01  1.0  0.612399      1
25      25  s01  1.0  0.693226      1
26      26  s01  1.0  1.166701      1
27      27  s01  1.0  1.053213      1
28      28  s01  1.0  1.266171      1
29      29  s01  1.0  0.953054      1
..     ...  ...  ...       ...    ...
818   1298  s04  1.0  0.774844      8
819   1299  s04  1.0  0.560298      8
820   1300  s04  1.0  0.582982      8
821   1301  s04  1.0  0.550393      8
822   1302  s04  1.0  0.645242      8
823   1303  s04  0.0       NaN      8
824   1304  s04  1.0  1.067824      8
825   1305  s04  1.0  0.512443      8
826   1306  s04  1.0  0.542875      8
827   1307  s04  1.0  0.517449      8
828   1308  s04  1.0  0.604332      8
829   1309  s04  1.0  0.643829      8
830   1310  s04  1.0  0.555282      8
831   1311  s04  1.0  0.898563      8
832   1312  s04  1.0  0.636528      8
833   1313  s04  1.0  0.708917      8
834   1314  s04  1.0  0.589029      8
835   1315  s04  1.0  0.684363      8
836   1316  s04  1.0  1.052643      8
837   1317  s04  1.0  0.591856      8
838   1318  s04  1.0  0.535443      8
839   1319  s04  1.0  0.565851      8
840   1320  s04  1.0  0.893359      8
841   1321  s04  1.0  0.599485      8
842   1322  s04  1.0  0.695128      8
843   1323  s04  1.0  0.559185      8
844   1324  s04  1.0  0.542678      8
845   1325  s04  1.0  0.869150      8
846   1326  s04  1.0  0.471247      8
847   1327  s04  1.0  0.589082      8

[848 rows x 5 columns]

In [190]: block1_df
Out[190]: 
     subj  acc         0  block
0     s01  NaN       NaN      1
1     s01  1.0  0.740545      1
2     s01  1.0  0.645820      1
3     s01  1.0  0.478978      1
4     s01  1.0  0.942406      1
5     s01  1.0  0.857848      1
6     s01  1.0  0.820647      1
7     s01  1.0  0.678682      1
8     s01  1.0  0.736166      1
9     s01  1.0  0.562488      1
10    s01  1.0  0.547181      1
11    s01  1.0  0.651102      1
12    s01  1.0  0.973096      1
13    s01  1.0  0.664126      1
14    s01  1.0  0.800906      1
15    s01  1.0  1.090712      1
16    s01  1.0  0.671739      1
17    s01  1.0  0.928950      1
18    s01  1.0  0.668482      1
19    s01  0.0       NaN      1
20    s01  1.0  1.016827      1
21    s01  1.0  0.644921      1
22    s01  1.0  0.853739      1
23    s01  1.0  1.024423      1
24    s01  1.0  0.612399      1
25    s01  1.0  0.693226      1
26    s01  1.0  1.166701      1
27    s01  1.0  1.053213      1
28    s01  1.0  1.266171      1
29    s01  1.0  0.953054      1
...   ...  ...       ...    ...
1072  s04  1.0  0.763318      1
1073  s04  1.0  0.548060      1
1074  s04  1.0  1.122578      1
1075  s04  1.0  0.519714      1
1076  s04  1.0  0.646362      1
1077  s04  1.0  0.510455      1
1078  s04  1.0  0.541207      1
1079  s04  1.0  0.635570      1
1080  s04  1.0  0.636090      1
1081  s04  1.0  0.796140      1
1082  s04  1.0  0.629582      1
1083  s04  1.0  0.557628      1
1084  s04  1.0  0.676330      1
1085  s04  1.0  0.956633      1
1086  s04  1.0  0.711121      1
1087  s04  1.0  0.807502      1
1088  s04  1.0  0.641067      1
1089  s04  1.0  0.561135      1
1090  s04  1.0  0.776435      1
1091  s04  1.0  0.553930      1
1092  s04  1.0  0.616908      1
1093  s04  1.0  0.593337      1
1094  s04  1.0  0.536614      1
1095  s04  1.0  0.567889      1
1096  s04  1.0  0.695524      1
1097  s04  1.0  0.599858      1
1098  s04  1.0  0.534956      1
1099  s04  1.0  0.597388      1
1100  s04  1.0  0.485272      1
1101  s04  1.0  0.571674      1

[424 rows x 4 columns]

In [191]: block7 = df_main[(df_main['block'] == 7)]
In [191]: block7 = df_main[(df_main['block'] == 7)]
     ...: 
     ...: 
     ...: block6_df = pd.concat([ block6['subj'], block6['acc'], 
     ...: block6[rtProbes].mean(axis=1)], axis=1)
     ...: block6_df['block'] = 6
     ...: block7_df = pd.concat([ block7['subj'], block7['acc'], 
     ...: block7[rtProbes].mean(axis=1)], axis=1)
     ...: block7_df['block'] = 7
     ...: 
     ...: mnm_df = pd.concat([block6_df, block7_df], axis=0)
     ...: mnm_df.columns = ['subj', 'pm_acc', 'meanTrial_rt', 'bl
     ...: ock']
     ...: 
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue =
     ...:  'block', data=mnm_df, palette = "Purples", cut = 0)
     ...: # Cut = 0 so range is limited to observed data
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare.png', dpi = 600)
     ...: 
     ...: plt.close()
     ...: 
index                   0
subj                  s01
block                   1
targTheta             170
n_probes                1
probeTheta_loc        bot
targOrNoTarg          NaN
acc                   NaN
word0                reex
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object
index                   0
subj                  s02
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object
index                   0
subj                  s04
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 996, Length: 116, dtype: object
-----------------------------------------------------------------
ValueError                      Traceback (most recent call last)
<ipython-input-191-3ced9d627c80> in <module>()
    108 #block8 = df_main[(df_main['block'] == 8) & (df_main['probe0_acc']== 1)]
    109 baseline_df = pd.concat([block1_df, block8_df], axis = 0).reset_index()#axis = 0 for horiz cat, = 1 for vert cat
--> 110 baseline_df.columns = ['subj', 'pm_acc', 'meanTrial_rt', 'block']
    111 
    112 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in __setattr__(self, name, value)
   3625         try:
   3626             object.__getattribute__(self, name)
-> 3627             return object.__setattr__(self, name, value)
   3628         except AttributeError:
   3629             pass

pandas/_libs/properties.pyx in pandas._libs.properties.AxisProperty.__set__()

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in _set_axis(self, axis, labels)
    557 
    558     def _set_axis(self, axis, labels):
--> 559         self._data.set_axis(axis, labels)
    560         self._clear_item_cache()
    561 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in set_axis(self, axis, new_labels)
   3072             raise ValueError('Length mismatch: Expected axis has %d elements, '
   3073                              'new values have %d elements' %
-> 3074                              (old_len, new_len))
   3075 
   3076         self.axes[axis] = new_labels

ValueError: Length mismatch: Expected axis has 5 elements, new values have 4 elements

In [192]: baseline_df
Out[192]: 
     index subj  acc         0  block
0        0  s01  NaN       NaN      1
1        1  s01  1.0  0.740545      1
2        2  s01  1.0  0.645820      1
3        3  s01  1.0  0.478978      1
4        4  s01  1.0  0.942406      1
5        5  s01  1.0  0.857848      1
6        6  s01  1.0  0.820647      1
7        7  s01  1.0  0.678682      1
8        8  s01  1.0  0.736166      1
9        9  s01  1.0  0.562488      1
10      10  s01  1.0  0.547181      1
11      11  s01  1.0  0.651102      1
12      12  s01  1.0  0.973096      1
13      13  s01  1.0  0.664126      1
14      14  s01  1.0  0.800906      1
15      15  s01  1.0  1.090712      1
16      16  s01  1.0  0.671739      1
17      17  s01  1.0  0.928950      1
18      18  s01  1.0  0.668482      1
19      19  s01  0.0       NaN      1
20      20  s01  1.0  1.016827      1
21      21  s01  1.0  0.644921      1
22      22  s01  1.0  0.853739      1
23      23  s01  1.0  1.024423      1
24      24  s01  1.0  0.612399      1
25      25  s01  1.0  0.693226      1
26      26  s01  1.0  1.166701      1
27      27  s01  1.0  1.053213      1
28      28  s01  1.0  1.266171      1
29      29  s01  1.0  0.953054      1
..     ...  ...  ...       ...    ...
818   1298  s04  1.0  0.774844      8
819   1299  s04  1.0  0.560298      8
820   1300  s04  1.0  0.582982      8
821   1301  s04  1.0  0.550393      8
822   1302  s04  1.0  0.645242      8
823   1303  s04  0.0       NaN      8
824   1304  s04  1.0  1.067824      8
825   1305  s04  1.0  0.512443      8
826   1306  s04  1.0  0.542875      8
827   1307  s04  1.0  0.517449      8
828   1308  s04  1.0  0.604332      8
829   1309  s04  1.0  0.643829      8
830   1310  s04  1.0  0.555282      8
831   1311  s04  1.0  0.898563      8
832   1312  s04  1.0  0.636528      8
833   1313  s04  1.0  0.708917      8
834   1314  s04  1.0  0.589029      8
835   1315  s04  1.0  0.684363      8
836   1316  s04  1.0  1.052643      8
837   1317  s04  1.0  0.591856      8
838   1318  s04  1.0  0.535443      8
839   1319  s04  1.0  0.565851      8
840   1320  s04  1.0  0.893359      8
841   1321  s04  1.0  0.599485      8
842   1322  s04  1.0  0.695128      8
843   1323  s04  1.0  0.559185      8
844   1324  s04  1.0  0.542678      8
845   1325  s04  1.0  0.869150      8
846   1326  s04  1.0  0.471247      8
847   1327  s04  1.0  0.589082      8

[848 rows x 5 columns]

In [193]: maintain_df
Out[193]: 
    subj  meanTrial_rt  block
106  s01      1.123872      2
107  s01      0.876172      2
108  s01      1.100846      2
109  s01      0.988922      2
110  s01      0.893303      2
111  s01      1.247433      2
112  s01      0.815053      2
113  s01      0.778169      2
114  s01      0.843641      2
115  s01      0.776616      2
116  s01      0.770911      2
117  s01      0.700248      2
118  s01      0.924221      2
119  s01      0.918914      2
120  s01      1.122450      2
121  s01      1.091522      2
122  s01      0.649240      2
123  s01      0.903038      2
124  s01      0.846178      2
125  s01      1.208197      2
438  s02      0.702295      2
439  s02      0.905724      2
440  s02      0.559234      2
441  s02      0.675949      2
442  s02      0.730465      2
443  s02      0.810736      2
444  s02      0.583405      2
445  s02      0.626612      2
446  s02      0.647769      2
447  s02      0.669590      2
..   ...           ...    ...
468  s02      0.979484      3
469  s02      0.918315      3
470  s02      0.627676      3
471  s02      0.672771      3
472  s02      0.619514      3
473  s02      0.635148      3
474  s02      0.621528      3
475  s02      0.653395      3
476  s02      0.635087      3
477  s02      0.721326      3
790  s03      0.602633      3
791  s03      0.710519      3
792  s03      0.729945      3
793  s03      0.609884      3
794  s03      0.632552      3
795  s03      0.584993      3
796  s03      0.650590      3
797  s03      0.581964      3
798  s03      0.667627      3
799  s03      0.670622      3
800  s03      0.580935      3
801  s03      0.674304      3
802  s03      0.521552      3
803  s03      0.635995      3
804  s03      0.551186      3
805  s03      1.874436      3
806  s03      0.612244      3
807  s03      0.685082      3
808  s03      0.645710      3
809  s03      0.680318      3

[120 rows x 3 columns]

In [194]: baseline_df = pd.concat([block1_df, block8_df], axis = 
     ...: 0)#axis = 0 for horiz cat, = 1 for vert cat
     ...: 

In [195]: 

In [195]: baseline_df
Out[195]: 
     subj  acc         0  block
0     s01  NaN       NaN      1
1     s01  1.0  0.740545      1
2     s01  1.0  0.645820      1
3     s01  1.0  0.478978      1
4     s01  1.0  0.942406      1
5     s01  1.0  0.857848      1
6     s01  1.0  0.820647      1
7     s01  1.0  0.678682      1
8     s01  1.0  0.736166      1
9     s01  1.0  0.562488      1
10    s01  1.0  0.547181      1
11    s01  1.0  0.651102      1
12    s01  1.0  0.973096      1
13    s01  1.0  0.664126      1
14    s01  1.0  0.800906      1
15    s01  1.0  1.090712      1
16    s01  1.0  0.671739      1
17    s01  1.0  0.928950      1
18    s01  1.0  0.668482      1
19    s01  0.0       NaN      1
20    s01  1.0  1.016827      1
21    s01  1.0  0.644921      1
22    s01  1.0  0.853739      1
23    s01  1.0  1.024423      1
24    s01  1.0  0.612399      1
25    s01  1.0  0.693226      1
26    s01  1.0  1.166701      1
27    s01  1.0  1.053213      1
28    s01  1.0  1.266171      1
29    s01  1.0  0.953054      1
...   ...  ...       ...    ...
1298  s04  1.0  0.774844      8
1299  s04  1.0  0.560298      8
1300  s04  1.0  0.582982      8
1301  s04  1.0  0.550393      8
1302  s04  1.0  0.645242      8
1303  s04  0.0       NaN      8
1304  s04  1.0  1.067824      8
1305  s04  1.0  0.512443      8
1306  s04  1.0  0.542875      8
1307  s04  1.0  0.517449      8
1308  s04  1.0  0.604332      8
1309  s04  1.0  0.643829      8
1310  s04  1.0  0.555282      8
1311  s04  1.0  0.898563      8
1312  s04  1.0  0.636528      8
1313  s04  1.0  0.708917      8
1314  s04  1.0  0.589029      8
1315  s04  1.0  0.684363      8
1316  s04  1.0  1.052643      8
1317  s04  1.0  0.591856      8
1318  s04  1.0  0.535443      8
1319  s04  1.0  0.565851      8
1320  s04  1.0  0.893359      8
1321  s04  1.0  0.599485      8
1322  s04  1.0  0.695128      8
1323  s04  1.0  0.559185      8
1324  s04  1.0  0.542678      8
1325  s04  1.0  0.869150      8
1326  s04  1.0  0.471247      8
1327  s04  1.0  0.589082      8

[848 rows x 4 columns]

In [196]: block1_df['block'] = 1
     ...: block8_df = pd.concat([ block8['subj'], block8['acc'], 
     ...: block8[rtProbes].mean(axis=1)], axis=1)
     ...: block8_df['block'] = 8
     ...: 
     ...: 
     ...: # # Find mean rt for baseline blocks (CORRECT RESPONSES
     ...: )
     ...: # block1_rt = df_main[(df_main['block'] == 1) & (df_mai
     ...: n['probe0_acc']== 1)]\
     ...: # ^I.groupby(['subj', 'block'])['rtProbe0'].mean()
     ...: # block8_rt = df_main[df_main['block'] == 8].groupby(['
     ...: subj', 'block'])['rtProbe0'].mean()
     ...: 
     ...: #dfs for violin plots
     ...: #block1 = df_main[(df_main['block'] == 1) & (df_main['p
     ...: robe0_acc']== 1)]
     ...: #block8 = df_main[(df_main['block'] == 8) & (df_main['p
     ...: robe0_acc']== 1)]
     ...: baseline_df = pd.concat([block1_df, block8_df], axis = 
     ...: 0)#axis = 0 for horiz cat, = 1 for vert cat
     ...: baseline_df.columns = ['subj', 'pm_acc', 'meanTrial_rt'
     ...: , 'block']
     ...: 
index                   0
subj                  s01
block                   1
targTheta             170
n_probes                1
probeTheta_loc        bot
targOrNoTarg          NaN
acc                   NaN
word0                reex
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object

index                   0
subj                  s02
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object
index                   0
subj                  s04
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 996, Length: 116, dtype: object

In [197]: 

In [197]: allTogether_df.columns = ['subj', 'meanTrial_rt', 'bloc
     ...: k']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 
     ...: 
     ...: 
     ...: #####################################
     ...: ############  Figures  ##############
     ...: #####################################
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
-----------------------------------------------------------------
ValueError                      Traceback (most recent call last)
<ipython-input-197-9856a79acd8f> in <module>()
      1 
      2 # Compare baseline 1 to baseline 8
----> 3 ax = sea.violinplot(x='subj', y = 'rtProbe0', hue = 'block', data=baseline_df, palette = "Greens", cut = 0)
      4 # Cut = 0 so range is limited to observed data
      5 plt.xlabel('Subject')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in violinplot(x, y, hue, data, order, hue_order, bw, cut, scale, scale_hue, gridsize, width, inner, split, dodge, orient, linewidth, color, palette, saturation, ax, **kwargs)
   2362                              bw, cut, scale, scale_hue, gridsize,
   2363                              width, inner, split, dodge, orient, linewidth,
-> 2364                              color, palette, saturation)
   2365 
   2366     if ax is None:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in __init__(self, x, y, hue, data, order, hue_order, bw, cut, scale, scale_hue, gridsize, width, inner, split, dodge, orient, linewidth, color, palette, saturation)
    555                  color, palette, saturation):
    556 
--> 557         self.establish_variables(x, y, hue, data, orient, order, hue_order)
    558         self.establish_colors(color, palette, saturation)
    559         self.estimate_densities(bw, cut, scale, scale_hue, gridsize)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in establish_variables(self, x, y, hue, data, orient, order, hue_order, units)
    149                 if isinstance(input, string_types):
    150                     err = "Could not interpret input '{}'".format(input)
--> 151                     raise ValueError(err)
    152 
    153             # Figure out the plotting orientation

ValueError: Could not interpret input 'rtProbe0'

In [198]: 

In [198]: allTogether_df.columns = ['subj', 'meanTrial_rt', 'bloc
     ...: k']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 
     ...: 
     ...: 
     ...: #####################################
     ...: ############  Figures  ##############
     ...: #####################################
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
-----------------------------------------------------------------
ValueError                      Traceback (most recent call last)
<ipython-input-198-df617557c293> in <module>()
    113 
    114 
--> 115 all_df.columns = ['subj', 'meanTrial_rt', 'block']
    116 ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue = 'block', data=all_df, palette = my_pal, cut = 0, label = legend_labels)
    117 plt.xlabel('Subject')

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in __setattr__(self, name, value)
   3625         try:
   3626             object.__getattribute__(self, name)
-> 3627             return object.__setattr__(self, name, value)
   3628         except AttributeError:
   3629             pass

pandas/_libs/properties.pyx in pandas._libs.properties.AxisProperty.__set__()

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in _set_axis(self, axis, labels)
    557 
    558     def _set_axis(self, axis, labels):
--> 559         self._data.set_axis(axis, labels)
    560         self._clear_item_cache()
    561 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in set_axis(self, axis, new_labels)
   3072             raise ValueError('Length mismatch: Expected axis has %d elements, '
   3073                              'new values have %d elements' %
-> 3074                              (old_len, new_len))
   3075 
   3076         self.axes[axis] = new_labels

ValueError: Length mismatch: Expected axis has 4 elements, new values have 3 elements

In [199]: 

In [199]: all_df
Out[199]: 
     subj  acc         0  block
0     s01  NaN       NaN      1
1     s01  1.0  0.740545      1
2     s01  1.0  0.645820      1
3     s01  1.0  0.478978      1
4     s01  1.0  0.942406      1
5     s01  1.0  0.857848      1
6     s01  1.0  0.820647      1
7     s01  1.0  0.678682      1
8     s01  1.0  0.736166      1
9     s01  1.0  0.562488      1
10    s01  1.0  0.547181      1
11    s01  1.0  0.651102      1
12    s01  1.0  0.973096      1
13    s01  1.0  0.664126      1
14    s01  1.0  0.800906      1
15    s01  1.0  1.090712      1
16    s01  1.0  0.671739      1
17    s01  1.0  0.928950      1
18    s01  1.0  0.668482      1
19    s01  0.0       NaN      1
20    s01  1.0  1.016827      1
21    s01  1.0  0.644921      1
22    s01  1.0  0.853739      1
23    s01  1.0  1.024423      1
24    s01  1.0  0.612399      1
25    s01  1.0  0.693226      1
26    s01  1.0  1.166701      1
27    s01  1.0  1.053213      1
28    s01  1.0  1.266171      1
29    s01  1.0  0.953054      1
...   ...  ...       ...    ...
1298  s04  1.0  0.774844      8
1299  s04  1.0  0.560298      8
1300  s04  1.0  0.582982      8
1301  s04  1.0  0.550393      8
1302  s04  1.0  0.645242      8
1303  s04  0.0       NaN      8
1304  s04  1.0  1.067824      8
1305  s04  1.0  0.512443      8
1306  s04  1.0  0.542875      8
1307  s04  1.0  0.517449      8
1308  s04  1.0  0.604332      8
1309  s04  1.0  0.643829      8
1310  s04  1.0  0.555282      8
1311  s04  1.0  0.898563      8
1312  s04  1.0  0.636528      8
1313  s04  1.0  0.708917      8
1314  s04  1.0  0.589029      8
1315  s04  1.0  0.684363      8
1316  s04  1.0  1.052643      8
1317  s04  1.0  0.591856      8
1318  s04  1.0  0.535443      8
1319  s04  1.0  0.565851      8
1320  s04  1.0  0.893359      8
1321  s04  1.0  0.599485      8
1322  s04  1.0  0.695128      8
1323  s04  1.0  0.559185      8
1324  s04  1.0  0.542678      8
1325  s04  1.0  0.869150      8
1326  s04  1.0  0.471247      8
1327  s04  1.0  0.589082      8

[1328 rows x 4 columns]

In [200]: 
     ...: allTogether_df = pd.concat([block1_df, block2_df, block
     ...: 3_df, block4_df, block5_df, block6_df, block7_df, block
     ...: 8_df], axis=0)
     ...: 
     ...: for i in df_main.index: 
     ...: ^Ifor probe in range(0,15): 
     ...: ^I^Iif df_main.loc[i, 'probe{:d}_acc'.format(probe)] ==
     ...:  0: 
     ...: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 

index                   0
subj                  s01
block                   1
targTheta             170
n_probes                1
probeTheta_loc        bot
targOrNoTarg          NaN
acc                   NaN
word0                reex
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 0, Length: 116, dtype: object
index                   0
subj                  s02
block                   1
targTheta              10
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                plob
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 332, Length: 116, dtype: object
index                   0
subj                  s03
block                   1
targTheta             170
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0                 pol
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 664, Length: 116, dtype: object
index                   0
subj                  s04
block                   1
targTheta              70
n_probes                1
probeTheta_loc        top
targOrNoTarg          NaN
acc                   NaN
word0              skeeks
word1                 NaN
word2                 NaN
word3                 NaN
word4                 NaN
word5                 NaN
word6                 NaN
word7                 NaN
word8                 NaN
word9                 NaN
word10                NaN
word11                NaN
word12                NaN
word13                NaN
word14                NaN
word0_cond        nonword
word1_cond            NaN
word2_cond            NaN
word3_cond            NaN
word4_cond            NaN
word5_cond            NaN
word6_cond            NaN
                   ...   
rtProbe5              NaN
probe5_acc            NaN
respProbe6            NaN
rtProbe6              NaN
probe6_acc            NaN
respProbe7            NaN
rtProbe7              NaN
probe7_acc            NaN
respProbe8            NaN
rtProbe8              NaN
probe8_acc            NaN
respProbe9            NaN
rtProbe9              NaN
probe9_acc            NaN
respProbe10           NaN
rtProbe10             NaN
probe10_acc           NaN
respProbe11           NaN
rtProbe11             NaN
probe11_acc           NaN
respProbe12           NaN
rtProbe12             NaN
probe12_acc           NaN
respProbe13           NaN
rtProbe13             NaN
probe13_acc           NaN
respProbe14           NaN
rtProbe14             NaN
probe14_acc           NaN
trial                   0
Name: 996, Length: 116, dtype: object

In [201]: 

In [201]: ax = sea.barplot(x='subj', y= 'pm_acc', data=maintain_d
     ...: f, palette="Blues")
     ...: 


In [202]: 

In [202]: plt.close()

In [203]: # PM Accuracy
     ...: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=maintain_df, palette="Blues")


In [204]: 

In [204]: plt.close()

In [205]: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=maintain_df, palette="Blues", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [206]: plt.close()

In [207]: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=monitor_df, palette="Reds", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 
-----------------------------------------------------------------
ValueError                      Traceback (most recent call last)
<ipython-input-207-d32bf179b3e2> in <module>()
----> 1 ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', data=monitor_df, palette="Reds", ci = None)
      2 plt.xlabel('Subject')
      3 plt.ylabel('PM accuracy')
      4 sea.despine()

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in barplot(x, y, hue, data, order, hue_order, estimator, ci, n_boot, units, orient, color, palette, saturation, errcolor, errwidth, capsize, dodge, ax, **kwargs)
   2957                           estimator, ci, n_boot, units,
   2958                           orient, color, palette, saturation,
-> 2959                           errcolor, errwidth, capsize, dodge)
   2960 
   2961     if ax is None:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in __init__(self, x, y, hue, data, order, hue_order, estimator, ci, n_boot, units, orient, color, palette, saturation, errcolor, errwidth, capsize, dodge)
   1594         """Initialize the plotter."""
   1595         self.establish_variables(x, y, hue, data, orient,
-> 1596                                  order, hue_order, units)
   1597         self.establish_colors(color, palette, saturation)
   1598         self.estimate_statistic(estimator, ci, n_boot)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/seaborn/categorical.pyc in establish_variables(self, x, y, hue, data, orient, order, hue_order, units)
    149                 if isinstance(input, string_types):
    150                     err = "Could not interpret input '{}'".format(input)
--> 151                     raise ValueError(err)
    152 
    153             # Figure out the plotting orientation

ValueError: Could not interpret input 'pm_acc'

In [208]: block5_df['block'] = 5
     ...: 
     ...: monitor_df = pd.concat([block4_df, block5_df], axis=0)
     ...: monitor_df.columns = ['subj', 'pm_acc', 'meanTrial_rt',
     ...:  'block']
     ...: 
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue =
     ...:  'block', data=monitor_df, palette = "Reds", cut = 0)
     ...: # Cut = 0 so range is limited to observed data
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'monitor_compare_rt.png', dpi
     ...:  = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=monitor_df, palette="Reds", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 


In [209]: plt.close()

In [210]: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=mnm_df, palette="Purples", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [211]: block6_df
Out[211]: 
     subj  acc         0  block
186   s01  0.0  0.843605      6
187   s01  0.0  1.012094      6
188   s01  1.0  1.180540      6
189   s01  0.0  1.103117      6
190   s01  0.0  1.184456      6
191   s01  0.0  1.361532      6
192   s01  0.0  1.167834      6
193   s01  0.0  1.165703      6
194   s01  0.0  1.080093      6
195   s01  0.0  1.306927      6
196   s01  1.0  1.011605      6
197   s01  0.0  1.199141      6
198   s01  0.0  1.188738      6
199   s01  0.0  0.911599      6
200   s01  1.0  1.143573      6
201   s01  0.0       NaN      6
202   s01  1.0  0.999664      6
203   s01  0.0  0.930375      6
204   s01  0.0  1.105499      6
205   s01  1.0  1.095382      6
518   s02  1.0  0.999906      6
519   s02  1.0  1.453463      6
520   s02  1.0  1.255998      6
521   s02  1.0  1.107319      6
522   s02  0.0  1.289733      6
523   s02  1.0  1.503477      6
524   s02  0.0  1.519779      6
525   s02  1.0  1.465725      6
526   s02  0.0  1.472499      6
527   s02  0.0  1.192174      6
...   ...  ...       ...    ...
860   s03  1.0  1.244506      6
861   s03  0.0  1.572898      6
862   s03  1.0  1.322333      6
863   s03  0.0  1.303770      6
864   s03  0.0  1.417719      6
865   s03  1.0  1.364231      6
866   s03  1.0  1.243047      6
867   s03  0.0  1.428949      6
868   s03  0.0  1.154377      6
869   s03  0.0  1.536411      6
1182  s04  0.0  1.256491      6
1183  s04  1.0  1.251832      6
1184  s04  0.0  1.055460      6
1185  s04  1.0  1.001973      6
1186  s04  1.0  0.844508      6
1187  s04  1.0  1.007143      6
1188  s04  1.0  0.825853      6
1189  s04  1.0  1.204178      6
1190  s04  0.0  0.992219      6
1191  s04  1.0  1.104424      6
1192  s04  0.0  0.971075      6
1193  s04  1.0  1.212087      6
1194  s04  1.0  0.881493      6
1195  s04  0.0  1.071689      6
1196  s04  0.0  1.133597      6
1197  s04  1.0  1.030805      6
1198  s04  0.0  1.093050      6
1199  s04  0.0  0.773110      6
1200  s04  1.0  1.042972      6
1201  s04  0.0  0.638496      6

[80 rows x 4 columns]

In [212]: block6_df['acc'].mean()
Out[212]: 0.3875

In [213]: block7_df['acc'].mean()
Out[213]: 0.2875

In [214]: block8_df['acc'].mean()
Out[214]: 0.9245283018867925

In [215]: block4_df['acc'].mean()
Out[215]: 0.625

In [216]: block5_df['acc'].mean()
Out[216]: 0.725

In [217]: block3_df['acc'].mean()
Out[217]: 0.775

In [218]: block2_df['acc'].mean()
Out[218]: 0.4875

In [219]: allTogether_df['acc']
-----------------------------------------------------------------
KeyError                        Traceback (most recent call last)
<ipython-input-219-244b00d4ecbe> in <module>()
----> 1 allTogether_df['acc']

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in __getitem__(self, key)
   2137             return self._getitem_multilevel(key)
   2138         else:
-> 2139             return self._getitem_column(key)
   2140 
   2141     def _getitem_column(self, key):

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/frame.pyc in _getitem_column(self, key)
   2144         # get column
   2145         if self.columns.is_unique:
-> 2146             return self._get_item_cache(key)
   2147 
   2148         # duplicate columns & possible reduce dimensionality

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in _get_item_cache(self, item)
   1840         res = cache.get(item)
   1841         if res is None:
-> 1842             values = self._data.get(item)
   1843             res = self._box_item_values(item, values)
   1844             cache[item] = res

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in get(self, item, fastpath)
   3841 
   3842             if not isna(item):
-> 3843                 loc = self.items.get_loc(item)
   3844             else:
   3845                 indexer = np.arange(len(self.items))[isna(self.items)]

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/indexes/base.pyc in get_loc(self, key, method, tolerance)
   2525                 return self._engine.get_loc(key)
   2526             except KeyError:
-> 2527                 return self._engine.get_loc(self._maybe_cast_indexer(key))
   2528 
   2529         indexer = self.get_indexer([key], method=method, tolerance=tolerance)

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: 'acc'

In [220]: allTogether_df['pm_acc']
Out[220]: 
0       NaN
1       1.0
2       1.0
3       1.0
4       1.0
5       1.0
6       1.0
7       1.0
8       1.0
9       1.0
10      1.0
11      1.0
12      1.0
13      1.0
14      1.0
15      1.0
16      1.0
17      1.0
18      1.0
19      0.0
20      1.0
21      1.0
22      1.0
23      1.0
24      1.0
25      1.0
26      1.0
27      1.0
28      1.0
29      1.0
       ... 
1298    1.0
1299    1.0
1300    1.0
1301    1.0
1302    1.0
1303    0.0
1304    1.0
1305    1.0
1306    1.0
1307    1.0
1308    1.0
1309    1.0
1310    1.0
1311    1.0
1312    1.0
1313    1.0
1314    1.0
1315    1.0
1316    1.0
1317    1.0
1318    1.0
1319    1.0
1320    1.0
1321    1.0
1322    1.0
1323    1.0
1324    1.0
1325    1.0
1326    1.0
1327    1.0
Name: pm_acc, Length: 1328, dtype: float64

In [221]: allTogether_df['pm_acc'].mean()
Out[221]: 0.7938066465256798

In [222]: plt.close()

In [223]: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=all_df, palette="Purples", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [224]: plt.close()

In [225]: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=all_df, palette=my_pal, ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [226]: plt.legend(title = 'Blocks',  
     ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
Out[226]: <matplotlib.legend.Legend at 0x1a1a3952d0>

In [227]: plt.close()

In [228]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [229]: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_bysubj_compare_pmacc.png
     ...: ', dpi = 600)
     ...: plt.close()

















































































































































































































































































^C^C-----------------------------------------------------------------
KeyboardInterrupt               Traceback (most recent call last)
<ipython-input-229-1b4c43cb756c> in <module>()
    272 	bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
    273 sea.despine()
--> 274 plt.savefig(FIGURE_PATH + 'mnm_bysubj_compare_pmacc.png', dpi = 600)
    275 plt.close()
    276 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.pyc in savefig(*args, **kwargs)
    699 def savefig(*args, **kwargs):
    700     fig = gcf()
--> 701     res = fig.savefig(*args, **kwargs)
    702     fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors
    703     return res

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/figure.pyc in savefig(self, fname, **kwargs)
   1832             self.set_frameon(frameon)
   1833 
-> 1834         self.canvas.print_figure(fname, **kwargs)
   1835 
   1836         if frameon:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/backend_bases.pyc in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, **kwargs)
   2265                 orientation=orientation,
   2266                 bbox_inches_restore=_bbox_inches_restore,
-> 2267                 **kwargs)
   2268         finally:
   2269             if bbox_inches and restore_bbox:

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/backends/backend_agg.pyc in print_png(self, filename_or_obj, *args, **kwargs)
    524         try:
    525             _png.write_png(renderer._renderer, filename_or_obj,
--> 526                            self.figure.dpi, metadata=metadata)
    527         finally:
    528             if close:

KeyboardInterrupt: 

In [230]: ^Ielse:
     ...: ^I^Iprint
     ...: ^I^Idf_main.loc[trial, 'acc'] = 0
     ...: 
     ...: 
     ...: #Replace rt with nan if probe resp was incorrect 
     ...: for i in df_main.index: 
     ...: ^Ifor probe in range(0,15): 
     ...: ^I^Iif df_main.loc[i, 'probe{:d}_acc'.format(probe)] ==
     ...:  0: 
     ...: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: #Master list of all rt probe titles
     ...: rtProbes = []
     ...: for rt in range(0,14): #get rid of probe14 bc you'll ne
     ...: ver look at it 
     ...: ^IrtProbes.append('rtProbe{:d}'.format(rt))
     ...: 
     ...: accCols = []
     ...: for acc in range(0,15): #get rid of probe14 bc you'll n
     ...: ever look at it 
     ...: ^IaccCols.append('probe{:d}_acc'.format(acc))


















































































































































































































































































In [231]: 

In [231]: monitor_df.columns = ['subj', 'pm_acc', 'meanTrial_rt',
     ...:  'block']
     ...: 
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue =
     ...:  'block', data=monitor_df, palette = "Reds", cut = 0)
     ...: # Cut = 0 so range is limited to observed data
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'monitor_compare_rt.png', dpi
     ...:  = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=monitor_df, palette="Reds", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'monitor_compare_pmacc.png', 
     ...: dpi = 600)
     ...: plt.close()
     ...: 
     ...: 


In [232]: 

In [232]: 
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue =
     ...:  'block', data=mnm_df, palette = "Purples", cut = 0)
     ...: # Cut = 0 so range is limited to observed data
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare_rt.png', dpi = 6
     ...: 00)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=mnm_df, palette="Purples", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare_pmacc.png', dpi 
     ...: = 600)
     ...: plt.close()
     ...: 
     ...: 
     ...: 



In [233]: 

In [233]: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'allTogether_compare.png', dp
     ...: i = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_bysubj_compare_pmacc.png
     ...: ', dpi = 600)
     ...: plt.close()
     ...: 
     ...: 
     ...: 


In [234]: 

In [234]: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_rt.png'
     ...: , dpi = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_bysubj_compare_pmacc.png
     ...: ', dpi = 600)
     ...: plt.close()

In [235]: mnm_df.columns = ['subj', 'pm_acc', 'meanTrial_rt', 'bl
     ...: ock']
     ...: 
     ...: ax = sea.violinplot(x='subj', y = 'meanTrial_rt', hue =
     ...:  'block', data=mnm_df, palette = "Purples", cut = 0)
     ...: # Cut = 0 so range is limited to observed data
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare_rt.png', dpi = 6
     ...: 00)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='subj', y= 'pm_acc', hue= 'block', d
     ...: ata=mnm_df, palette="Purples", ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare_pmacc.png', dpi 
     ...: = 600)
     ...: plt.close()
     ...: 
     ...: 

In [236]: 

In [236]: ^I^I^Idf_main.at[i, 'rtProbe{:d}'.format(probe)] = np.n
     ...: an
     ...: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_rt.png'
     ...: , dpi = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.p
     ...: ng', dpi = 600)
     ...: plt.close()


In [237]: 

In [237]: 
     ...: 
     ...: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_rt.png'
     ...: , dpi = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.p
     ...: ng', dpi = 600)
     ...: plt.close()
     ...: 
     ...: 


















































































































































































































































































In [238]: 

In [238]: plt.close()

In [239]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: ax.set_axis(['Baseline', 'Maintain', 'Maintain', 'Monit
     ...: or', 'Monitor', 'M&M', 'M&M', 'Baseline'])
     ...: sea.despine()
     ...: 
-----------------------------------------------------------------
AttributeError                  Traceback (most recent call last)
<ipython-input-239-b0b2b808be22> in <module>()
      2 plt.xlabel('Block')
      3 plt.ylabel('PM accuracy')
----> 4 ax.set_axis(['Baseline', 'Maintain', 'Maintain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline'])
      5 sea.despine()

AttributeError: 'AxesSubplot' object has no attribute 'set_axis'

In [240]: ax.set_xaxis(['Baseline', 'Maintain', 'Maintain', 'Moni
     ...: tor', 'Monitor', 'M&M', 'M&M', 'Baseline'])
     ...: 
-----------------------------------------------------------------
AttributeError                  Traceback (most recent call last)
<ipython-input-240-8005880c9acb> in <module>()
----> 1 ax.set_xaxis(['Baseline', 'Maintain', 'Maintain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline'])

AttributeError: 'AxesSubplot' object has no attribute 'set_xaxis'

In [241]: 

In [241]: ax.set_xticks(['Baseline', 'Maintain', 'Maintain', 'Mon
     ...: itor', 'Monitor', 'M&M', 'M&M', 'Baseline'])
     ...: 
-----------------------------------------------------------------
AttributeError                  Traceback (most recent call last)
<ipython-input-241-47b6e4496ecf> in <module>()
----> 1 ax.set_xticks(['Baseline', 'Maintain', 'Maintain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline'])

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axes/_base.pyc in set_xticks(self, ticks, minor)
   3045             Default is ``False``.
   3046         """
-> 3047         ret = self.xaxis.set_ticks(ticks, minor=minor)
   3048         self.stale = True
   3049         return ret

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axis.pyc in set_ticks(self, ticks, minor)
   1641         """
   1642         # XXX if the user changes units, the information will be lost here
-> 1643         ticks = self.convert_units(ticks)
   1644         if len(ticks) > 1:
   1645             xleft, xright = self.get_view_interval()

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/axis.pyc in convert_units(self, x)
   1489             return x
   1490 
-> 1491         ret = self.converter.convert(x, self.units, self)
   1492         return ret
   1493 

/Users/krh2382/anaconda2/lib/python2.7/site-packages/matplotlib/category.pyc in convert(value, unit, axis)
     47                 if isinstance(val, six.string_types):
     48                     axis.unit_data.update(val)
---> 49         vmap = dict(zip(axis.unit_data.seq, axis.unit_data.locs))
     50 
     51         if isinstance(value, six.string_types):

AttributeError: 'NoneType' object has no attribute 'seq'

In [242]: ax.get_xaxis().set_xticks(['Baseline', 'Maintain', 'Mai
     ...: ntain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline']
     ...: )
     ...: 
-----------------------------------------------------------------
AttributeError                  Traceback (most recent call last)
<ipython-input-242-63ea109a0ad1> in <module>()
----> 1 ax.get_xaxis().set_xticks(['Baseline', 'Maintain', 'Maintain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline'])

AttributeError: 'XAxis' object has no attribute 'set_xticks'

In [243]: ax.get_xaxis()
Out[243]: <matplotlib.axis.XAxis at 0x1a1bbc0750>

In [244]: block6 = df_main[(df_main['block'] == 'M&M 1')]
     ...: block7 = df_main[(df_main['block'] == 'M&M 2')]
     ...: 
/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/ops.py:816: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  result = getattr(x, name)(y)
-----------------------------------------------------------------
TypeError                       Traceback (most recent call last)
<ipython-input-244-b67925e245ec> in <module>()
----> 1 block6 = df_main[(df_main['block'] == 'M&M 1')]
      2 block7 = df_main[(df_main['block'] == 'M&M 2')]

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/ops.pyc in wrapper(self, other, axis)
    877 
    878             with np.errstate(all='ignore'):
--> 879                 res = na_op(values, other)
    880             if is_scalar(res):
    881                 raise TypeError('Could not compare {typ} type with Series'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/ops.pyc in na_op(x, y)
    816                     result = getattr(x, name)(y)
    817                 if result is NotImplemented:
--> 818                     raise TypeError("invalid type comparison")
    819             except AttributeError:
    820                 result = op(x, y)

TypeError: invalid type comparison

In [245]: 
     ...: block6 = df_main[(df_main['block'] == str('M&M 1'))]
-----------------------------------------------------------------
TypeError                       Traceback (most recent call last)
<ipython-input-245-cb15b564a5a0> in <module>()
      1 
----> 2 block6 = df_main[(df_main['block'] == str('M&M 1'))]

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/ops.pyc in wrapper(self, other, axis)
    877 
    878             with np.errstate(all='ignore'):
--> 879                 res = na_op(values, other)
    880             if is_scalar(res):
    881                 raise TypeError('Could not compare {typ} type with Series'

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/ops.pyc in na_op(x, y)
    816                     result = getattr(x, name)(y)
    817                 if result is NotImplemented:
--> 818                     raise TypeError("invalid type comparison")
    819             except AttributeError:
    820                 result = op(x, y)

TypeError: invalid type comparison

In [246]: 

In [246]: block6_df['block'] = 'M&M 1'

In [247]: plt.close()

In [248]: allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_
     ...: rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data
     ...: =all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_rt.png'
     ...: , dpi = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: ax.get_xaxis().set_xticks(['Baseline', 'Maintain', 'Mai
     ...: ntain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline']
     ...: )
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.p
     ...: ng', dpi = 600)
     ...: plt.close()
     ...: 

















































































































































































































































































-----------------------------------------------------------------
AttributeError                  Traceback (most recent call last)
<ipython-input-248-4591c727d1fa> in <module>()
    297 plt.xlabel('Block')
    298 plt.ylabel('PM accuracy')
--> 299 ax.get_xaxis().set_xticks(['Baseline', 'Maintain', 'Maintain', 'Monitor', 'Monitor', 'M&M', 'M&M', 'Baseline'])
    300 sea.despine()
    301 plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.png', dpi = 600)

AttributeError: 'XAxis' object has no attribute 'set_xticks'

In [249]: 

In [249]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [250]: plt.close()

In [251]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: 

In [252]: plt.close()

In [253]: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.p
     ...: ng', dpi = 600)
     ...: plt.close()
     ...: 

In [254]: plt.close()

In [255]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.set_context(font_scale = 1)
     ...: sea.despine()
     ...: 

In [256]: plt.close()

In [257]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.set_context(font_scale = 0.75)
     ...: sea.despine()
     ...: 

In [258]: plt.close()

In [259]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: sea.set_context(font_scale = 0.5)
     ...: sea.despine()
     ...: 

In [260]: plt.close9)
  File "<ipython-input-260-66bbe953910e>", line 1
    plt.close9)
              ^
SyntaxError: invalid syntax


In [261]: plt.close()

In [262]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: #sea.set_context(font_scale = 0.5)
     ...: ax.tick_params(axis='x', labelsize=10)
     ...: sea.despine()
     ...: 

In [263]: plt.close()

In [264]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: #sea.set_context(font_scale = 0.5)
     ...: ax.tick_params(axis='x', labelsize=5)
     ...: sea.despine()
     ...: 

In [265]: plt.close()

In [266]: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, p
     ...: alette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: #sea.set_context(font_scale = 0.5)
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: 

In [267]: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: #sea.set_context(font_scale = 0.5)
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.p
     ...: ng', dpi = 600)
     ...: plt.close()
     ...: 
     ...: 
     ...: 
     ...: 
     ...: #####################################
     ...: ############  Figures  ##############
     ...: #####################################
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 
     ...: 


In [268]: 

In [268]: block1_df
Out[268]: 
     subj  acc         0       block
0     s01  NaN       NaN  Baseline 1
1     s01  1.0  0.740545  Baseline 1
2     s01  1.0  0.645820  Baseline 1
3     s01  1.0  0.478978  Baseline 1
4     s01  1.0  0.942406  Baseline 1
5     s01  1.0  0.857848  Baseline 1
6     s01  1.0  0.820647  Baseline 1
7     s01  1.0  0.678682  Baseline 1
8     s01  1.0  0.736166  Baseline 1
9     s01  1.0  0.562488  Baseline 1
10    s01  1.0  0.547181  Baseline 1
11    s01  1.0  0.651102  Baseline 1
12    s01  1.0  0.973096  Baseline 1
13    s01  1.0  0.664126  Baseline 1
14    s01  1.0  0.800906  Baseline 1
15    s01  1.0  1.090712  Baseline 1
16    s01  1.0  0.671739  Baseline 1
17    s01  1.0  0.928950  Baseline 1
18    s01  1.0  0.668482  Baseline 1
19    s01  0.0       NaN  Baseline 1
20    s01  1.0  1.016827  Baseline 1
21    s01  1.0  0.644921  Baseline 1
22    s01  1.0  0.853739  Baseline 1
23    s01  1.0  1.024423  Baseline 1
24    s01  1.0  0.612399  Baseline 1
25    s01  1.0  0.693226  Baseline 1
26    s01  1.0  1.166701  Baseline 1
27    s01  1.0  1.053213  Baseline 1
28    s01  1.0  1.266171  Baseline 1
29    s01  1.0  0.953054  Baseline 1
...   ...  ...       ...         ...
1072  s04  1.0  0.763318  Baseline 1
1073  s04  1.0  0.548060  Baseline 1
1074  s04  1.0  1.122578  Baseline 1
1075  s04  1.0  0.519714  Baseline 1
1076  s04  1.0  0.646362  Baseline 1
1077  s04  1.0  0.510455  Baseline 1
1078  s04  1.0  0.541207  Baseline 1
1079  s04  1.0  0.635570  Baseline 1
1080  s04  1.0  0.636090  Baseline 1
1081  s04  1.0  0.796140  Baseline 1
1082  s04  1.0  0.629582  Baseline 1
1083  s04  1.0  0.557628  Baseline 1
1084  s04  1.0  0.676330  Baseline 1
1085  s04  1.0  0.956633  Baseline 1
1086  s04  1.0  0.711121  Baseline 1
1087  s04  1.0  0.807502  Baseline 1
1088  s04  1.0  0.641067  Baseline 1
1089  s04  1.0  0.561135  Baseline 1
1090  s04  1.0  0.776435  Baseline 1
1091  s04  1.0  0.553930  Baseline 1
1092  s04  1.0  0.616908  Baseline 1
1093  s04  1.0  0.593337  Baseline 1
1094  s04  1.0  0.536614  Baseline 1
1095  s04  1.0  0.567889  Baseline 1
1096  s04  1.0  0.695524  Baseline 1
1097  s04  1.0  0.599858  Baseline 1
1098  s04  1.0  0.534956  Baseline 1
1099  s04  1.0  0.597388  Baseline 1
1100  s04  1.0  0.485272  Baseline 1
1101  s04  1.0  0.571674  Baseline 1

[424 rows x 4 columns]

In [269]: pd.concat([ block1['subj'], block1['acc'], block1[rtPro
     ...: bes].mean(axis=1)], axis=1)
Out[269]: 
     subj  acc         0
0     s01  NaN       NaN
1     s01  1.0  0.740545
2     s01  1.0  0.645820
3     s01  1.0  0.478978
4     s01  1.0  0.942406
5     s01  1.0  0.857848
6     s01  1.0  0.820647
7     s01  1.0  0.678682
8     s01  1.0  0.736166
9     s01  1.0  0.562488
10    s01  1.0  0.547181
11    s01  1.0  0.651102
12    s01  1.0  0.973096
13    s01  1.0  0.664126
14    s01  1.0  0.800906
15    s01  1.0  1.090712
16    s01  1.0  0.671739
17    s01  1.0  0.928950
18    s01  1.0  0.668482
19    s01  0.0       NaN
20    s01  1.0  1.016827
21    s01  1.0  0.644921
22    s01  1.0  0.853739
23    s01  1.0  1.024423
24    s01  1.0  0.612399
25    s01  1.0  0.693226
26    s01  1.0  1.166701
27    s01  1.0  1.053213
28    s01  1.0  1.266171
29    s01  1.0  0.953054
...   ...  ...       ...
1072  s04  1.0  0.763318
1073  s04  1.0  0.548060
1074  s04  1.0  1.122578
1075  s04  1.0  0.519714
1076  s04  1.0  0.646362
1077  s04  1.0  0.510455
1078  s04  1.0  0.541207
1079  s04  1.0  0.635570
1080  s04  1.0  0.636090
1081  s04  1.0  0.796140
1082  s04  1.0  0.629582
1083  s04  1.0  0.557628
1084  s04  1.0  0.676330
1085  s04  1.0  0.956633
1086  s04  1.0  0.711121
1087  s04  1.0  0.807502
1088  s04  1.0  0.641067
1089  s04  1.0  0.561135
1090  s04  1.0  0.776435
1091  s04  1.0  0.553930
1092  s04  1.0  0.616908
1093  s04  1.0  0.593337
1094  s04  1.0  0.536614
1095  s04  1.0  0.567889
1096  s04  1.0  0.695524
1097  s04  1.0  0.599858
1098  s04  1.0  0.534956
1099  s04  1.0  0.597388
1100  s04  1.0  0.485272
1101  s04  1.0  0.571674

[424 rows x 3 columns]

In [270]: pd.concat([ block1['subj'], block1['acc'], block1[rtProbes].mean(axis=1)], block1[accCols].me
     ...: an(axis=1)], axis=1, )
  File "<ipython-input-270-483d994e74f4>", line 1
    pd.concat([ block1['subj'], block1['acc'], block1[rtProbes].mean(axis=1)], block1[accCols].mean(axis=1)], axis=1, )
                                                                                                           ^
SyntaxError: invalid syntax


In [271]: block1[accCols].mean()
Out[271]: 
probe0_acc     0.954217
probe1_acc          NaN
probe2_acc          NaN
probe3_acc          NaN
probe4_acc          NaN
probe5_acc          NaN
probe6_acc          NaN
probe7_acc          NaN
probe8_acc          NaN
probe9_acc          NaN
probe10_acc         NaN
probe11_acc         NaN
probe12_acc         NaN
probe13_acc         NaN
probe14_acc         NaN
dtype: float64

In [272]: block1[rtProbes].mean()
Out[272]: 
rtProbe0     0.74485
rtProbe1         NaN
rtProbe2         NaN
rtProbe3         NaN
rtProbe4         NaN
rtProbe5         NaN
rtProbe6         NaN
rtProbe7         NaN
rtProbe8         NaN
rtProbe9         NaN
rtProbe10        NaN
rtProbe11        NaN
rtProbe12        NaN
rtProbe13        NaN
dtype: float64

In [273]: block1[rtProbes].mean(axis=1)
Out[273]: 
0            NaN
1       0.740545
2       0.645820
3       0.478978
4       0.942406
5       0.857848
6       0.820647
7       0.678682
8       0.736166
9       0.562488
10      0.547181
11      0.651102
12      0.973096
13      0.664126
14      0.800906
15      1.090712
16      0.671739
17      0.928950
18      0.668482
19           NaN
20      1.016827
21      0.644921
22      0.853739
23      1.024423
24      0.612399
25      0.693226
26      1.166701
27      1.053213
28      1.266171
29      0.953054
          ...   
1072    0.763318
1073    0.548060
1074    1.122578
1075    0.519714
1076    0.646362
1077    0.510455
1078    0.541207
1079    0.635570
1080    0.636090
1081    0.796140
1082    0.629582
1083    0.557628
1084    0.676330
1085    0.956633
1086    0.711121
1087    0.807502
1088    0.641067
1089    0.561135
1090    0.776435
1091    0.553930
1092    0.616908
1093    0.593337
1094    0.536614
1095    0.567889
1096    0.695524
1097    0.599858
1098    0.534956
1099    0.597388
1100    0.485272
1101    0.571674
Length: 424, dtype: float64

In [274]: block1[accProbes].mean(axis=1)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-274-57b28fbc55b2> in <module>()
----> 1 block1[accProbes].mean(axis=1)

NameError: name 'accProbes' is not defined

In [275]: block1[accCols].mean(axis=1)
Out[275]: 
0       NaN
1       1.0
2       1.0
3       1.0
4       1.0
5       1.0
6       1.0
7       1.0
8       1.0
9       1.0
10      1.0
11      1.0
12      1.0
13      1.0
14      1.0
15      1.0
16      1.0
17      1.0
18      1.0
19      0.0
20      1.0
21      1.0
22      1.0
23      1.0
24      1.0
25      1.0
26      1.0
27      1.0
28      1.0
29      1.0
       ... 
1072    1.0
1073    1.0
1074    1.0
1075    1.0
1076    1.0
1077    1.0
1078    1.0
1079    1.0
1080    1.0
1081    1.0
1082    1.0
1083    1.0
1084    1.0
1085    1.0
1086    1.0
1087    1.0
1088    1.0
1089    1.0
1090    1.0
1091    1.0
1092    1.0
1093    1.0
1094    1.0
1095    1.0
1096    1.0
1097    1.0
1098    1.0
1099    1.0
1100    1.0
1101    1.0
Length: 424, dtype: float64

In [276]: block2[accCols].mean(axis=1)
Out[276]: 
106     0.857143
107     1.000000
108     1.000000
109     0.909091
110     0.769231
111     0.916667
112     0.833333
113     0.900000
114     0.777778
115          NaN
116          NaN
117     0.916667
118     0.900000
119     0.818182
120     0.875000
121     0.833333
122     1.000000
123     0.923077
124     0.666667
125     0.866667
438     0.733333
439     0.888889
440     1.000000
441     0.636364
442     0.785714
443     0.857143
444     0.888889
445     0.777778
446     1.000000
447     0.928571
          ...   
780     0.916667
781     0.933333
782     0.888889
783     0.923077
784     0.916667
785     0.777778
786     1.000000
787     0.909091
788     1.000000
789     1.000000
1102    0.923077
1103    0.866667
1104    1.000000
1105    1.000000
1106    1.000000
1107    0.714286
1108    1.000000
1109    1.000000
1110    0.888889
1111    0.928571
1112    1.000000
1113    1.000000
1114    0.857143
1115    0.875000
1116    1.000000
1117    0.800000
1118    0.909091
1119    1.000000
1120    1.000000
1121    1.000000
Length: 80, dtype: float64

In [277]: block2[accCols].mean(axis=1).mean()
Out[277]: 0.8932541105618024

In [278]: block2[accCols]
Out[278]: 
      probe0_acc  probe1_acc  probe2_acc  probe3_acc  probe4_acc  probe5_acc  \
106          1.0         1.0         1.0         1.0         1.0         1.0   
107          1.0         1.0         1.0         NaN         NaN         NaN   
108          1.0         1.0         1.0         1.0         1.0         1.0   
109          1.0         1.0         1.0         1.0         1.0         1.0   
110          1.0         1.0         1.0         1.0         1.0         0.0   
111          1.0         1.0         1.0         0.0         1.0         1.0   
112          1.0         1.0         1.0         1.0         1.0         0.0   
113          1.0         1.0         1.0         1.0         1.0         1.0   
114          1.0         1.0         1.0         0.0         1.0         1.0   
115          NaN         NaN         NaN         NaN         NaN         NaN   
116          NaN         NaN         NaN         NaN         NaN         NaN   
117          NaN         NaN         1.0         0.0         1.0         1.0   
118          1.0         1.0         1.0         1.0         1.0         1.0   
119          1.0         0.0         1.0         1.0         1.0         1.0   
120          1.0         1.0         1.0         1.0         1.0         NaN   
121          NaN         0.0         1.0         1.0         1.0         1.0   
122          1.0         1.0         1.0         1.0         1.0         1.0   
123          1.0         1.0         1.0         1.0         0.0         1.0   
124          1.0         1.0         0.0         1.0         1.0         0.0   
125          1.0         1.0         1.0         1.0         1.0         1.0   
438          1.0         1.0         1.0         1.0         1.0         0.0   
439          NaN         1.0         1.0         1.0         1.0         1.0   
440          1.0         1.0         1.0         1.0         1.0         1.0   
441          1.0         0.0         1.0         1.0         1.0         1.0   
442          0.0         1.0         1.0         1.0         0.0         1.0   
443          1.0         1.0         1.0         NaN         NaN         1.0   
444          1.0         0.0         1.0         1.0         1.0         1.0   
445          1.0         1.0         1.0         1.0         1.0         1.0   
446          1.0         1.0         1.0         1.0         1.0         1.0   
447          1.0         1.0         1.0         1.0         1.0         1.0   
...          ...         ...         ...         ...         ...         ...   
780          1.0         1.0         1.0         1.0         1.0         1.0   
781          1.0         0.0         1.0         1.0         1.0         1.0   
782          1.0         1.0         1.0         1.0         1.0         1.0   
783          1.0         1.0         1.0         1.0         1.0         0.0   
784          1.0         1.0         1.0         1.0         1.0         1.0   
785          0.0         1.0         0.0         1.0         1.0         1.0   
786          1.0         1.0         1.0         1.0         1.0         NaN   
787          1.0         1.0         1.0         1.0         1.0         0.0   
788          1.0         1.0         1.0         1.0         1.0         1.0   
789          1.0         1.0         1.0         1.0         1.0         1.0   
1102         1.0         1.0         1.0         1.0         1.0         1.0   
1103         1.0         0.0         1.0         1.0         1.0         1.0   
1104         1.0         1.0         1.0         1.0         NaN         NaN   
1105         1.0         1.0         NaN         NaN         NaN         NaN   
1106         1.0         1.0         1.0         1.0         1.0         1.0   
1107         0.0         1.0         1.0         1.0         1.0         1.0   
1108         1.0         1.0         1.0         1.0         1.0         1.0   
1109         1.0         1.0         1.0         1.0         1.0         1.0   
1110         1.0         1.0         1.0         1.0         1.0         1.0   
1111         1.0         1.0         1.0         1.0         1.0         1.0   
1112         1.0         1.0         1.0         1.0         1.0         1.0   
1113         1.0         1.0         1.0         1.0         1.0         1.0   
1114         0.0         1.0         1.0         1.0         1.0         1.0   
1115         1.0         1.0         0.0         1.0         1.0         1.0   
1116         1.0         1.0         1.0         1.0         1.0         1.0   
1117         1.0         1.0         1.0         1.0         1.0         1.0   
1118         1.0         0.0         1.0         1.0         1.0         1.0   
1119         1.0         1.0         1.0         1.0         1.0         1.0   
1120         1.0         1.0         1.0         1.0         1.0         1.0   
1121         1.0         1.0         1.0         1.0         1.0         1.0   

      probe6_acc  probe7_acc  probe8_acc  probe9_acc  probe10_acc  \
106          1.0         1.0         1.0         1.0          1.0   
107          NaN         NaN         NaN         NaN          NaN   
108          1.0         NaN         NaN         NaN          NaN   
109          1.0         1.0         1.0         1.0          0.0   
110          1.0         1.0         1.0         1.0          0.0   
111          1.0         1.0         1.0         1.0          1.0   
112          1.0         1.0         1.0         1.0          1.0   
113          0.0         1.0         1.0         1.0          NaN   
114          1.0         1.0         0.0         NaN          NaN   
115          NaN         NaN         NaN         NaN          NaN   
116          NaN         NaN         NaN         NaN          NaN   
117          1.0         1.0         1.0         1.0          1.0   
118          1.0         1.0         1.0         0.0          NaN   
119          1.0         1.0         0.0         1.0          1.0   
120          1.0         1.0         0.0         NaN          NaN   
121          1.0         NaN         NaN         NaN          NaN   
122          1.0         1.0         1.0         1.0          1.0   
123          1.0         1.0         1.0         1.0          1.0   
124          NaN         NaN         NaN         NaN          NaN   
125          1.0         1.0         1.0         1.0          1.0   
438          1.0         1.0         0.0         0.0          1.0   
439          1.0         0.0         1.0         1.0          NaN   
440          NaN         1.0         1.0         NaN          NaN   
441          0.0         0.0         1.0         1.0          0.0   
442          0.0         1.0         1.0         1.0          1.0   
443          1.0         0.0         1.0         NaN          NaN   
444          1.0         1.0         1.0         NaN          NaN   
445          0.0         1.0         0.0         NaN          NaN   
446          1.0         1.0         1.0         1.0          1.0   
447          1.0         0.0         1.0         1.0          1.0   
...          ...         ...         ...         ...          ...   
780          1.0         1.0         0.0         1.0          1.0   
781          1.0         1.0         1.0         1.0          1.0   
782          1.0         1.0         0.0         NaN          NaN   
783          1.0         1.0         1.0         1.0          1.0   
784          1.0         1.0         1.0         1.0          1.0   
785          1.0         1.0         1.0         NaN          NaN   
786          NaN         NaN         NaN         NaN          NaN   
787          1.0         1.0         1.0         1.0          1.0   
788          1.0         1.0         1.0         1.0          NaN   
789          1.0         1.0         1.0         1.0          1.0   
1102         1.0         1.0         1.0         1.0          1.0   
1103         1.0         1.0         1.0         1.0          1.0   
1104         NaN         NaN         NaN         NaN          NaN   
1105         NaN         NaN         NaN         NaN          NaN   
1106         1.0         1.0         1.0         1.0          1.0   
1107         0.0         NaN         NaN         NaN          NaN   
1108         1.0         1.0         1.0         1.0          1.0   
1109         1.0         1.0         1.0         1.0          1.0   
1110         1.0         1.0         0.0         NaN          NaN   
1111         1.0         1.0         1.0         1.0          1.0   
1112         1.0         1.0         1.0         1.0          1.0   
1113         1.0         1.0         NaN         NaN          NaN   
1114         1.0         1.0         1.0         1.0          1.0   
1115         1.0         1.0         NaN         NaN          NaN   
1116         NaN         NaN         NaN         NaN          NaN   
1117         1.0         1.0         0.0         0.0          NaN   
1118         1.0         1.0         1.0         1.0          1.0   
1119         1.0         1.0         1.0         1.0          NaN   
1120         1.0         1.0         1.0         NaN          NaN   
1121         1.0         1.0         1.0         1.0          1.0   

      probe11_acc  probe12_acc  probe13_acc  probe14_acc  
106           0.0          1.0          0.0          NaN  
107           NaN          NaN          NaN          NaN  
108           NaN          NaN          NaN          NaN  
109           NaN          NaN          NaN          NaN  
110           1.0          0.0          NaN          NaN  
111           1.0          NaN          NaN          NaN  
112           0.0          NaN          NaN          NaN  
113           NaN          NaN          NaN          NaN  
114           NaN          NaN          NaN          NaN  
115           NaN          NaN          NaN          NaN  
116           NaN          NaN          NaN          NaN  
117           1.0          1.0          1.0          NaN  
118           NaN          NaN          NaN          NaN  
119           NaN          NaN          NaN          NaN  
120           NaN          NaN          NaN          NaN  
121           NaN          NaN          NaN          NaN  
122           1.0          1.0          1.0          NaN  
123           1.0          1.0          NaN          NaN  
124           NaN          NaN          NaN          NaN  
125           1.0          1.0          0.0          0.0  
438           1.0          1.0          1.0          0.0  
439           NaN          NaN          NaN          NaN  
440           NaN          NaN          NaN          NaN  
441           NaN          NaN          NaN          NaN  
442           1.0          1.0          1.0          NaN  
443           NaN          NaN          NaN          NaN  
444           NaN          NaN          NaN          NaN  
445           NaN          NaN          NaN          NaN  
446           1.0          NaN          NaN          NaN  
447           1.0          1.0          1.0          NaN  
...           ...          ...          ...          ...  
780           1.0          NaN          NaN          NaN  
781           1.0          1.0          1.0          1.0  
782           NaN          NaN          NaN          NaN  
783           1.0          1.0          NaN          NaN  
784           0.0          NaN          NaN          NaN  
785           NaN          NaN          NaN          NaN  
786           NaN          NaN          NaN          NaN  
787           NaN          NaN          NaN          NaN  
788           NaN          NaN          NaN          NaN  
789           1.0          1.0          NaN          NaN  
1102          1.0          0.0          NaN          NaN  
1103          1.0          1.0          1.0          0.0  
1104          NaN          NaN          NaN          NaN  
1105          NaN          NaN          NaN          NaN  
1106          1.0          1.0          1.0          NaN  
1107          NaN          NaN          NaN          NaN  
1108          NaN          NaN          NaN          NaN  
1109          1.0          NaN          NaN          NaN  
1110          NaN          NaN          NaN          NaN  
1111          1.0          1.0          0.0          NaN  
1112          1.0          1.0          NaN          NaN  
1113          NaN          NaN          NaN          NaN  
1114          1.0          1.0          0.0          NaN  
1115          NaN          NaN          NaN          NaN  
1116          NaN          NaN          NaN          NaN  
1117          NaN          NaN          NaN          NaN  
1118          NaN          NaN          NaN          NaN  
1119          NaN          NaN          NaN          NaN  
1120          NaN          NaN          NaN          NaN  
1121          1.0          NaN          NaN          NaN  

[80 rows x 15 columns]

In [279]: block2[accCols].mean(axis=1).mean()
Out[279]: 0.8932541105618024

In [280]: block2[accCols].mean(axis=1).mean(axis=0)
Out[280]: 0.8932541105618024

In [281]: block2[accCols].mean(axis=1).mean(axis=1)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-281-23f2298e66af> in <module>()
----> 1 block2[accCols].mean(axis=1).mean(axis=1)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in stat_func(self, axis, skipna, level, numeric_only, **kwargs)
   7313                                       skipna=skipna)
   7314         return self._reduce(f, name, axis=axis, skipna=skipna,
-> 7315                             numeric_only=numeric_only)
   7316 
   7317     return set_function_name(stat_func, name, cls)

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/series.pyc in _reduce(self, op, name, axis, skipna, numeric_only, filter_type, **kwds)
   2570         if isinstance(delegate, np.ndarray):
   2571             # Validate that 'axis' is consistent with Series's single axis.
-> 2572             self._get_axis_number(axis)
   2573             if numeric_only:
   2574                 raise NotImplementedError('Series.{0} does not implement '

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc in _get_axis_number(self, axis)
    355                 pass
    356         raise ValueError('No axis named {0} for object type {1}'
--> 357                          .format(axis, type(self)))
    358 
    359     def _get_axis_name(self, axis):

ValueError: No axis named 1 for object type <class 'pandas.core.series.Series'>

In [282]: block2[accCols].mean(axis=1).mean()
Out[282]: 0.8932541105618024

In [283]: pd.concat([ block1['subj'], block1['acc'], block1[rtProbes].mean(axis=1), block1[accProbes].m
     ...: ean(axis=1)], axis=1)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-283-f089797e7794> in <module>()
----> 1 pd.concat([ block1['subj'], block1['acc'], block1[rtProbes].mean(axis=1), block1[accProbes].mean(axis=1)], axis=1)

NameError: name 'accProbes' is not defined

In [284]: pd.concat([ block1['subj'], block1['acc'], block1[rtProbes].mean(axis=1), block1[accCols].mea
     ...: n(axis=1)], axis=1)
Out[284]: 
     subj  acc         0    1
0     s01  NaN       NaN  NaN
1     s01  1.0  0.740545  1.0
2     s01  1.0  0.645820  1.0
3     s01  1.0  0.478978  1.0
4     s01  1.0  0.942406  1.0
5     s01  1.0  0.857848  1.0
6     s01  1.0  0.820647  1.0
7     s01  1.0  0.678682  1.0
8     s01  1.0  0.736166  1.0
9     s01  1.0  0.562488  1.0
10    s01  1.0  0.547181  1.0
11    s01  1.0  0.651102  1.0
12    s01  1.0  0.973096  1.0
13    s01  1.0  0.664126  1.0
14    s01  1.0  0.800906  1.0
15    s01  1.0  1.090712  1.0
16    s01  1.0  0.671739  1.0
17    s01  1.0  0.928950  1.0
18    s01  1.0  0.668482  1.0
19    s01  0.0       NaN  0.0
20    s01  1.0  1.016827  1.0
21    s01  1.0  0.644921  1.0
22    s01  1.0  0.853739  1.0
23    s01  1.0  1.024423  1.0
24    s01  1.0  0.612399  1.0
25    s01  1.0  0.693226  1.0
26    s01  1.0  1.166701  1.0
27    s01  1.0  1.053213  1.0
28    s01  1.0  1.266171  1.0
29    s01  1.0  0.953054  1.0
...   ...  ...       ...  ...
1072  s04  1.0  0.763318  1.0
1073  s04  1.0  0.548060  1.0
1074  s04  1.0  1.122578  1.0
1075  s04  1.0  0.519714  1.0
1076  s04  1.0  0.646362  1.0
1077  s04  1.0  0.510455  1.0
1078  s04  1.0  0.541207  1.0
1079  s04  1.0  0.635570  1.0
1080  s04  1.0  0.636090  1.0
1081  s04  1.0  0.796140  1.0
1082  s04  1.0  0.629582  1.0
1083  s04  1.0  0.557628  1.0
1084  s04  1.0  0.676330  1.0
1085  s04  1.0  0.956633  1.0
1086  s04  1.0  0.711121  1.0
1087  s04  1.0  0.807502  1.0
1088  s04  1.0  0.641067  1.0
1089  s04  1.0  0.561135  1.0
1090  s04  1.0  0.776435  1.0
1091  s04  1.0  0.553930  1.0
1092  s04  1.0  0.616908  1.0
1093  s04  1.0  0.593337  1.0
1094  s04  1.0  0.536614  1.0
1095  s04  1.0  0.567889  1.0
1096  s04  1.0  0.695524  1.0
1097  s04  1.0  0.599858  1.0
1098  s04  1.0  0.534956  1.0
1099  s04  1.0  0.597388  1.0
1100  s04  1.0  0.485272  1.0
1101  s04  1.0  0.571674  1.0

[424 rows x 4 columns]

In [285]: 

In [285]: plt.close()

In [286]: 
In [286]: 
     ...: #allTogether_df = pd.concat([block1_df, block2_df, block3_df, block4_df, block5_df, block6_df
     ...: , block7_df, block8_df], axis=0)
     ...: 
     ...: 
     ...: #allTogether_df.columns = ['subj', 'pm_acc', 'meanTrial_rt', 'block']
     ...: ax = sea.violinplot(x='block', y = 'meanTrial_rt', data=all_df, palette = my_pal, cut = 0)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('Reaction time (s)')
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_rt.png', dpi = 600)
     ...: plt.close()
     ...: 
     ...: # PM Accuracy
     ...: ax = sea.barplot(x='block', y= 'pm_acc', data=all_df, palette=my_pal, ci = None)
     ...: plt.xlabel('Block')
     ...: plt.ylabel('PM accuracy')
     ...: #sea.set_context(font_scale = 0.5)
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_pmacc.png', dpi = 600)
     ...: plt.close()
     ...: 


















































































































































































































































































In [287]: ax = sea.barplot(x='subj', y= 'og_acc', hue= 'block', data=maintain_df, palette="Blues", ci =
     ...:  None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: sea.despine()
     ...: 

In [288]: plt.savefig(FIGURE_PATH + 'maintain_compare_ogacc.png', dpi = 600)
     ...: plt.close()
     ...: 


In [289]: 

In [289]: ax = sea.barplot(x='subj', y= 'og_acc', hue= 'block', data=mnm_df, palette="Purples", ci = No
     ...: ne)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'mnm_compare_ogacc.png', dpi = 600)
     ...: plt.close()
     ...: 

In [290]: # OG Accuracy
     ...: ax = sea.barplot(x='subj', y= 'og_acc', hue= 'block', data=monitor_df, palette="Reds", ci = N
     ...: one)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'monitor_compare_ogacc.png', dpi = 600)
     ...: plt.close()
     ...: 

In [291]: # OG Accuracy
     ...: ax = sea.barplot(x='subj', y= 'og_acc', hue= 'block', data=all_df, palette=my_pal, ci = None)
     ...: 
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: plt.legend(title = 'Blocks',  
     ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_bysubj_compare_ogacc.png', dpi = 600)
     ...: plt.close() 
     ...:  


In [292]: 

In [292]: # OG Accuracy
     ...: ax = sea.barplot(x='block', y= 'og_acc', data=all_df, palette=my_pal, ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: plt.legend(title = 'Blocks',  
     ...: ^Ibbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_ogacc.png', dpi = 600)
     ...: plt.close() 
     ...: 
No handlers could be found for logger "matplotlib.legend"

In [293]: # OG Accuracy
     ...: ax = sea.barplot(x='block', y= 'og_acc', data=all_df, palette=my_pal, ci = None)
     ...: plt.xlabel('Subject')
     ...: plt.ylabel('OG accuracy')
     ...: ax.tick_params(axis='x', labelsize=7)
     ...: sea.despine()
     ...: plt.savefig(FIGURE_PATH + 'all_together_compare_ogacc.png', dpi = 600)
     ...: plt.close() 
     ...: 

In [294]: block1_df
Out[294]: 
     subj  acc         0    1       block
0     s01  NaN       NaN  NaN  Baseline 1
1     s01  1.0  0.740545  1.0  Baseline 1
2     s01  1.0  0.645820  1.0  Baseline 1
3     s01  1.0  0.478978  1.0  Baseline 1
4     s01  1.0  0.942406  1.0  Baseline 1
5     s01  1.0  0.857848  1.0  Baseline 1
6     s01  1.0  0.820647  1.0  Baseline 1
7     s01  1.0  0.678682  1.0  Baseline 1
8     s01  1.0  0.736166  1.0  Baseline 1
9     s01  1.0  0.562488  1.0  Baseline 1
10    s01  1.0  0.547181  1.0  Baseline 1
11    s01  1.0  0.651102  1.0  Baseline 1
12    s01  1.0  0.973096  1.0  Baseline 1
13    s01  1.0  0.664126  1.0  Baseline 1
14    s01  1.0  0.800906  1.0  Baseline 1
15    s01  1.0  1.090712  1.0  Baseline 1
16    s01  1.0  0.671739  1.0  Baseline 1
17    s01  1.0  0.928950  1.0  Baseline 1
18    s01  1.0  0.668482  1.0  Baseline 1
19    s01  0.0       NaN  0.0  Baseline 1
20    s01  1.0  1.016827  1.0  Baseline 1
21    s01  1.0  0.644921  1.0  Baseline 1
22    s01  1.0  0.853739  1.0  Baseline 1
23    s01  1.0  1.024423  1.0  Baseline 1
24    s01  1.0  0.612399  1.0  Baseline 1
25    s01  1.0  0.693226  1.0  Baseline 1
26    s01  1.0  1.166701  1.0  Baseline 1
27    s01  1.0  1.053213  1.0  Baseline 1
28    s01  1.0  1.266171  1.0  Baseline 1
29    s01  1.0  0.953054  1.0  Baseline 1
...   ...  ...       ...  ...         ...
1072  s04  1.0  0.763318  1.0  Baseline 1
1073  s04  1.0  0.548060  1.0  Baseline 1
1074  s04  1.0  1.122578  1.0  Baseline 1
1075  s04  1.0  0.519714  1.0  Baseline 1
1076  s04  1.0  0.646362  1.0  Baseline 1
1077  s04  1.0  0.510455  1.0  Baseline 1
1078  s04  1.0  0.541207  1.0  Baseline 1
1079  s04  1.0  0.635570  1.0  Baseline 1
1080  s04  1.0  0.636090  1.0  Baseline 1
1081  s04  1.0  0.796140  1.0  Baseline 1
1082  s04  1.0  0.629582  1.0  Baseline 1
1083  s04  1.0  0.557628  1.0  Baseline 1
1084  s04  1.0  0.676330  1.0  Baseline 1
1085  s04  1.0  0.956633  1.0  Baseline 1
1086  s04  1.0  0.711121  1.0  Baseline 1
1087  s04  1.0  0.807502  1.0  Baseline 1
1088  s04  1.0  0.641067  1.0  Baseline 1
1089  s04  1.0  0.561135  1.0  Baseline 1
1090  s04  1.0  0.776435  1.0  Baseline 1
1091  s04  1.0  0.553930  1.0  Baseline 1
1092  s04  1.0  0.616908  1.0  Baseline 1
1093  s04  1.0  0.593337  1.0  Baseline 1
1094  s04  1.0  0.536614  1.0  Baseline 1
1095  s04  1.0  0.567889  1.0  Baseline 1
1096  s04  1.0  0.695524  1.0  Baseline 1
1097  s04  1.0  0.599858  1.0  Baseline 1
1098  s04  1.0  0.534956  1.0  Baseline 1
1099  s04  1.0  0.597388  1.0  Baseline 1
1100  s04  1.0  0.485272  1.0  Baseline 1
1101  s04  1.0  0.571674  1.0  Baseline 1

[424 rows x 5 columns]

In [295]: base_cost = pd.concat([block1_df, block8_df])

In [296]: base_cost
Out[296]: 
     subj  acc         0    1       block
0     s01  NaN       NaN  NaN  Baseline 1
1     s01  1.0  0.740545  1.0  Baseline 1
2     s01  1.0  0.645820  1.0  Baseline 1
3     s01  1.0  0.478978  1.0  Baseline 1
4     s01  1.0  0.942406  1.0  Baseline 1
5     s01  1.0  0.857848  1.0  Baseline 1
6     s01  1.0  0.820647  1.0  Baseline 1
7     s01  1.0  0.678682  1.0  Baseline 1
8     s01  1.0  0.736166  1.0  Baseline 1
9     s01  1.0  0.562488  1.0  Baseline 1
10    s01  1.0  0.547181  1.0  Baseline 1
11    s01  1.0  0.651102  1.0  Baseline 1
12    s01  1.0  0.973096  1.0  Baseline 1
13    s01  1.0  0.664126  1.0  Baseline 1
14    s01  1.0  0.800906  1.0  Baseline 1
15    s01  1.0  1.090712  1.0  Baseline 1
16    s01  1.0  0.671739  1.0  Baseline 1
17    s01  1.0  0.928950  1.0  Baseline 1
18    s01  1.0  0.668482  1.0  Baseline 1
19    s01  0.0       NaN  0.0  Baseline 1
20    s01  1.0  1.016827  1.0  Baseline 1
21    s01  1.0  0.644921  1.0  Baseline 1
22    s01  1.0  0.853739  1.0  Baseline 1
23    s01  1.0  1.024423  1.0  Baseline 1
24    s01  1.0  0.612399  1.0  Baseline 1
25    s01  1.0  0.693226  1.0  Baseline 1
26    s01  1.0  1.166701  1.0  Baseline 1
27    s01  1.0  1.053213  1.0  Baseline 1
28    s01  1.0  1.266171  1.0  Baseline 1
29    s01  1.0  0.953054  1.0  Baseline 1
...   ...  ...       ...  ...         ...
1298  s04  1.0  0.774844  1.0  Baseline 2
1299  s04  1.0  0.560298  1.0  Baseline 2
1300  s04  1.0  0.582982  1.0  Baseline 2
1301  s04  1.0  0.550393  1.0  Baseline 2
1302  s04  1.0  0.645242  1.0  Baseline 2
1303  s04  0.0       NaN  0.0  Baseline 2
1304  s04  1.0  1.067824  1.0  Baseline 2
1305  s04  1.0  0.512443  1.0  Baseline 2
1306  s04  1.0  0.542875  1.0  Baseline 2
1307  s04  1.0  0.517449  1.0  Baseline 2
1308  s04  1.0  0.604332  1.0  Baseline 2
1309  s04  1.0  0.643829  1.0  Baseline 2
1310  s04  1.0  0.555282  1.0  Baseline 2
1311  s04  1.0  0.898563  1.0  Baseline 2
1312  s04  1.0  0.636528  1.0  Baseline 2
1313  s04  1.0  0.708917  1.0  Baseline 2
1314  s04  1.0  0.589029  1.0  Baseline 2
1315  s04  1.0  0.684363  1.0  Baseline 2
1316  s04  1.0  1.052643  1.0  Baseline 2
1317  s04  1.0  0.591856  1.0  Baseline 2
1318  s04  1.0  0.535443  1.0  Baseline 2
1319  s04  1.0  0.565851  1.0  Baseline 2
1320  s04  1.0  0.893359  1.0  Baseline 2
1321  s04  1.0  0.599485  1.0  Baseline 2
1322  s04  1.0  0.695128  1.0  Baseline 2
1323  s04  1.0  0.559185  1.0  Baseline 2
1324  s04  1.0  0.542678  1.0  Baseline 2
1325  s04  1.0  0.869150  1.0  Baseline 2
1326  s04  1.0  0.471247  1.0  Baseline 2
1327  s04  1.0  0.589082  1.0  Baseline 2

[848 rows x 5 columns]

In [297]: base_cost.groupby('subj')['meanTrial_rt'].mean()
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-297-0aa99238bc57> in <module>()
----> 1 base_cost.groupby('subj')['meanTrial_rt'].mean()

/Users/krh2382/anaconda2/lib/python2.7/site-packages/pandas/core/base.pyc in __getitem__(self, key)
    257         else:
    258             if key not in self.obj:
--> 259                 raise KeyError("Column not found: {key}".format(key=key))
    260             return self._gotitem(key, ndim=1)
    261 

KeyError: 'Column not found: meanTrial_rt'

In [298]: base_cost = pd.concat([block1_df, block8_df])
     ...: base_cost.columns = ['subj', 'pm_acc', 'meanTrial_rt', 'og_acc', 'block']
     ...: 

In [299]: base_cost.groupby('subj')['meanTrial_rt'].mean()
Out[299]: 
subj
s01    0.766239
s02    0.862429
s03    0.620275
s04    0.629190
Name: meanTrial_rt, dtype: float64

In [300]: base_cost.groupby('subj')['meanTrial_rt'].mean().mean()
Out[300]: 0.7195331378830351

In [301]: base_cost['meanTrial_rt'].mean()
Out[301]: 0.7173867395067602

In [302]: (0.766239+0.862429 + 0.620275 + 0.629190)/4
Out[302]: 0.71953325

In [303]: (base_cost.groupby('subj')['meanTrial_rt'].mean())mean()
  File "<ipython-input-303-8ebbcbcaa456>", line 1
    (base_cost.groupby('subj')['meanTrial_rt'].mean())mean()
                                                         ^
SyntaxError: invalid syntax


In [304]: (base_cost.groupby('subj')['meanTrial_rt'].mean()).mean()
Out[304]: 0.7195331378830351

In [305]: item = 1

In [306]: all_df['meanTrial_rt']
Out[306]: 
0            NaN
1       0.740545
2       0.645820
3       0.478978
4       0.942406
5       0.857848
6       0.820647
7       0.678682
8       0.736166
9       0.562488
10      0.547181
11      0.651102
12      0.973096
13      0.664126
14      0.800906
15      1.090712
16      0.671739
17      0.928950
18      0.668482
19           NaN
20      1.016827
21      0.644921
22      0.853739
23      1.024423
24      0.612399
25      0.693226
26      1.166701
27      1.053213
28      1.266171
29      0.953054
          ...   
1298    0.774844
1299    0.560298
1300    0.582982
1301    0.550393
1302    0.645242
1303         NaN
1304    1.067824
1305    0.512443
1306    0.542875
1307    0.517449
1308    0.604332
1309    0.643829
1310    0.555282
1311    0.898563
1312    0.636528
1313    0.708917
1314    0.589029
1315    0.684363
1316    1.052643
1317    0.591856
1318    0.535443
1319    0.565851
1320    0.893359
1321    0.599485
1322    0.695128
1323    0.559185
1324    0.542678
1325    0.869150
1326    0.471247
1327    0.589082
Name: meanTrial_rt, Length: 1328, dtype: float64

In [307]: all_df['meanTrial_rt'] - 1
Out[307]: 
0            NaN
1      -0.259455
2      -0.354180
3      -0.521022
4      -0.057594
5      -0.142152
6      -0.179353
7      -0.321318
8      -0.263834
9      -0.437512
10     -0.452819
11     -0.348898
12     -0.026904
13     -0.335874
14     -0.199094
15      0.090712
16     -0.328261
17     -0.071050
18     -0.331518
19           NaN
20      0.016827
21     -0.355079
22     -0.146261
23      0.024423
24     -0.387601
25     -0.306774
26      0.166701
27      0.053213
28      0.266171
29     -0.046946
          ...   
1298   -0.225156
1299   -0.439702
1300   -0.417018
1301   -0.449607
1302   -0.354758
1303         NaN
1304    0.067824
1305   -0.487557
1306   -0.457125
1307   -0.482551
1308   -0.395668
1309   -0.356171
1310   -0.444718
1311   -0.101437
1312   -0.363472
1313   -0.291083
1314   -0.410971
1315   -0.315637
1316    0.052643
1317   -0.408144
1318   -0.464557
1319   -0.434149
1320   -0.106641
1321   -0.400515
1322   -0.304872
1323   -0.440815
1324   -0.457322
1325   -0.130850
1326   -0.528753
1327   -0.410918
Name: meanTrial_rt, Length: 1328, dtype: float64

In [308]: all_df['meanTrial_rt'] - base_cost_VAL
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-308-3a76b8340752> in <module>()
----> 1 all_df['meanTrial_rt'] - base_cost_VAL

NameError: name 'base_cost_VAL' is not defined

In [309]: base_cost_VAL = (base_cost.groupby('subj')['meanTrial_rt'].mean()).mean()
     ...: 

In [310]: all_df['meanTrial_rt'] - base_cost_VAL
Out[310]: 
0            NaN
1       0.021012
2      -0.073713
3      -0.240555
4       0.222873
5       0.138315
6       0.101114
7      -0.040851
8       0.016633
9      -0.157045
10     -0.172352
11     -0.068431
12      0.253563
13     -0.055407
14      0.081373
15      0.371179
16     -0.047794
17      0.209417
18     -0.051051
19           NaN
20      0.297294
21     -0.074612
22      0.134206
23      0.304890
24     -0.107134
25     -0.026307
26      0.447168
27      0.333680
28      0.546638
29      0.233521
          ...   
1298    0.055311
1299   -0.159235
1300   -0.136551
1301   -0.169140
1302   -0.074291
1303         NaN
1304    0.348291
1305   -0.207090
1306   -0.176658
1307   -0.202084
1308   -0.115201
1309   -0.075704
1310   -0.164251
1311    0.179030
1312   -0.083005
1313   -0.010616
1314   -0.130504
1315   -0.035170
1316    0.333110
1317   -0.127677
1318   -0.184090
1319   -0.153682
1320    0.173826
1321   -0.120048
1322   -0.024405
1323   -0.160348
1324   -0.176855
1325    0.149617
1326   -0.248286
1327   -0.130451
Name: meanTrial_rt, Length: 1328, dtype: float64

In [311]: (base_cost.groupby('subj')['meanTrial_rt'].mean())
Out[311]: 
subj
s01    0.766239
s02    0.862429
s03    0.620275
s04    0.629190
Name: meanTrial_rt, dtype: float64

In [312]: all_df
