meanBIC2=summaryBy(BIC~polyFit,data=boot2,FUN=c(mean,se))
names(meanBIC2)=c("PolyFit","BIC","se")
BICmeans2=ggplot(meanBIC2,aes(x=PolyFit,y=BIC,fill=PolyFit)) + geom_bar(stat="identity") + scale_y_continuous(name="Average BIC Value") + geom_errorbar(aes(ymin=BIC-se,ymax=BIC+se),width=.3)
BICmeans2=BICmeans2+coord_cartesian(ylim=c(750,800)) + scale_fill_discrete(labels=c("x","x^2","x^3","x^4","x^5")) + theme_bw() + theme(legend.position="bottom") + theme(axis.text.x = element_text(size=14), axis.title.x = element_text(face="bold",color="black",size=18)) +
theme(axis.text.y = element_text(size=14), axis.title.y = element_text(face="bold", color="black", size=18)) +
theme(panel.grid.minor=element_blank()) +
ggtitle("Trial Type 2: BIC") +
theme(plot.title = element_text(color="black",size=16,face="bold",hjust=.5)) + scale_x_discrete(name="BIC per iteration",labels=c("1","2","3","4","5"))
grid.arrange(bestFit2,BICmeans2,ncol=1)
write.csv(bootBeta, file="byTrialBetaOut.csv")write.csv(bootBeta, file="byTrialBetaOut.csv")
source('~/Desktop/polyFit_z.R')
source('~/Desktop/polyFit_z.R')
source('~/Desktop/polyFit_z.R')
install.packages("doBy", dependencies = TRUE)
source('~/Desktop/polyFit_z.R')
source('~/Desktop/polyFit_z.R')
getwd()
install.packages("lme4")
library(lme4)
load_fname <- '~/Dropbox (LewPeaLab)/BEHAVIOR/RepO/data_output/load_type.csv'
mcb_fname <- '~/Dropbox (LewPeaLab)/BEHAVIOR/RepO/data_output/mcb_acc.csv'
vis_fname <- '~/Dropbox (LewPeaLab)/BEHAVIOR/RepO/data_output/vis_acc.csv'
sem_fname <- '~/Dropbox (LewPeaLab)/BEHAVIOR/RepO/data_output/sem_acc.csv'
pho_fname <- '~/Dropbox (LewPeaLab)/BEHAVIOR/RepO/data_output/pho_acc.csv'
load_df <- read.csv(load_fname)
mcb_df <- read.csv(mcb_fname)
vis_df <- read.csv(vis_fname)
sem_df <- read.csv(sem_fname)
pho_df <- read.csv(pho_fname)
mcb_df
lme(mcb ~ clpsd_cond, random=~1|subj, data=mcb_df)
library(nlme)
library(multcomp)
library(nlme)
library(multcomp)
model_lme <- lme(mcb ~ clpsd_cond, random=~1|subj, data=mcb_df)
model_lme
anova(model_lme)
nlme()
nlme(model_lme, data=mcb_Df)
nlme(model_lme, data=mcb_df)
class(model_lme)
nlme(clpsd_cond ~ model_lme, data=mcb_df)
nlme(clpsd_cond ~ model_lme, data=mcb_df, fixed = mcb ~ clpsd_cond)
clpsd_cond ~ model_lme
model_lme
clpsd_cond
clps_cond
mcb _ clpsd_cond
mcb ~ clpsd_cond
library(lme4)
summary(mcb_df)
summary(model_lme)
anova(model_lme)
mcb_df
summary(model_lme)
anova(model_lme)
aov(model_lme)
aov(model_lme, data = mcb_df)
mcb_df <- aov(model_lme, data=mcb_df)
mcb_df
summary(mcb_df)
library(nlme)
library(multcomp)
#################
##  load data  ##
#################
all_fname <- '~/monitain/analysis/csvs/all_bySubj.csv'
pmCost_fname <- '~/monitain/analysis/csvs/pm_cost_bySubj.csv'
baseline_fname <- '~/monitain/analysis/csvs/baseline.csv'
maintain_fname <- '~/monitain/analysis/csvs/maintain.csv'
monitor_fname <- '~/monitain/analysis/csvs/monitor.csv'
mnm_fname <- '~/monitain/analysis/csvs/mnm.csv'
baseline_PM_fname <- '~/monitain/analysis/csvs/baseline_PM.csv'
maintain_PM_fname <- '~/monitain/analysis/csvs/maintain_PM.csv'
monitor_PM_fname <- '~/monitain/analysis/csvs/monitor_PM.csv'
mnm_PM_fname <- '~/monitain/analysis/csvs/mnm_PM.csv'
all_df <- read.csv(all_fname)
pmCost_df <- read.csv(pmCost_fname)
baseline_df <- read.csv(baseline_fname)
maintain_df <- read.csv(maintain_fname)
monitor_df <- read.csv(monitor_fname)
mnm_df <- read.csv(mnm_fname)
baseline_PM_df <- read.csv(baseline_PM_fname)
maintain_PM_df <- read.csv(maintain_PM_fname)
monitor_PM_df <- read.csv(monitor_PM_fname)
mnm_PM_df <- read.csv(mnm_PM_fname)
##########################################
##  rmANOVA for block type across subjs  ##
##########################################
# load_aov <- aov(acc ~ load_type + Error(subj), data=load_df)
# summary(load_aov)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
anova(all_lme)
summary(glht(all_lme,
linfct=mcp(load_type="Tukey")),
test=adjusted(type="bonferroni"))
library(nlme)
library(multcomp)
all_fname <- '~/monitain/analysis/csvs/all_bySubj.csv'
pmCost_fname <- '~/monitain/analysis/csvs/pm_cost_bySubj.csv'
baseline_fname <- '~/monitain/analysis/csvs/baseline.csv'
maintain_fname <- '~/monitain/analysis/csvs/maintain.csv'
monitor_fname <- '~/monitain/analysis/csvs/monitor.csv'
mnm_fname <- '~/monitain/analysis/csvs/mnm.csv'
baseline_PM_fname <- '~/monitain/analysis/csvs/baseline_PM.csv'
maintain_PM_fname <- '~/monitain/analysis/csvs/maintain_PM.csv'
monitor_PM_fname <- '~/monitain/analysis/csvs/monitor_PM.csv'
mnm_PM_fname <- '~/monitain/analysis/csvs/mnm_PM.csv'
all_df <- read.csv(all_fname)
pmCost_df <- read.csv(pmCost_fname)
all_fname <- '~/monitain/analysis/output/csvs/all_bySubj.csv'
pmCost_fname <- '~/monitain/analysis/output/csvs/pm_cost_bySubj.csv'
baseline_fname <- '~/monitain/analysis/output/csvs/baseline.csv'
maintain_fname <- '~/monitain/analysis/output/csvs/maintain.csv'
monitor_fname <- '~/monitain/analysis/output/csvs/monitor.csv'
mnm_fname <- '~/monitain/analysis/output/csvs/mnm.csv'
baseline_PM_fname <- '~/monitain/analysis/output/csvs/baseline_PM.csv'
maintain_PM_fname <- '~/monitain/analysis/output/csvs/maintain_PM.csv'
monitor_PM_fname <- '~/monitain/analysis/output/csvs/monitor_PM.csv'
mnm_PM_fname <- '~/monitain/analysis/output/csvs/mnm_PM.csv'
all_df <- read.csv(all_fname)
pmCost_df <- read.csv(pmCost_fname)
baseline_df <- read.csv(baseline_fname)
maintain_df <- read.csv(maintain_fname)
monitor_df <- read.csv(monitor_fname)
mnm_df <- read.csv(mnm_fname)
baseline_PM_df <- read.csv(baseline_PM_fname)
maintain_PM_df <- read.csv(maintain_PM_fname)
monitor_PM_df <- read.csv(monitor_PM_fname)
mnm_PM_df <- read.csv(mnm_PM_fname)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
anova(all_lme)
summary(glht(all_lme,
linfct=mcp(load_type="Tukey")),
test=adjusted(type="bonferroni"))
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
library(nlme)
library(multcomp)
all_fname <- '~/monitain/analysis/output/csvs/all_bySubj.csv'
pmCost_fname <- '~/monitain/analysis/output/csvs/pm_cost_bySubj.csv'
baseline_fname <- '~/monitain/analysis/output/csvs/baseline.csv'
maintain_fname <- '~/monitain/analysis/output/csvs/maintain.csv'
monitor_fname <- '~/monitain/analysis/output/csvs/monitor.csv'
mnm_fname <- '~/monitain/analysis/output/csvs/mnm.csv'
baseline_PM_fname <- '~/monitain/analysis/output/csvs/baseline_PM.csv'
maintain_PM_fname <- '~/monitain/analysis/output/csvs/maintain_PM.csv'
monitor_PM_fname <- '~/monitain/analysis/output/csvs/monitor_PM.csv'
mnm_PM_fname <- '~/monitain/analysis/output/csvs/mnm_PM.csv'
all_df <- read.csv(all_fname)
pmCost_df <- read.csv(pmCost_fname)
baseline_df <- read.csv(baseline_fname)
maintain_df <- read.csv(maintain_fname)
monitor_df <- read.csv(monitor_fname)
mnm_df <- read.csv(mnm_fname)
baseline_PM_df <- read.csv(baseline_PM_fname)
maintain_PM_df <- read.csv(maintain_PM_fname)
monitor_PM_df <- read.csv(monitor_PM_fname)
mnm_PM_df <- read.csv(mnm_PM_fname)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
all_df
View(all_df)
View(all_df)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
all_df.pm_acc
all_df[pm_acc]
na.pass(all_df)
View(all_df)
View(all_df)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
na.exclude(all_df)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = all_df)
all_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = na.exclude(all_df))
anova(all_lme)
summary(glht(all_lme,
linfct=mcp(load_type="Tukey")),
test=adjusted(type="bonferroni"))
summary(glht(all_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
pm_acc_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(pm_acc_lme)
summary(glht(pm_acc_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
og_acc_lme <- lme(pm_acc ~ og_acc, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(og_acc_lme)
summary(glht(og_acc_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
og_acc_lme <- lme(pm_acc ~ og_acc, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(og_acc_lme)
summary(glht(og_acc_lme,
linfct=mcp(og_acc="Tukey")),
test=adjusted(type="bonferroni"))
og_acc_lme <- lme(og_acc ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(og_acc_lme)
summary(glht(og_acc_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
rt_lme <- lme(meanTrial_rt ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(rt_lme)
summary(glht(rt_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
pmCost_lme <- lme(pmCost ~ blockType, random=~1|subj, data = pmCost_df) #drop out rows with missing values
anova(pmCost_lme)
summary(glht(pmCost_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
pmCost_lme <- lme(pmCost ~ blockType, random=~1|subj, data = pmCost_df) #drop out rows with missing values
pmCost_lme <- lme(pm_cost ~ blockType, random=~1|subj, data = pmCost_df) #drop out rows with missing values
pmCost_lme <- lme(pm_cost ~ blockType, random=~1|subj, data = na.exclude(pmCost_df)) #drop out rows with missing values
anova(pmCost_lme)
summary(glht(pmCost_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
library(nlme)
library(multcomp)
all_fname <- '~/monitain/analysis/output/csvs/all_bySubj.csv'
pmCost_fname <- '~/monitain/analysis/output/csvs/pm_cost_bySubj.csv'
baseline_fname <- '~/monitain/analysis/output/csvs/baseline.csv'
maintain_fname <- '~/monitain/analysis/output/csvs/maintain.csv'
monitor_fname <- '~/monitain/analysis/output/csvs/monitor.csv'
mnm_fname <- '~/monitain/analysis/output/csvs/mnm.csv'
baseline_PM_fname <- '~/monitain/analysis/output/csvs/baseline_PM.csv'
maintain_PM_fname <- '~/monitain/analysis/output/csvs/maintain_PM.csv'
monitor_PM_fname <- '~/monitain/analysis/output/csvs/monitor_PM.csv'
mnm_PM_fname <- '~/monitain/analysis/output/csvs/mnm_PM.csv'
all_df <- read.csv(all_fname)
pmCost_df <- read.csv(pmCost_fname)
baseline_df <- read.csv(baseline_fname)
maintain_df <- read.csv(maintain_fname)
monitor_df <- read.csv(monitor_fname)
mnm_df <- read.csv(mnm_fname)
baseline_PM_df <- read.csv(baseline_PM_fname)
maintain_PM_df <- read.csv(maintain_PM_fname)
monitor_PM_df <- read.csv(monitor_PM_fname)
mnm_PM_df <- read.csv(mnm_PM_fname)
na.exclude(all_df)
pm_acc_lme <- lme(pm_acc ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(pm_acc_lme)
summary(glht(pm_acc_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
og_acc_lme <- lme(og_acc ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(og_acc_lme)
summary(glht(og_acc_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
rt_lme <- lme(meanTrial_rt ~ blockType, random=~1|subj, data = na.exclude(all_df)) #drop out rows with missing values
anova(rt_lme)
summary(glht(rt_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
pmCost_lme <- lme(pm_cost ~ blockType, random=~1|subj, data = na.exclude(pmCost_df)) #drop out rows with missing values
anova(pmCost_lme)
summary(glht(pmCost_lme,
linfct=mcp(blockType="Tukey")),
test=adjusted(type="bonferroni"))
getwd()
setwd('/Users/krh2382/monitain/analysis/output/csvs')
getwd()
data_bytrial=read.csv("ALL_BYTRIAL.csv")
data_bytrial
result <- lmer(pm_acc ~ pm_cost + (1|subj), data = data_bytrial, family=binomial(link="logit"))
library(lme4)
result <- lmer(pm_acc ~ pm_cost + (1|subj), data = data_bytrial, family=binomial(link="logit"))
result <- glmer(pm_acc ~ pm_cost + (1|subj), data = data_bytrial, family=binomial(link="logit"))
summary(result)
data_bytrial
subj1 = read.csv('subj1.csv')
getwd()
subj1 = read.csv('subj1.csv')
s1_m <- glmer(pm_acc ~ pm_cost + (1|blockType),  data = subj1, family=binomial(link="logit"))
s1_lm <- glmer(pm_acc ~ pm_cost + (1|blockType),  data = subj1, family=binomial(link="logit"))
s1_lm <- glmer(pm_acc ~ pm_cost + (1|blockType),  data = subj1, family=binomial(link="logit"))
summary(s1_lm)
result <- glmer(pm_acc ~ pm_cost + trialType + (1|subj), data = data_bytrial, family=binomial(link="logit"))
result <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_bytrial, family=binomial(link="logit"))
summary(result)
lme_result <- lme(pm_acc ~ blockType + pm_cost + (1|subj), data = data_bytrial, family = binomial(link="logit"))
library(nlme)
lme_result <- lme(pm_acc ~ blockType + pm_cost + (1|subj), data = data_bytrial, family = binomial(link="logit"))
str = data_bytrial
str
lme_result <- glmer(pm_acc ~ blockType + pm_cost + (1|subj), data = data_bytrial, family=binomial(link="logit"))
summary(lme_result)
lme_result <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_bytrial, family=binomial(link="logit"))
summary(lme_result)
lme_result <- glmer(pm_acc ~ pm_cost + blockType + (pm_cost|subj), data = data_bytrial, family=binomial(link="logit"))
summary(lme_result)
lme_result <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_bytrial, family=binomial(link="logit"))
s1_lm <- glmer(pm_acc ~ pm_cost + blockType,  data = subj1, family=binomial(link="logit"))
s1_lm <- glmer(pm_acc ~ pm_cost + (1 | blockType),  data = subj1, family=binomial(link="logit"))
summary(s1_lm)
s1_lm
data_bytrial
subj1
data_bytrial[data_bytrial$subj == 's01']
data_bytrial[data_bytrial$subj == 's01',]
for (subj in 0:n_subjs) {
print(subj)
}
n_subjs = 40;
for (subj in 0:n_subjs) {
print(subj)
}
n_subjs = 43;
for (subj in 0:n_subjs) {
print(subj)
}
s1_lm
sl_lm.intercept
s1_lm.2var
subj1
subj1.type
subj1.type()
summary(subj1)
summary(data_bytrial)
for (subj in data_bytrial.subj) {}
data_bytrial.subj
data_bytrial['subj']
for (subj in data_bytrial['subj']) {}
for (subj in data_bytrial['subj']) {
print (subj) }
for (subj in levels(data_bytrial['subj'])) {}
for (subj in levels(data_bytrial['subj'])) {
print(subj) }
for (subj in levels(data_bytrial['subj'])) {
print (subj) }
for (subj in levels(data_bytrial['subj'])) print (subj)
levels(data_bytrial)
levels(data_bytrial['subj'])
levels(data_bytrial$subj)
for (subj in levels(data_bytrial$subj)) { print (subj)}
subj1
for (subj in levels(data_bytrial$subj)) {
data_subj = data_bytrial[data_bytrial$subj == subj,]
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
subj
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
data_subj
subj
for (subj in levels(data_bytrial$subj)) {
data_subj = data_bytrial[data_bytrial$subj == subj,]
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
lme_result
data_bytrial$subj
length(data_bytrial$subj)
length(levels(data_bytrial$subj))
n_subjs = length(levels(data_bytrial$subj));
l
lme_result = vector(mode = "list", length = )
lme_result
for (subj in levels(data_bytrial$subj)) {
data_subj = data_bytrial[data_bytrial$subj == subj,]
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
data_subj = data_bytrial[data_bytrial$subj == subj,]
subj
lme_result = vector(mode = "list", length = n_subjs)
lme_result
d
# Load data
data_bytrial=read.csv("ALL_BYTRIAL.csv")
# Find total number of subjects (takes excluded subjs into account)
n_subjs = length(levels(data_bytrial$subj))
# Create empty list to store linear mixed effect model resutls
lme_result = vector(mode = "list", length = n_subjs)
# Loop through subjects in dataset
for (subj in levels(data_bytrial$subj)) {
data_subj = data_bytrial[data_bytrial$subj == subj,]
lme_result[[subj]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
data_subj
data_subj = data_bytrial[data_bytrial$subj == subj, data_bytrial$blockType != 'Baseline', ]
data_subj = data_bytrial[data_bytrial$subj == subj, data_bytrial$blockType != 'Baseline' ]
data_subj = data_bytrial[data_bytrial$subj == subj, !(data_bytrial$blockType == 'Baseline'), ]
data_subj = data_bytrial[data_bytrial$subj == subj, ]
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baselin')
data_subj = data_bytrial[data_bytrial$subj == subj, !(data_bytrial$blockType == 'Baseline'), ]
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
}
data_subj
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType + (1|subj), data = data_subj, family=binomial(link="logit"))
}
data_subj
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType, data = data_subj, family=binomial(link="logit"))
}
glmer(pm_acc ~ pm_cost + blockType, data = data_subj, family=binomial(link="logit"))
glmer(pm_acc ~ ., data = data_subj, family=binomial(link="logit"))
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost, data = data_subj, family=binomial(link="logit"))
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + 1| subj, data = data_subj, family=binomial(link="logit"))
glmer(pm_acc ~ pm_cost + 1| subj, data = data_bytrial, family=binomial(link="logit"))
summary(glmer(pm_acc ~ pm_cost + 1| subj, data = data_bytrial, family=binomial(link="logit")))
summary(glmer(pm_acc ~ pm_cost + blockType + 1| subj, data = data_bytrial, family=binomial(link="logit")))
summary(glmer(pm_acc ~ pm_cost + blockType + subj + 1| blockType, data = data_bytrial, family=binomial(link="logit")))
glmer(pm_acc ~ pm_cost + blockType + subj + (1| blockType), data = data_bytrial, family=binomial(link="logit"))
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType + (1| subj), data = data_subj, family=binomial(link="logit"))
}
# Loop through subjects in dataset
for (subj_i in levels(data_bytrial$subj)) {
data_subj = subset(data_bytrial, subj==subj_i & blockType != 'Baseline')
lme_result[[subj_i]] <- glmer(pm_acc ~ pm_cost + blockType + (1| meanTrial_rt), data = data_subj, family=binomial(link="logit"))
}
maintain_trials = subset(data_bytrial, blockType == 'Maintain')
maintain_trials
lm1 <- lmer(pm_acc ~ pm_cost + (1+pm_cost | subj), data = maintain_trials, family=binomial(link="logit") )
lm1 <- glmer(pm_acc ~ pm_cost + (1+pm_cost | subj), data = maintain_trials, family=binomial(link="logit") )
summary(lm1)
monitor_trials = subset(data_bytrial, blockType == 'Monitor')
mnm_trials = subset(data_bytrial, blockType == 'MnM')
lm2_maintain <- glmer(pm_acc ~ pm_cost + (1 | subj), data = maintain_trials, family=binomial(link="logit") )
maintain_trials = subset(data_bytrial, blockType == 'Maintain')
monitor_trials = subset(data_bytrial, blockType == 'Monitor')
mnm_trials = subset(data_bytrial, blockType == 'MnM')
lm1_maintain <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = maintain_trials, family=binomial(link="logit") )
lm2_maintain <- glmer(pm_acc ~ pm_cost + (1 | subj), data = maintain_trials, family=binomial(link="logit") )
lm1_monitor <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = monitor_trials, family=binomial(link="logit") )
lm2_monitor <- glmer(pm_acc ~ pm_cost + (1 | subj), data = monitor_trials, family=binomial(link="logit") )
lm1_maintain <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = mnm_trials, family=binomial(link="logit") )
lm1_mnm <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = mnm_trials, family=binomial(link="logit") )
lm2_mnm <- glmer(pm_acc ~ pm_cost + (1 | subj), data = mnm_trials, family=binomial(link="logit") )
summary(lm1_maintain)
summary(lm2_maintain)
summary(lm1_monitor)
summary(lm2_monitor)
summary(lm1_mnm)
summary(lm2_mnm)
anova(lme1_maintain)
anova(lm1_maintain)
anova(lm2_maintain)
dati = c(lm1_maintain, lm2_maintain)
dati
aov(dati)
anova(dati)
aov(pm_acc ~ pm_cost, data = dati)
anov(pm_acc ~ pm_cost, data = dati)
anova(pm_acc ~ pm_cost, data = dati)
anova(lm1_maintain, lm2_maintain)
anova(lm1_monitor, lm2_monitor)
lm1_maintain <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = maintain_trials, family=binomial(link="logit") )
lm2_maintain <- glmer(pm_acc ~ pm_cost + (1 | subj), data = maintain_trials, family=binomial(link="logit") )
anova(lm1_maintain, lm2_maintain)
anova(lm1_monitor, lm2_monitor)
anova(lm1_monitor, lm2_mnm)
anova(lm1_mnm, lm2_mnm)
aov(lm1_maintain, lm2_maintain)
aov(lm1_monitor, lm2_monitor)
summary(anova(lm1_maintain, lm2_maintain))
(anova(lm1_maintain, lm2_maintain))
maintain_trials = subset(data_bytrial, blockType == 'Maintain')
monitor_trials = subset(data_bytrial, blockType == 'Monitor')
mnm_trials = subset(data_bytrial, blockType == 'MnM')
lm1_maintain <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = maintain_trials, family=binomial(link="logit") )
lm2_maintain <- glmer(pm_acc ~ pm_cost + (1 | subj), data = maintain_trials, family=binomial(link="logit") )
anova(lm1_maintain, lm2_maintain)
lm1_monitor <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = monitor_trials, family=binomial(link="logit") )
lm2_monitor <- glmer(pm_acc ~ pm_cost + (1 | subj), data = monitor_trials, family=binomial(link="logit") )
anova(lm1_monitor, lm2_monitor)
lm1_mnm <- glmer(pm_acc ~ pm_cost + (1 + pm_cost | subj), data = mnm_trials, family=binomial(link="logit") )
lm2_mnm <- glmer(pm_acc ~ pm_cost + (1 | subj), data = mnm_trials, family=binomial(link="logit") )
anova(lm1_mnm, lm2_mnm)
summary(anova(lm1_mnm, lm2_mnm))
anova_mnm = summary(anova(lm1_mnm, lm2_mnm))
TukeyHSD(anova_mnm, conf.level=0.95)
library(agridat)
library(ggplot2)
library(plotrix)
library(moments)
library(car)
library(fitdistrplus)
library(nlme)
library(multcomp)
library(epade)
library(lme4)
TukeyHSD(anova_mnm, conf.level=0.95)
ggplot(maintain_trials, aes(x=pm_cost, y = pm_acc))
ggplot(anova_mnm, aes(x=pm_cost, y = pm_acc))
TukeyHSD(anova_mnm)
maintain_anova = anova(lm1_maintain, lm2_maintain)
monitor_anova = anova(lm1_monitor, lm2_monitor)
mnm_anova = anova(lm1_mnm, lm2_mnm)
maintain_anova
monitor_anova
mnm_anova
